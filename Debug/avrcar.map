Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
                              ./Tasks/Task_01.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
                              ./Tasks/Task_01.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fixunssfsi.o)
                              ./Tasks/Task_02.o (__fixunssfsi)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_mul_sf.o)
                              ./Tasks/Task_02.o (__mulsf3)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_gt_sf.o)
                              ./Tasks/Task_02.o (__gtsf2)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_lt_sf.o)
                              ./Tasks/Task_02.o (__ltsf2)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_sf_to_si.o)
                              /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_gt_sf.o) (__fpcmp_parts_f)
/usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(sprintf.o)
                              ./Tasks/Task_02.o (sprintf)
/usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(sprintf.o) (vfprintf)
/usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o) (__ultoa_invert)

Allocating common symbols
Common symbol       size              file

USART0_Vel          0x1               ./USART.o
mtvleli             0x4               ./Tasks/Task_02.o
SAVE                0x1               ./Tasks/Task_03.o
USART2_Vel          0x1               ./USART_2.o
all                 0x4               ./Tasks/Task_02.o
USART2_buffer       0xfa              ./USART_2.o
MyVel               0x4               ./Tasks/Task_02.o
USART_buffer        0x80              ./USART.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o
LOAD ./Tasks/Task_01.o
LOAD ./Tasks/Task_02.o
LOAD ./Tasks/Task_03.o
LOAD ./Tasks/Task_04.o
LOAD ./Tasks/Task_05.o
LOAD ./Tasks/Task_06.o
LOAD ./USART.o
LOAD ./USART_2.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1b26
 *(.vectors)
 .vectors       0x00000000       0x8c /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o
                0x000000ca                __vector_22
                0x000000ca                __vector_28
                0x000000ca                __vector_1
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_29
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
                0x000000ca                __vector_20
 .text          0x000000ce       0x86 ./Tasks/Task_01.o
                0x000000ce                Task_01
 .text          0x00000154      0x2ba ./Tasks/Task_02.o
                0x00000154                Task_02
                0x00000226                gamura_init
                0x00000258                gamura
 .text          0x0000040e       0xe0 ./Tasks/Task_03.o
                0x0000040e                Task_03
 .text          0x000004ee       0xd0 ./Tasks/Task_04.o
                0x000004ee                Task_04
 .text          0x000005be      0x1be ./Tasks/Task_05.o
                0x000005be                Task_05
 .text          0x0000077c       0xe4 ./Tasks/Task_06.o
                0x0000077c                Task_06
 .text          0x00000860       0x34 ./USART.o
                0x00000860                USART_Init
 .text          0x00000894      0x17c ./USART_2.o
                0x00000894                USART2_Init
                0x000008ca                USART2_Transmit
                0x00000914                __vector_32
                0x0000099c                __vector_30
 .text          0x00000a10       0x9c ./main.o
                0x00000a10                main
 .text          0x00000aac        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 .text          0x00000aac        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
 .text          0x00000aac        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
 .text          0x00000aac       0x5a /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fixunssfsi.o)
                0x00000aac                __fixunssfsi
 .text          0x00000b06      0x35c /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o)
                0x00000daa                __addsf3
                0x00000e02                __subsf3
 .text          0x00000e62      0x1ca /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_mul_sf.o)
                0x00000e62                __mulsf3
 .text          0x0000102c       0x5e /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_gt_sf.o)
                0x0000102c                __gtsf2
 .text          0x0000108a       0x5e /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_ge_sf.o)
                0x0000108a                __gesf2
 .text          0x000010e8       0x5e /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_lt_sf.o)
                0x000010e8                __ltsf2
 .text          0x00001146       0x9e /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_sf_to_si.o)
                0x00001146                __fixsfsi
 .text          0x000011e4        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_thenan_sf.o)
 .text          0x000011e4        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
 .text          0x000011e4        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
 .text          0x000011e4      0x182 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_pack_sf.o)
                0x000011e4                __pack_f
 .text          0x00001366       0xde /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_unpack_sf.o)
                0x00001366                __unpack_f
 .text          0x00001444       0xc2 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fpcmp_parts_sf.o)
                0x00001444                __fpcmp_parts_f
 .text          0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(sprintf.o)
 .text          0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o)
 .text          0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen_P.o)
 .text          0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen.o)
 .text          0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(fputc.o)
 .text          0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(ultoa_invert.o)
                0x00001506                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc   0x00001506        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x00001506       0x38 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
                0x00001506                __prologue_saves__
 .text.libgcc.builtins
                0x0000153e        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x0000153e        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x0000153e        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x0000153e        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc   0x0000153e        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x0000153e       0x36 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
                0x0000153e                __epilogue_restores__
 .text.libgcc.builtins
                0x00001574        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x00001574        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
 .text.avr-libc
                0x00001574       0x62 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(sprintf.o)
                0x00001574                sprintf
 .text.avr-libc
                0x000015d6      0x40c /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o)
                0x000015d6                vfprintf
 .text.avr-libc
                0x000019e2       0x16 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen_P.o)
                0x000019e2                strnlen_P
 .text.avr-libc
                0x000019f8       0x16 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen.o)
                0x000019f8                strnlen
 .text.avr-libc
                0x00001a0e       0x58 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(fputc.o)
                0x00001a0e                fputc
 .text.avr-libc
                0x00001a66       0xbc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(ultoa_invert.o)
                0x00001a66                __ultoa_invert
                0x00001b22                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001b22        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
                0x00001b22                exit
                0x00001b22                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001b22        0x4 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00001b26                _etext = .

.data           0x00800100       0x3a load address 0x00001b26
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x0 ./Tasks/Task_01.o
 .data          0x00800100        0x0 ./Tasks/Task_02.o
 .data          0x00800100        0x0 ./Tasks/Task_03.o
 .data          0x00800100        0x0 ./Tasks/Task_04.o
 .data          0x00800100        0x0 ./Tasks/Task_05.o
 .data          0x00800100        0x0 ./Tasks/Task_06.o
 .data          0x00800100        0x0 ./USART.o
 .data          0x00800100        0x0 ./USART_2.o
 .data          0x00800100        0x0 ./main.o
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fixunssfsi.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_mul_sf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_gt_sf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_ge_sf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_lt_sf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_sf_to_si.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_thenan_sf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_pack_sf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_unpack_sf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fpcmp_parts_sf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(sprintf.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen_P.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(fputc.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(ultoa_invert.o)
 *(.data*)
 *(.rodata)
 .rodata        0x00800100       0x18 ./Tasks/Task_01.o
 .rodata        0x00800118        0x9 ./Tasks/Task_02.o
 .rodata        0x00800121       0x10 ./Tasks/Task_05.o
 .rodata        0x00800131        0x8 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_thenan_sf.o)
                0x00800131                __thenan_sf
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080013a                . = ALIGN (0x2)
 *fill*         0x00800139        0x1 00
                0x0080013a                _edata = .
                0x0080013a                PROVIDE (__data_end, .)

.bss            0x0080013a      0x19a
                0x0080013a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080013a        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o
 .bss           0x0080013a        0x1 ./Tasks/Task_01.o
                0x0080013a                Task_01_Step
 .bss           0x0080013b        0x1 ./Tasks/Task_02.o
                0x0080013b                Task_02_Step
 .bss           0x0080013c        0x1 ./Tasks/Task_03.o
                0x0080013c                Task_03_Step
 .bss           0x0080013d        0x3 ./Tasks/Task_04.o
                0x0080013d                Task_04_Step
                0x0080013e                a
 .bss           0x00800140        0x4 ./Tasks/Task_05.o
                0x00800140                Task_05_Step
                0x00800141                j
                0x00800143                bla
 .bss           0x00800144        0x3 ./Tasks/Task_06.o
                0x00800144                Task_06_Step
                0x00800145                b
 .bss           0x00800147        0x2 ./USART.o
                0x00800147                USART_Positone
                0x00800148                USART_Busy
 .bss           0x00800149        0x2 ./USART_2.o
                0x00800149                USART2_Positone
                0x0080014a                USART2_Busy
 .bss           0x0080014b        0x0 ./main.o
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_exit.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_copy_data.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fixunssfsi.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_mul_sf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_gt_sf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_ge_sf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_lt_sf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_sf_to_si.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_thenan_sf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_prologue.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_epilogue.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_pack_sf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_unpack_sf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fpcmp_parts_sf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(sprintf.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen_P.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(fputc.o)
 .bss           0x0080014b        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(ultoa_invert.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080014b        0xc ./Tasks/Task_02.o
                0x0080014b                mtvleli
                0x0080014f                all
                0x00800153                MyVel
 COMMON         0x00800157        0x1 ./Tasks/Task_03.o
                0x00800157                SAVE
 COMMON         0x00800158       0x81 ./USART.o
                0x00800158                USART0_Vel
                0x00800159                USART_buffer
 COMMON         0x008001d9       0xfb ./USART_2.o
                0x008001d9                USART2_Vel
                0x008001da                USART2_buffer
                0x008002d4                PROVIDE (__bss_end, .)
                0x00001b26                __data_load_start = LOADADDR (.data)
                0x00001b60                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002d4        0x0
                0x008002d4                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002d4                PROVIDE (__noinit_end, .)
                0x008002d4                _end = .
                0x008002d4                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x37f8
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o
 .stab          0x000006cc      0x45c ./Tasks/Task_01.o
                                0x468 (size before relaxing)
 .stab          0x00000b28      0x438 ./Tasks/Task_02.o
                                0x660 (size before relaxing)
 .stab          0x00000f60      0x300 ./Tasks/Task_03.o
                                0x528 (size before relaxing)
 .stab          0x00001260      0x294 ./Tasks/Task_04.o
                                0x4bc (size before relaxing)
 .stab          0x000014f4      0x384 ./Tasks/Task_05.o
                                0x5ac (size before relaxing)
 .stab          0x00001878      0x294 ./Tasks/Task_06.o
                                0x4bc (size before relaxing)
 .stab          0x00001b0c      0x1f8 ./USART.o
                                0x414 (size before relaxing)
 .stab          0x00001d04      0x2d0 ./USART_2.o
                                0x4f8 (size before relaxing)
 .stab          0x00001fd4      0x2b8 ./main.o
                                0x4e0 (size before relaxing)
 .stab          0x0000228c      0x39c /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(sprintf.o)
                                0x3e4 (size before relaxing)
 .stab          0x00002628      0xa44 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o)
                                0xc24 (size before relaxing)
 .stab          0x0000306c       0x9c /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen_P.o)
                                 0xa8 (size before relaxing)
 .stab          0x00003108       0x9c /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(strnlen.o)
                                 0xa8 (size before relaxing)
 .stab          0x000031a4      0x1d4 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(fputc.o)
                                0x3b4 (size before relaxing)
 .stab          0x00003378      0x480 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(ultoa_invert.o)
                                0x48c (size before relaxing)

.stabstr        0x00000000     0x16a1
 *(.stabstr)
 .stabstr       0x00000000     0x16a1 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 ./Tasks/Task_01.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 ./Tasks/Task_02.o
 .comment       0x00000000       0x12 ./Tasks/Task_03.o
 .comment       0x00000000       0x12 ./Tasks/Task_04.o
 .comment       0x00000000       0x12 ./Tasks/Task_05.o
 .comment       0x00000000       0x12 ./Tasks/Task_06.o
 .comment       0x00000000       0x12 ./USART.o
 .comment       0x00000000       0x12 ./USART_2.o
 .comment       0x00000000       0x12 ./main.o
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fixunssfsi.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_addsub_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_mul_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_gt_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_ge_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_lt_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_sf_to_si.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_thenan_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_pack_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_unpack_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/avr51/libgcc.a(_fpcmp_parts_sf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(sprintf.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(vfprintf_std.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr51/libc.a(fputc.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(avrcar.elf elf32-avr)
LOAD linker stubs
