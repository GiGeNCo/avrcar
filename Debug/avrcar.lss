
avrcar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00001da2  00001e36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001da2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001aa  0080013a  0080013a  00001e70  2**0
                  ALLOC
  3 .stab         00003ae0  00000000  00000000  00001e70  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001745  00000000  00000000  00005950  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00007095  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 0c 06 	jmp	0xc18	; 0xc18 <__vector_30>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 c8 05 	jmp	0xb90	; 0xb90 <__vector_32>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 ea       	ldi	r30, 0xA2	; 162
      a0:	fd e1       	ldi	r31, 0x1D	; 29
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 33       	cpi	r26, 0x3A	; 58
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	12 e0       	ldi	r17, 0x02	; 2
      b4:	aa e3       	ldi	r26, 0x3A	; 58
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a4 3e       	cpi	r26, 0xE4	; 228
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 46 06 	call	0xc8c	; 0xc8c <main>
      c6:	0c 94 cf 0e 	jmp	0x1d9e	; 0x1d9e <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <Task_01>:
unsigned char Task_01_Step		= 0;



void Task_01(void)
{
      ce:	cf 93       	push	r28
      d0:	df 93       	push	r29
      d2:	cd b7       	in	r28, 0x3d	; 61
      d4:	de b7       	in	r29, 0x3e	; 62
	switch(Task_01_Step )
      d6:	80 91 3a 01 	lds	r24, 0x013A
      da:	88 2f       	mov	r24, r24
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	82 30       	cpi	r24, 0x02	; 2
      e0:	91 05       	cpc	r25, r1
      e2:	29 f1       	breq	.+74     	; 0x12e <Task_01+0x60>
      e4:	83 30       	cpi	r24, 0x03	; 3
      e6:	91 05       	cpc	r25, r1
      e8:	34 f4       	brge	.+12     	; 0xf6 <Task_01+0x28>
      ea:	00 97       	sbiw	r24, 0x00	; 0
      ec:	69 f1       	breq	.+90     	; 0x148 <Task_01+0x7a>
      ee:	81 30       	cpi	r24, 0x01	; 1
      f0:	91 05       	cpc	r25, r1
      f2:	59 f0       	breq	.+22     	; 0x10a <Task_01+0x3c>
      f4:	2c c0       	rjmp	.+88     	; 0x14e <Task_01+0x80>
      f6:	84 30       	cpi	r24, 0x04	; 4
      f8:	91 05       	cpc	r25, r1
      fa:	f9 f0       	breq	.+62     	; 0x13a <Task_01+0x6c>
      fc:	84 30       	cpi	r24, 0x04	; 4
      fe:	91 05       	cpc	r25, r1
     100:	cc f0       	brlt	.+50     	; 0x134 <Task_01+0x66>
     102:	85 30       	cpi	r24, 0x05	; 5
     104:	91 05       	cpc	r25, r1
     106:	e1 f0       	breq	.+56     	; 0x140 <Task_01+0x72>
     108:	22 c0       	rjmp	.+68     	; 0x14e <Task_01+0x80>

		//################################################################################

		case 1 :
		{
			if (USART2_Busy == 0) {
     10a:	80 91 52 01 	lds	r24, 0x0152
     10e:	88 23       	and	r24, r24
     110:	e9 f4       	brne	.+58     	; 0x14c <Task_01+0x7e>
				sprintf(USART2_buffer,"xxxxxxxxxxxxxxxxxxxxx\n\r");
     112:	88 e1       	ldi	r24, 0x18	; 24
     114:	e0 e0       	ldi	r30, 0x00	; 0
     116:	f1 e0       	ldi	r31, 0x01	; 1
     118:	aa ee       	ldi	r26, 0xEA	; 234
     11a:	b1 e0       	ldi	r27, 0x01	; 1
     11c:	01 90       	ld	r0, Z+
     11e:	0d 92       	st	X+, r0
     120:	8a 95       	dec	r24
     122:	e1 f7       	brne	.-8      	; 0x11c <Task_01+0x4e>
				USART2_Transmit();
     124:	0e 94 a3 05 	call	0xb46	; 0xb46 <USART2_Transmit>
				Task_01__Task_Stop;
     128:	10 92 3a 01 	sts	0x013A, r1
			}

			break;
     12c:	0f c0       	rjmp	.+30     	; 0x14c <Task_01+0x7e>
		}
		case 2 :
		{


			Task_01__Task_Stop;
     12e:	10 92 3a 01 	sts	0x013A, r1
			break;
     132:	0d c0       	rjmp	.+26     	; 0x14e <Task_01+0x80>
		}
		case 3 :
		{


			Task_01__Task_Stop;
     134:	10 92 3a 01 	sts	0x013A, r1
			break;
     138:	0a c0       	rjmp	.+20     	; 0x14e <Task_01+0x80>

		case 4 :
		{


			Task_01__Task_Stop;
     13a:	10 92 3a 01 	sts	0x013A, r1
			break;
     13e:	07 c0       	rjmp	.+14     	; 0x14e <Task_01+0x80>
		}

		case 5 :
		{

			Task_01__Task_Stop;
     140:	10 92 3a 01 	sts	0x013A, r1
			break;
     144:	00 00       	nop
     146:	03 c0       	rjmp	.+6      	; 0x14e <Task_01+0x80>
{
	switch(Task_01_Step )
	{
		case 0 :
		{
			break;
     148:	00 00       	nop
     14a:	01 c0       	rjmp	.+2      	; 0x14e <Task_01+0x80>
				sprintf(USART2_buffer,"xxxxxxxxxxxxxxxxxxxxx\n\r");
				USART2_Transmit();
				Task_01__Task_Stop;
			}

			break;
     14c:	00 00       	nop




	}
}
     14e:	df 91       	pop	r29
     150:	cf 91       	pop	r28
     152:	08 95       	ret

00000154 <Task_02>:
		} all;
//#
//#################################################################################

void Task_02(void)
{
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	cd b7       	in	r28, 0x3d	; 61
     15a:	de b7       	in	r29, 0x3e	; 62
	switch(Task_02_Step )
     15c:	80 91 3b 01 	lds	r24, 0x013B
     160:	88 2f       	mov	r24, r24
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	82 30       	cpi	r24, 0x02	; 2
     166:	91 05       	cpc	r25, r1
     168:	09 f1       	breq	.+66     	; 0x1ac <Task_02+0x58>
     16a:	83 30       	cpi	r24, 0x03	; 3
     16c:	91 05       	cpc	r25, r1
     16e:	3c f4       	brge	.+14     	; 0x17e <Task_02+0x2a>
     170:	00 97       	sbiw	r24, 0x00	; 0
     172:	09 f4       	brne	.+2      	; 0x176 <Task_02+0x22>
     174:	55 c0       	rjmp	.+170    	; 0x220 <Task_02+0xcc>
     176:	81 30       	cpi	r24, 0x01	; 1
     178:	91 05       	cpc	r25, r1
     17a:	71 f0       	breq	.+28     	; 0x198 <Task_02+0x44>
     17c:	54 c0       	rjmp	.+168    	; 0x226 <Task_02+0xd2>
     17e:	84 30       	cpi	r24, 0x04	; 4
     180:	91 05       	cpc	r25, r1
     182:	09 f4       	brne	.+2      	; 0x186 <Task_02+0x32>
     184:	46 c0       	rjmp	.+140    	; 0x212 <Task_02+0xbe>
     186:	84 30       	cpi	r24, 0x04	; 4
     188:	91 05       	cpc	r25, r1
     18a:	0c f4       	brge	.+2      	; 0x18e <Task_02+0x3a>
     18c:	3f c0       	rjmp	.+126    	; 0x20c <Task_02+0xb8>
     18e:	85 30       	cpi	r24, 0x05	; 5
     190:	91 05       	cpc	r25, r1
     192:	09 f4       	brne	.+2      	; 0x196 <Task_02+0x42>
     194:	41 c0       	rjmp	.+130    	; 0x218 <Task_02+0xc4>
     196:	47 c0       	rjmp	.+142    	; 0x226 <Task_02+0xd2>
		case 1 :
		{
			/////////////////////////////

			/////////////////////////////
			gamura();
     198:	0e 94 2f 01 	call	0x25e	; 0x25e <gamura>

			Task_02__GoTo_Next_Step;
     19c:	80 91 3b 01 	lds	r24, 0x013B
     1a0:	8f 5f       	subi	r24, 0xFF	; 255
     1a2:	80 93 3b 01 	sts	0x013B, r24
			Task_02__Task_Stop;
     1a6:	10 92 3b 01 	sts	0x013B, r1
			break;
     1aa:	3d c0       	rjmp	.+122    	; 0x226 <Task_02+0xd2>
		}
		case 2 :
		{


			if (USART2_Busy == 0) {
     1ac:	80 91 52 01 	lds	r24, 0x0152
     1b0:	88 23       	and	r24, r24
     1b2:	c1 f5       	brne	.+112    	; 0x224 <Task_02+0xd0>
				sprintf(USART2_buffer,">  %lu\n\r", MyVel._long);
     1b4:	80 91 5b 01 	lds	r24, 0x015B
     1b8:	90 91 5c 01 	lds	r25, 0x015C
     1bc:	a0 91 5d 01 	lds	r26, 0x015D
     1c0:	b0 91 5e 01 	lds	r27, 0x015E
     1c4:	2b 2f       	mov	r18, r27
     1c6:	2f 93       	push	r18
     1c8:	2a 2f       	mov	r18, r26
     1ca:	2f 93       	push	r18
     1cc:	29 2f       	mov	r18, r25
     1ce:	2f 93       	push	r18
     1d0:	8f 93       	push	r24
     1d2:	88 e1       	ldi	r24, 0x18	; 24
     1d4:	91 e0       	ldi	r25, 0x01	; 1
     1d6:	89 2f       	mov	r24, r25
     1d8:	8f 93       	push	r24
     1da:	88 e1       	ldi	r24, 0x18	; 24
     1dc:	91 e0       	ldi	r25, 0x01	; 1
     1de:	8f 93       	push	r24
     1e0:	8a ee       	ldi	r24, 0xEA	; 234
     1e2:	91 e0       	ldi	r25, 0x01	; 1
     1e4:	89 2f       	mov	r24, r25
     1e6:	8f 93       	push	r24
     1e8:	8a ee       	ldi	r24, 0xEA	; 234
     1ea:	91 e0       	ldi	r25, 0x01	; 1
     1ec:	8f 93       	push	r24
     1ee:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <sprintf>
     1f2:	8d b7       	in	r24, 0x3d	; 61
     1f4:	9e b7       	in	r25, 0x3e	; 62
     1f6:	08 96       	adiw	r24, 0x08	; 8
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	f8 94       	cli
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	0f be       	out	0x3f, r0	; 63
     200:	cd bf       	out	0x3d, r28	; 61
				USART2_Transmit();
     202:	0e 94 a3 05 	call	0xb46	; 0xb46 <USART2_Transmit>
				Task_02__Task_Stop;
     206:	10 92 3b 01 	sts	0x013B, r1

			}



			break;
     20a:	0c c0       	rjmp	.+24     	; 0x224 <Task_02+0xd0>
		}
		case 3 :
		{


			Task_02__Task_Stop;
     20c:	10 92 3b 01 	sts	0x013B, r1
			break;
     210:	0a c0       	rjmp	.+20     	; 0x226 <Task_02+0xd2>

		case 4 :
		{


			Task_02__Task_Stop;
     212:	10 92 3b 01 	sts	0x013B, r1
			break;
     216:	07 c0       	rjmp	.+14     	; 0x226 <Task_02+0xd2>
		}

		case 5 :
		{

			Task_02__Task_Stop;
     218:	10 92 3b 01 	sts	0x013B, r1
			break;
     21c:	00 00       	nop
     21e:	03 c0       	rjmp	.+6      	; 0x226 <Task_02+0xd2>
{
	switch(Task_02_Step )
	{
		case 0 :
		{
			break;
     220:	00 00       	nop
     222:	01 c0       	rjmp	.+2      	; 0x226 <Task_02+0xd2>

			}



			break;
     224:	00 00       	nop




	}
}
     226:	df 91       	pop	r29
     228:	cf 91       	pop	r28
     22a:	08 95       	ret

0000022c <gamura_init>:

//#################################################################
void gamura_init(void) {
     22c:	cf 93       	push	r28
     22e:	df 93       	push	r29
     230:	cd b7       	in	r28, 0x3d	; 61
     232:	de b7       	in	r29, 0x3e	; 62

	DD_HCRS04_Trig_Out;
     234:	81 e3       	ldi	r24, 0x31	; 49
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	21 e3       	ldi	r18, 0x31	; 49
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f9 01       	movw	r30, r18
     23e:	20 81       	ld	r18, Z
     240:	20 61       	ori	r18, 0x10	; 16
     242:	fc 01       	movw	r30, r24
     244:	20 83       	st	Z, r18
	DD_HCRS04_Echo_In;
     246:	81 e3       	ldi	r24, 0x31	; 49
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	21 e3       	ldi	r18, 0x31	; 49
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	f9 01       	movw	r30, r18
     250:	20 81       	ld	r18, Z
     252:	2f 7d       	andi	r18, 0xDF	; 223
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18

}
     258:	df 91       	pop	r29
     25a:	cf 91       	pop	r28
     25c:	08 95       	ret

0000025e <gamura>:
void gamura(void) {
     25e:	0f 93       	push	r16
     260:	1f 93       	push	r17
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	cd b7       	in	r28, 0x3d	; 61
     268:	de b7       	in	r29, 0x3e	; 62
     26a:	2f 97       	sbiw	r28, 0x0f	; 15
     26c:	0f b6       	in	r0, 0x3f	; 63
     26e:	f8 94       	cli
     270:	de bf       	out	0x3e, r29	; 62
     272:	0f be       	out	0x3f, r0	; 63
     274:	cd bf       	out	0x3d, r28	; 61

		char x1 = 0;
     276:	19 82       	std	Y+1, r1	; 0x01
		//########################################
		HCRS04_Trig_1;
     278:	82 e3       	ldi	r24, 0x32	; 50
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	22 e3       	ldi	r18, 0x32	; 50
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	f9 01       	movw	r30, r18
     282:	20 81       	ld	r18, Z
     284:	20 61       	ori	r18, 0x10	; 16
     286:	fc 01       	movw	r30, r24
     288:	20 83       	st	Z, r18
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	a8 e4       	ldi	r26, 0x48	; 72
     290:	b3 e4       	ldi	r27, 0x43	; 67
     292:	8a 83       	std	Y+2, r24	; 0x02
     294:	9b 83       	std	Y+3, r25	; 0x03
     296:	ac 83       	std	Y+4, r26	; 0x04
     298:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     29a:	26 e6       	ldi	r18, 0x66	; 102
     29c:	36 e6       	ldi	r19, 0x66	; 102
     29e:	46 ee       	ldi	r20, 0xE6	; 230
     2a0:	54 e4       	ldi	r21, 0x44	; 68
     2a2:	6a 81       	ldd	r22, Y+2	; 0x02
     2a4:	7b 81       	ldd	r23, Y+3	; 0x03
     2a6:	8c 81       	ldd	r24, Y+4	; 0x04
     2a8:	9d 81       	ldd	r25, Y+5	; 0x05
     2aa:	0e 94 6f 08 	call	0x10de	; 0x10de <__mulsf3>
     2ae:	dc 01       	movw	r26, r24
     2b0:	cb 01       	movw	r24, r22
     2b2:	8e 83       	std	Y+6, r24	; 0x06
     2b4:	9f 83       	std	Y+7, r25	; 0x07
     2b6:	a8 87       	std	Y+8, r26	; 0x08
     2b8:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     2ba:	20 e0       	ldi	r18, 0x00	; 0
     2bc:	30 e0       	ldi	r19, 0x00	; 0
     2be:	40 e8       	ldi	r20, 0x80	; 128
     2c0:	5f e3       	ldi	r21, 0x3F	; 63
     2c2:	6e 81       	ldd	r22, Y+6	; 0x06
     2c4:	7f 81       	ldd	r23, Y+7	; 0x07
     2c6:	88 85       	ldd	r24, Y+8	; 0x08
     2c8:	99 85       	ldd	r25, Y+9	; 0x09
     2ca:	0e 94 b2 09 	call	0x1364	; 0x1364 <__ltsf2>
     2ce:	88 23       	and	r24, r24
     2d0:	2c f4       	brge	.+10     	; 0x2dc <gamura+0x7e>
		__ticks = 1;
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	9b 87       	std	Y+11, r25	; 0x0b
     2d8:	8a 87       	std	Y+10, r24	; 0x0a
     2da:	42 c0       	rjmp	.+132    	; 0x360 <gamura+0x102>
	else if (__tmp > 65535)
     2dc:	20 e0       	ldi	r18, 0x00	; 0
     2de:	3f ef       	ldi	r19, 0xFF	; 255
     2e0:	4f e7       	ldi	r20, 0x7F	; 127
     2e2:	57 e4       	ldi	r21, 0x47	; 71
     2e4:	6e 81       	ldd	r22, Y+6	; 0x06
     2e6:	7f 81       	ldd	r23, Y+7	; 0x07
     2e8:	88 85       	ldd	r24, Y+8	; 0x08
     2ea:	99 85       	ldd	r25, Y+9	; 0x09
     2ec:	0e 94 54 09 	call	0x12a8	; 0x12a8 <__gtsf2>
     2f0:	18 16       	cp	r1, r24
     2f2:	64 f5       	brge	.+88     	; 0x34c <gamura+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2f4:	20 e0       	ldi	r18, 0x00	; 0
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	40 e2       	ldi	r20, 0x20	; 32
     2fa:	51 e4       	ldi	r21, 0x41	; 65
     2fc:	6a 81       	ldd	r22, Y+2	; 0x02
     2fe:	7b 81       	ldd	r23, Y+3	; 0x03
     300:	8c 81       	ldd	r24, Y+4	; 0x04
     302:	9d 81       	ldd	r25, Y+5	; 0x05
     304:	0e 94 6f 08 	call	0x10de	; 0x10de <__mulsf3>
     308:	dc 01       	movw	r26, r24
     30a:	cb 01       	movw	r24, r22
     30c:	bc 01       	movw	r22, r24
     30e:	cd 01       	movw	r24, r26
     310:	0e 94 94 06 	call	0xd28	; 0xd28 <__fixunssfsi>
     314:	dc 01       	movw	r26, r24
     316:	cb 01       	movw	r24, r22
     318:	9b 87       	std	Y+11, r25	; 0x0b
     31a:	8a 87       	std	Y+10, r24	; 0x0a
     31c:	12 c0       	rjmp	.+36     	; 0x342 <gamura+0xe4>
     31e:	88 eb       	ldi	r24, 0xB8	; 184
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	9d 87       	std	Y+13, r25	; 0x0d
     324:	8c 87       	std	Y+12, r24	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     326:	8c 85       	ldd	r24, Y+12	; 0x0c
     328:	9d 85       	ldd	r25, Y+13	; 0x0d
     32a:	8c 01       	movw	r16, r24
     32c:	c8 01       	movw	r24, r16
     32e:	01 97       	sbiw	r24, 0x01	; 1
     330:	f1 f7       	brne	.-4      	; 0x32e <gamura+0xd0>
     332:	8c 01       	movw	r16, r24
     334:	1d 87       	std	Y+13, r17	; 0x0d
     336:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     338:	8a 85       	ldd	r24, Y+10	; 0x0a
     33a:	9b 85       	ldd	r25, Y+11	; 0x0b
     33c:	01 97       	sbiw	r24, 0x01	; 1
     33e:	9b 87       	std	Y+11, r25	; 0x0b
     340:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     342:	8a 85       	ldd	r24, Y+10	; 0x0a
     344:	9b 85       	ldd	r25, Y+11	; 0x0b
     346:	00 97       	sbiw	r24, 0x00	; 0
     348:	51 f7       	brne	.-44     	; 0x31e <gamura+0xc0>
     34a:	17 c0       	rjmp	.+46     	; 0x37a <gamura+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     34c:	6e 81       	ldd	r22, Y+6	; 0x06
     34e:	7f 81       	ldd	r23, Y+7	; 0x07
     350:	88 85       	ldd	r24, Y+8	; 0x08
     352:	99 85       	ldd	r25, Y+9	; 0x09
     354:	0e 94 94 06 	call	0xd28	; 0xd28 <__fixunssfsi>
     358:	dc 01       	movw	r26, r24
     35a:	cb 01       	movw	r24, r22
     35c:	9b 87       	std	Y+11, r25	; 0x0b
     35e:	8a 87       	std	Y+10, r24	; 0x0a
     360:	8a 85       	ldd	r24, Y+10	; 0x0a
     362:	9b 85       	ldd	r25, Y+11	; 0x0b
     364:	9f 87       	std	Y+15, r25	; 0x0f
     366:	8e 87       	std	Y+14, r24	; 0x0e
     368:	8e 85       	ldd	r24, Y+14	; 0x0e
     36a:	9f 85       	ldd	r25, Y+15	; 0x0f
     36c:	8c 01       	movw	r16, r24
     36e:	f8 01       	movw	r30, r16
     370:	31 97       	sbiw	r30, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <gamura+0x112>
     374:	8f 01       	movw	r16, r30
     376:	1f 87       	std	Y+15, r17	; 0x0f
     378:	0e 87       	std	Y+14, r16	; 0x0e
		_delay_ms(200);
		HCRS04_Trig_0;
     37a:	82 e3       	ldi	r24, 0x32	; 50
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	22 e3       	ldi	r18, 0x32	; 50
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	f9 01       	movw	r30, r18
     384:	20 81       	ld	r18, Z
     386:	2f 7e       	andi	r18, 0xEF	; 239
     388:	fc 01       	movw	r30, r24
     38a:	20 83       	st	Z, r18
		//########################################

		x1 = PIND & 0b00100000;
     38c:	80 e3       	ldi	r24, 0x30	; 48
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	fc 01       	movw	r30, r24
     392:	80 81       	ld	r24, Z
     394:	80 72       	andi	r24, 0x20	; 32
     396:	89 83       	std	Y+1, r24	; 0x01
     398:	01 c0       	rjmp	.+2      	; 0x39c <gamura+0x13e>

			// velodebi ertians
			while(1){
				x1 = PIND & 0b00100000;
				if (x1!=0) break;
			}
     39a:	00 00       	nop



			// velodebi ertians
			while(1){
				x1 = PIND & 0b00100000;
     39c:	80 e3       	ldi	r24, 0x30	; 48
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	fc 01       	movw	r30, r24
     3a2:	80 81       	ld	r24, Z
     3a4:	80 72       	andi	r24, 0x20	; 32
     3a6:	89 83       	std	Y+1, r24	; 0x01
				if (x1!=0) break;
     3a8:	89 81       	ldd	r24, Y+1	; 0x01
     3aa:	88 23       	and	r24, r24
     3ac:	b1 f3       	breq	.-20     	; 0x39a <gamura+0x13c>
     3ae:	00 00       	nop
			}
			//########################################

			MyVel._long =  0;
     3b0:	10 92 5b 01 	sts	0x015B, r1
     3b4:	10 92 5c 01 	sts	0x015C, r1
     3b8:	10 92 5d 01 	sts	0x015D, r1
     3bc:	10 92 5e 01 	sts	0x015E, r1
     3c0:	01 c0       	rjmp	.+2      	; 0x3c4 <gamura+0x166>
			// ertianis xangdzlivobis gansazgvra
			while(1){
				MyVel._long++;
				x1 = PIND & 0b00100000;
				if (x1==0) break;
			}
     3c2:	00 00       	nop

			MyVel._long =  0;

			// ertianis xangdzlivobis gansazgvra
			while(1){
				MyVel._long++;
     3c4:	80 91 5b 01 	lds	r24, 0x015B
     3c8:	90 91 5c 01 	lds	r25, 0x015C
     3cc:	a0 91 5d 01 	lds	r26, 0x015D
     3d0:	b0 91 5e 01 	lds	r27, 0x015E
     3d4:	01 96       	adiw	r24, 0x01	; 1
     3d6:	a1 1d       	adc	r26, r1
     3d8:	b1 1d       	adc	r27, r1
     3da:	80 93 5b 01 	sts	0x015B, r24
     3de:	90 93 5c 01 	sts	0x015C, r25
     3e2:	a0 93 5d 01 	sts	0x015D, r26
     3e6:	b0 93 5e 01 	sts	0x015E, r27
				x1 = PIND & 0b00100000;
     3ea:	80 e3       	ldi	r24, 0x30	; 48
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	fc 01       	movw	r30, r24
     3f0:	80 81       	ld	r24, Z
     3f2:	80 72       	andi	r24, 0x20	; 32
     3f4:	89 83       	std	Y+1, r24	; 0x01
				if (x1==0) break;
     3f6:	89 81       	ldd	r24, Y+1	; 0x01
     3f8:	88 23       	and	r24, r24
     3fa:	19 f7       	brne	.-58     	; 0x3c2 <gamura+0x164>
     3fc:	00 00       	nop
			//########################################


			//########################################

}
     3fe:	2f 96       	adiw	r28, 0x0f	; 15
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	de bf       	out	0x3e, r29	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	cd bf       	out	0x3d, r28	; 61
     40a:	df 91       	pop	r29
     40c:	cf 91       	pop	r28
     40e:	1f 91       	pop	r17
     410:	0f 91       	pop	r16
     412:	08 95       	ret

00000414 <Task_03>:
unsigned char Task_03_Step		= 0;

char SAVE;

void Task_03(void)
{
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	cd b7       	in	r28, 0x3d	; 61
     41a:	de b7       	in	r29, 0x3e	; 62
	switch(Task_03_Step )
     41c:	80 91 3c 01 	lds	r24, 0x013C
     420:	88 2f       	mov	r24, r24
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	83 30       	cpi	r24, 0x03	; 3
     426:	91 05       	cpc	r25, r1
     428:	09 f4       	brne	.+2      	; 0x42c <Task_03+0x18>
     42a:	47 c0       	rjmp	.+142    	; 0x4ba <Task_03+0xa6>
     42c:	84 30       	cpi	r24, 0x04	; 4
     42e:	91 05       	cpc	r25, r1
     430:	4c f4       	brge	.+18     	; 0x444 <Task_03+0x30>
     432:	81 30       	cpi	r24, 0x01	; 1
     434:	91 05       	cpc	r25, r1
     436:	e9 f0       	breq	.+58     	; 0x472 <Task_03+0x5e>
     438:	82 30       	cpi	r24, 0x02	; 2
     43a:	91 05       	cpc	r25, r1
     43c:	5c f5       	brge	.+86     	; 0x494 <Task_03+0x80>
     43e:	00 97       	sbiw	r24, 0x00	; 0
     440:	69 f0       	breq	.+26     	; 0x45c <Task_03+0x48>
     442:	55 c0       	rjmp	.+170    	; 0x4ee <Task_03+0xda>
     444:	85 30       	cpi	r24, 0x05	; 5
     446:	91 05       	cpc	r25, r1
     448:	09 f4       	brne	.+2      	; 0x44c <Task_03+0x38>
     44a:	47 c0       	rjmp	.+142    	; 0x4da <Task_03+0xc6>
     44c:	85 30       	cpi	r24, 0x05	; 5
     44e:	91 05       	cpc	r25, r1
     450:	d4 f1       	brlt	.+116    	; 0x4c6 <Task_03+0xb2>
     452:	86 30       	cpi	r24, 0x06	; 6
     454:	91 05       	cpc	r25, r1
     456:	09 f4       	brne	.+2      	; 0x45a <Task_03+0x46>
     458:	43 c0       	rjmp	.+134    	; 0x4e0 <Task_03+0xcc>
     45a:	49 c0       	rjmp	.+146    	; 0x4ee <Task_03+0xda>
	{
		case 0 :
		{
				if (USART2_Vel == 'x'){
     45c:	80 91 e9 01 	lds	r24, 0x01E9
     460:	88 37       	cpi	r24, 0x78	; 120
     462:	09 f0       	breq	.+2      	; 0x466 <Task_03+0x52>
     464:	41 c0       	rjmp	.+130    	; 0x4e8 <Task_03+0xd4>
					Task_03__GoTo_Next_Step;
     466:	80 91 3c 01 	lds	r24, 0x013C
     46a:	8f 5f       	subi	r24, 0xFF	; 255
     46c:	80 93 3c 01 	sts	0x013C, r24
				}

			break;
     470:	3b c0       	rjmp	.+118    	; 0x4e8 <Task_03+0xd4>

		//################################################################################

		case 1 :
		{
				if (USART2_Vel == 'y'){
     472:	80 91 e9 01 	lds	r24, 0x01E9
     476:	89 37       	cpi	r24, 0x79	; 121
     478:	31 f4       	brne	.+12     	; 0x486 <Task_03+0x72>
					Task_03__GoTo_Next_Step;
     47a:	80 91 3c 01 	lds	r24, 0x013C
     47e:	8f 5f       	subi	r24, 0xFF	; 255
     480:	80 93 3c 01 	sts	0x013C, r24
					if(USART2_Vel != 'x'){
						Task_03__Task_Stop;
					}

				}
			break;
     484:	33 c0       	rjmp	.+102    	; 0x4ec <Task_03+0xd8>
		case 1 :
		{
				if (USART2_Vel == 'y'){
					Task_03__GoTo_Next_Step;
				}else{
					if(USART2_Vel != 'x'){
     486:	80 91 e9 01 	lds	r24, 0x01E9
     48a:	88 37       	cpi	r24, 0x78	; 120
     48c:	79 f1       	breq	.+94     	; 0x4ec <Task_03+0xd8>
						Task_03__Task_Stop;
     48e:	10 92 3c 01 	sts	0x013C, r1
					}

				}
			break;
     492:	2c c0       	rjmp	.+88     	; 0x4ec <Task_03+0xd8>
		}
		case 2 :
		{
				if (USART2_Vel == '1') {
     494:	80 91 e9 01 	lds	r24, 0x01E9
     498:	81 33       	cpi	r24, 0x31	; 49
     49a:	21 f4       	brne	.+8      	; 0x4a4 <Task_03+0x90>
					Task_03_Step = 3;
     49c:	83 e0       	ldi	r24, 0x03	; 3
     49e:	80 93 3c 01 	sts	0x013C, r24
					Task_03_Step = 4;
				} else {
					Task_03__Task_Stop;
				}

			break;
     4a2:	25 c0       	rjmp	.+74     	; 0x4ee <Task_03+0xda>
		}
		case 2 :
		{
				if (USART2_Vel == '1') {
					Task_03_Step = 3;
				} else if (USART2_Vel == '2') {
     4a4:	80 91 e9 01 	lds	r24, 0x01E9
     4a8:	82 33       	cpi	r24, 0x32	; 50
     4aa:	21 f4       	brne	.+8      	; 0x4b4 <Task_03+0xa0>
					Task_03_Step = 4;
     4ac:	84 e0       	ldi	r24, 0x04	; 4
     4ae:	80 93 3c 01 	sts	0x013C, r24
				} else {
					Task_03__Task_Stop;
				}

			break;
     4b2:	1d c0       	rjmp	.+58     	; 0x4ee <Task_03+0xda>
				if (USART2_Vel == '1') {
					Task_03_Step = 3;
				} else if (USART2_Vel == '2') {
					Task_03_Step = 4;
				} else {
					Task_03__Task_Stop;
     4b4:	10 92 3c 01 	sts	0x013C, r1
				}

			break;
     4b8:	1a c0       	rjmp	.+52     	; 0x4ee <Task_03+0xda>
		}
		case 3 :
		{

			Task_02__Task_Start;
     4ba:	81 e0       	ldi	r24, 0x01	; 1
     4bc:	80 93 3b 01 	sts	0x013B, r24
			Task_03__Task_Stop;
     4c0:	10 92 3c 01 	sts	0x013C, r1
			break;
     4c4:	14 c0       	rjmp	.+40     	; 0x4ee <Task_03+0xda>

		case 4 :
		{

			//UDR0 = USART2_Vel;
			SAVE = USART2_Vel;
     4c6:	80 91 e9 01 	lds	r24, 0x01E9
     4ca:	80 93 5f 01 	sts	0x015F, r24
			Task_04__Task_Start;
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	80 93 3d 01 	sts	0x013D, r24
			Task_03__Task_Stop;
     4d4:	10 92 3c 01 	sts	0x013C, r1

			//USART2_Waiting_For_Free ;
			//sprintf(USART2_buffer,"yyyyyyyyyyy \n\r");
			//USART2_Transmit();

			break;
     4d8:	0a c0       	rjmp	.+20     	; 0x4ee <Task_03+0xda>
		}

		case 5 :
		{
			Task_03__Task_Stop;
     4da:	10 92 3c 01 	sts	0x013C, r1
			break;
     4de:	07 c0       	rjmp	.+14     	; 0x4ee <Task_03+0xda>


		case 6 :
		{

			Task_03__Task_Stop;
     4e0:	10 92 3c 01 	sts	0x013C, r1
			break;
     4e4:	00 00       	nop
     4e6:	03 c0       	rjmp	.+6      	; 0x4ee <Task_03+0xda>
		{
				if (USART2_Vel == 'x'){
					Task_03__GoTo_Next_Step;
				}

			break;
     4e8:	00 00       	nop
     4ea:	01 c0       	rjmp	.+2      	; 0x4ee <Task_03+0xda>
					if(USART2_Vel != 'x'){
						Task_03__Task_Stop;
					}

				}
			break;
     4ec:	00 00       	nop




	}
}
     4ee:	df 91       	pop	r29
     4f0:	cf 91       	pop	r28
     4f2:	08 95       	ret

000004f4 <Task_04>:

unsigned short a=0;


void Task_04(void)
{
     4f4:	cf 93       	push	r28
     4f6:	df 93       	push	r29
     4f8:	cd b7       	in	r28, 0x3d	; 61
     4fa:	de b7       	in	r29, 0x3e	; 62



	switch(Task_04_Step )
     4fc:	80 91 3d 01 	lds	r24, 0x013D
     500:	88 2f       	mov	r24, r24
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	81 30       	cpi	r24, 0x01	; 1
     506:	91 05       	cpc	r25, r1
     508:	59 f0       	breq	.+22     	; 0x520 <Task_04+0x2c>
     50a:	82 30       	cpi	r24, 0x02	; 2
     50c:	91 05       	cpc	r25, r1
     50e:	0c f4       	brge	.+2      	; 0x512 <Task_04+0x1e>
     510:	51 c0       	rjmp	.+162    	; 0x5b4 <Task_04+0xc0>
     512:	82 30       	cpi	r24, 0x02	; 2
     514:	91 05       	cpc	r25, r1
     516:	91 f0       	breq	.+36     	; 0x53c <Task_04+0x48>
     518:	83 30       	cpi	r24, 0x03	; 3
     51a:	91 05       	cpc	r25, r1
     51c:	81 f1       	breq	.+96     	; 0x57e <Task_04+0x8a>
     51e:	4f c0       	rjmp	.+158    	; 0x5be <Task_04+0xca>
			//################################################################################

			case 1 :
			{

				a=0;
     520:	10 92 3f 01 	sts	0x013F, r1
     524:	10 92 3e 01 	sts	0x013E, r1
				Task_04__GoTo_Next_Step	;
     528:	80 91 3d 01 	lds	r24, 0x013D
     52c:	8f 5f       	subi	r24, 0xFF	; 255
     52e:	80 93 3d 01 	sts	0x013D, r24
				UDR0 = 0;
     532:	8c e2       	ldi	r24, 0x2C	; 44
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	fc 01       	movw	r30, r24
     538:	10 82       	st	Z, r1


				//Task_04__Task_Stop;

				break;
     53a:	41 c0       	rjmp	.+130    	; 0x5be <Task_04+0xca>
			}
			case 2 :
			{

				a++;
     53c:	80 91 3e 01 	lds	r24, 0x013E
     540:	90 91 3f 01 	lds	r25, 0x013F
     544:	01 96       	adiw	r24, 0x01	; 1
     546:	90 93 3f 01 	sts	0x013F, r25
     54a:	80 93 3e 01 	sts	0x013E, r24

				if (a == 500)
     54e:	80 91 3e 01 	lds	r24, 0x013E
     552:	90 91 3f 01 	lds	r25, 0x013F
     556:	84 3f       	cpi	r24, 0xF4	; 244
     558:	f1 e0       	ldi	r31, 0x01	; 1
     55a:	9f 07       	cpc	r25, r31
     55c:	69 f5       	brne	.+90     	; 0x5b8 <Task_04+0xc4>
				{
					UDR0 = SAVE;
     55e:	8c e2       	ldi	r24, 0x2C	; 44
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	20 91 5f 01 	lds	r18, 0x015F
     566:	fc 01       	movw	r30, r24
     568:	20 83       	st	Z, r18
					a=0;
     56a:	10 92 3f 01 	sts	0x013F, r1
     56e:	10 92 3e 01 	sts	0x013E, r1
					Task_04__GoTo_Next_Step	;
     572:	80 91 3d 01 	lds	r24, 0x013D
     576:	8f 5f       	subi	r24, 0xFF	; 255
     578:	80 93 3d 01 	sts	0x013D, r24
				}

				break;
     57c:	1d c0       	rjmp	.+58     	; 0x5b8 <Task_04+0xc4>
			}
			case 3 :
			{
				a++;
     57e:	80 91 3e 01 	lds	r24, 0x013E
     582:	90 91 3f 01 	lds	r25, 0x013F
     586:	01 96       	adiw	r24, 0x01	; 1
     588:	90 93 3f 01 	sts	0x013F, r25
     58c:	80 93 3e 01 	sts	0x013E, r24

				if (a == 30000)
     590:	80 91 3e 01 	lds	r24, 0x013E
     594:	90 91 3f 01 	lds	r25, 0x013F
     598:	80 33       	cpi	r24, 0x30	; 48
     59a:	f5 e7       	ldi	r31, 0x75	; 117
     59c:	9f 07       	cpc	r25, r31
     59e:	71 f4       	brne	.+28     	; 0x5bc <Task_04+0xc8>
				{
					UDR0 = 0x00;
     5a0:	8c e2       	ldi	r24, 0x2C	; 44
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	fc 01       	movw	r30, r24
     5a6:	10 82       	st	Z, r1
					Task_04__Task_Stop;
     5a8:	10 92 3d 01 	sts	0x013D, r1
					Task_02__Task_Start;
     5ac:	81 e0       	ldi	r24, 0x01	; 1
     5ae:	80 93 3b 01 	sts	0x013B, r24
				}

				break;
     5b2:	04 c0       	rjmp	.+8      	; 0x5bc <Task_04+0xc8>

	{
			case 0 :
			{

				break;
     5b4:	00 00       	nop
     5b6:	03 c0       	rjmp	.+6      	; 0x5be <Task_04+0xca>
					UDR0 = SAVE;
					a=0;
					Task_04__GoTo_Next_Step	;
				}

				break;
     5b8:	00 00       	nop
     5ba:	01 c0       	rjmp	.+2      	; 0x5be <Task_04+0xca>
					UDR0 = 0x00;
					Task_04__Task_Stop;
					Task_02__Task_Start;
				}

				break;
     5bc:	00 00       	nop





}
     5be:	df 91       	pop	r29
     5c0:	cf 91       	pop	r28
     5c2:	08 95       	ret

000005c4 <Task_05>:
unsigned short j=0;
char bla = 0;


void Task_05(void)
{
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	cd b7       	in	r28, 0x3d	; 61
     5ca:	de b7       	in	r29, 0x3e	; 62



	switch(Task_05_Step )
     5cc:	80 91 40 01 	lds	r24, 0x0140
     5d0:	88 2f       	mov	r24, r24
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	82 30       	cpi	r24, 0x02	; 2
     5d6:	91 05       	cpc	r25, r1
     5d8:	e1 f0       	breq	.+56     	; 0x612 <Task_05+0x4e>
     5da:	83 30       	cpi	r24, 0x03	; 3
     5dc:	91 05       	cpc	r25, r1
     5de:	3c f4       	brge	.+14     	; 0x5ee <Task_05+0x2a>
     5e0:	00 97       	sbiw	r24, 0x00	; 0
     5e2:	09 f4       	brne	.+2      	; 0x5e6 <Task_05+0x22>
     5e4:	c4 c0       	rjmp	.+392    	; 0x76e <Task_05+0x1aa>
     5e6:	81 30       	cpi	r24, 0x01	; 1
     5e8:	91 05       	cpc	r25, r1
     5ea:	51 f0       	breq	.+20     	; 0x600 <Task_05+0x3c>
     5ec:	c7 c0       	rjmp	.+398    	; 0x77c <Task_05+0x1b8>
     5ee:	83 30       	cpi	r24, 0x03	; 3
     5f0:	91 05       	cpc	r25, r1
     5f2:	09 f4       	brne	.+2      	; 0x5f6 <Task_05+0x32>
     5f4:	71 c0       	rjmp	.+226    	; 0x6d8 <Task_05+0x114>
     5f6:	84 30       	cpi	r24, 0x04	; 4
     5f8:	91 05       	cpc	r25, r1
     5fa:	09 f4       	brne	.+2      	; 0x5fe <Task_05+0x3a>
     5fc:	95 c0       	rjmp	.+298    	; 0x728 <Task_05+0x164>
     5fe:	be c0       	rjmp	.+380    	; 0x77c <Task_05+0x1b8>
			//################################################################################

			case 1 :
			{

				Task_02__Task_Start;
     600:	81 e0       	ldi	r24, 0x01	; 1
     602:	80 93 3b 01 	sts	0x013B, r24
				//USART2_Waiting_For_Free ;

				//sprintf(USART2_buffer,"xxxxxxxxxx \n\r");
				//USART2_Transmit();

				Task_05__GoTo_Next_Step	;
     606:	80 91 40 01 	lds	r24, 0x0140
     60a:	8f 5f       	subi	r24, 0xFF	; 255
     60c:	80 93 40 01 	sts	0x0140, r24

				//Task_05__Task_Stop;
				break;
     610:	b5 c0       	rjmp	.+362    	; 0x77c <Task_05+0x1b8>

			}
			case 2 :
			{
				if(Task_02_Step  == 0)
     612:	80 91 3b 01 	lds	r24, 0x013B
     616:	88 23       	and	r24, r24
     618:	09 f0       	breq	.+2      	; 0x61c <Task_05+0x58>
     61a:	ab c0       	rjmp	.+342    	; 0x772 <Task_05+0x1ae>
				{



				     if(MyVel._long < 800 )
     61c:	80 91 5b 01 	lds	r24, 0x015B
     620:	90 91 5c 01 	lds	r25, 0x015C
     624:	a0 91 5d 01 	lds	r26, 0x015D
     628:	b0 91 5e 01 	lds	r27, 0x015E
     62c:	80 32       	cpi	r24, 0x20	; 32
     62e:	23 e0       	ldi	r18, 0x03	; 3
     630:	92 07       	cpc	r25, r18
     632:	a1 05       	cpc	r26, r1
     634:	b1 05       	cpc	r27, r1
     636:	d0 f4       	brcc	.+52     	; 0x66c <Task_05+0xa8>
				     {


				    	 UDR0 = 0;
     638:	8c e2       	ldi	r24, 0x2C	; 44
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	fc 01       	movw	r30, r24
     63e:	10 82       	st	Z, r1

						 USART2_Waiting_For_Free ;
     640:	80 91 52 01 	lds	r24, 0x0152
     644:	88 23       	and	r24, r24
     646:	e1 f7       	brne	.-8      	; 0x640 <Task_05+0x7c>
						 sprintf(USART2_buffer,"y");
     648:	89 e7       	ldi	r24, 0x79	; 121
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	90 93 eb 01 	sts	0x01EB, r25
     650:	80 93 ea 01 	sts	0x01EA, r24
						 USART2_Transmit();
     654:	0e 94 a3 05 	call	0xb46	; 0xb46 <USART2_Transmit>
						 USART2_Waiting_For_Free ;
     658:	80 91 52 01 	lds	r24, 0x0152
     65c:	88 23       	and	r24, r24
     65e:	e1 f7       	brne	.-8      	; 0x658 <Task_05+0x94>
						 //UDR0 = 0x58;
						 //Task_05__Task_Stop;
						 Task_05__GoTo_Next_Step;
     660:	80 91 40 01 	lds	r24, 0x0140
     664:	8f 5f       	subi	r24, 0xFF	; 255
     666:	80 93 40 01 	sts	0x0140, r24


				}


				break;
     66a:	83 c0       	rjmp	.+262    	; 0x772 <Task_05+0x1ae>
						 Task_05__GoTo_Next_Step;
						 //Task_05__Task_Start;
					  }
				     else //if(MyVel._long > 900)
					 {
				    	 UDR0 = 0x18;
     66c:	8c e2       	ldi	r24, 0x2C	; 44
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	28 e1       	ldi	r18, 0x18	; 24
     672:	fc 01       	movw	r30, r24
     674:	20 83       	st	Z, r18

				    	 USART2_Waiting_For_Free ;
     676:	80 91 52 01 	lds	r24, 0x0152
     67a:	88 23       	and	r24, r24
     67c:	e1 f7       	brne	.-8      	; 0x676 <Task_05+0xb2>
				    	 sprintf(USART2_buffer," xxxxxxxx %lu\n\r", MyVel._long);
     67e:	80 91 5b 01 	lds	r24, 0x015B
     682:	90 91 5c 01 	lds	r25, 0x015C
     686:	a0 91 5d 01 	lds	r26, 0x015D
     68a:	b0 91 5e 01 	lds	r27, 0x015E
     68e:	2b 2f       	mov	r18, r27
     690:	2f 93       	push	r18
     692:	2a 2f       	mov	r18, r26
     694:	2f 93       	push	r18
     696:	29 2f       	mov	r18, r25
     698:	2f 93       	push	r18
     69a:	8f 93       	push	r24
     69c:	81 e2       	ldi	r24, 0x21	; 33
     69e:	91 e0       	ldi	r25, 0x01	; 1
     6a0:	89 2f       	mov	r24, r25
     6a2:	8f 93       	push	r24
     6a4:	81 e2       	ldi	r24, 0x21	; 33
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	8f 93       	push	r24
     6aa:	8a ee       	ldi	r24, 0xEA	; 234
     6ac:	91 e0       	ldi	r25, 0x01	; 1
     6ae:	89 2f       	mov	r24, r25
     6b0:	8f 93       	push	r24
     6b2:	8a ee       	ldi	r24, 0xEA	; 234
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	8f 93       	push	r24
     6b8:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <sprintf>
     6bc:	8d b7       	in	r24, 0x3d	; 61
     6be:	9e b7       	in	r25, 0x3e	; 62
     6c0:	08 96       	adiw	r24, 0x08	; 8
     6c2:	0f b6       	in	r0, 0x3f	; 63
     6c4:	f8 94       	cli
     6c6:	de bf       	out	0x3e, r29	; 62
     6c8:	0f be       	out	0x3f, r0	; 63
     6ca:	cd bf       	out	0x3d, r28	; 61
				    	 USART2_Transmit();
     6cc:	0e 94 a3 05 	call	0xb46	; 0xb46 <USART2_Transmit>
				    	 //Task_05__Task_Stop;
				    	 //Task_05__GoTo_Next_Step;
				    	 Task_05__Task_Start;
     6d0:	81 e0       	ldi	r24, 0x01	; 1
     6d2:	80 93 40 01 	sts	0x0140, r24


				}


				break;
     6d6:	4d c0       	rjmp	.+154    	; 0x772 <Task_05+0x1ae>

			}
			case 3 :
			{

				bla++;
     6d8:	80 91 43 01 	lds	r24, 0x0143
     6dc:	8f 5f       	subi	r24, 0xFF	; 255
     6de:	80 93 43 01 	sts	0x0143, r24
				if (bla == 100) {
     6e2:	80 91 43 01 	lds	r24, 0x0143
     6e6:	84 36       	cpi	r24, 0x64	; 100
     6e8:	31 f4       	brne	.+12     	; 0x6f6 <Task_05+0x132>
					UDR0 = 0;
     6ea:	8c e2       	ldi	r24, 0x2C	; 44
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	fc 01       	movw	r30, r24
     6f0:	10 82       	st	Z, r1
					bla = 0;
     6f2:	10 92 43 01 	sts	0x0143, r1
				}
				//USART2_Waiting_For_Free ;
				//sprintf(USART2_buffer,"g");
				//USART2_Transmit();

				j++;
     6f6:	80 91 41 01 	lds	r24, 0x0141
     6fa:	90 91 42 01 	lds	r25, 0x0142
     6fe:	01 96       	adiw	r24, 0x01	; 1
     700:	90 93 42 01 	sts	0x0142, r25
     704:	80 93 41 01 	sts	0x0141, r24
				//UDR0 = 0x00;
				UDR0 = 0x5A;
     708:	8c e2       	ldi	r24, 0x2C	; 44
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	2a e5       	ldi	r18, 0x5A	; 90
     70e:	fc 01       	movw	r30, r24
     710:	20 83       	st	Z, r18
				if (j==100)
     712:	80 91 41 01 	lds	r24, 0x0141
     716:	90 91 42 01 	lds	r25, 0x0142
     71a:	84 36       	cpi	r24, 0x64	; 100
     71c:	91 05       	cpc	r25, r1
     71e:	59 f5       	brne	.+86     	; 0x776 <Task_05+0x1b2>
				{
					Task_05__Task_Start;
     720:	81 e0       	ldi	r24, 0x01	; 1
     722:	80 93 40 01 	sts	0x0140, r24
				}

					break;
     726:	27 c0       	rjmp	.+78     	; 0x776 <Task_05+0x1b2>
			}
			case 4 :
			{
				UDR0=0x26;
     728:	8c e2       	ldi	r24, 0x2C	; 44
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	26 e2       	ldi	r18, 0x26	; 38
     72e:	fc 01       	movw	r30, r24
     730:	20 83       	st	Z, r18
				Task_02__Task_Start;
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	80 93 3b 01 	sts	0x013B, r24

				if(MyVel._long > 800)
     738:	80 91 5b 01 	lds	r24, 0x015B
     73c:	90 91 5c 01 	lds	r25, 0x015C
     740:	a0 91 5d 01 	lds	r26, 0x015D
     744:	b0 91 5e 01 	lds	r27, 0x015E
     748:	81 32       	cpi	r24, 0x21	; 33
     74a:	f3 e0       	ldi	r31, 0x03	; 3
     74c:	9f 07       	cpc	r25, r31
     74e:	a1 05       	cpc	r26, r1
     750:	b1 05       	cpc	r27, r1
     752:	98 f0       	brcs	.+38     	; 0x77a <Task_05+0x1b6>
				{
						UDR0 = 0x00;
     754:	8c e2       	ldi	r24, 0x2C	; 44
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	fc 01       	movw	r30, r24
     75a:	10 82       	st	Z, r1
						UDR0 = 0x17;
     75c:	8c e2       	ldi	r24, 0x2C	; 44
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	27 e1       	ldi	r18, 0x17	; 23
     762:	fc 01       	movw	r30, r24
     764:	20 83       	st	Z, r18
						Task_05__Task_Start;
     766:	81 e0       	ldi	r24, 0x01	; 1
     768:	80 93 40 01 	sts	0x0140, r24
				}
				//Task_05__Task_Start;


				break;
     76c:	06 c0       	rjmp	.+12     	; 0x77a <Task_05+0x1b6>

	{
			case 0 :
			{

				break;
     76e:	00 00       	nop
     770:	05 c0       	rjmp	.+10     	; 0x77c <Task_05+0x1b8>


				}


				break;
     772:	00 00       	nop
     774:	03 c0       	rjmp	.+6      	; 0x77c <Task_05+0x1b8>
				if (j==100)
				{
					Task_05__Task_Start;
				}

					break;
     776:	00 00       	nop
     778:	01 c0       	rjmp	.+2      	; 0x77c <Task_05+0x1b8>
						Task_05__Task_Start;
				}
				//Task_05__Task_Start;


				break;
     77a:	00 00       	nop





}
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	08 95       	ret

00000782 <Task_06>:
unsigned char STM 							= 0;
unsigned char STR 							= 0;


void Task_06(void)
{
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
     786:	cd b7       	in	r28, 0x3d	; 61
     788:	de b7       	in	r29, 0x3e	; 62



	switch(Task_06_Step )
     78a:	80 91 44 01 	lds	r24, 0x0144
     78e:	88 2f       	mov	r24, r24
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	83 30       	cpi	r24, 0x03	; 3
     794:	91 05       	cpc	r25, r1
     796:	09 f4       	brne	.+2      	; 0x79a <Task_06+0x18>
     798:	8e c0       	rjmp	.+284    	; 0x8b6 <Task_06+0x134>
     79a:	84 30       	cpi	r24, 0x04	; 4
     79c:	91 05       	cpc	r25, r1
     79e:	44 f4       	brge	.+16     	; 0x7b0 <Task_06+0x2e>
     7a0:	81 30       	cpi	r24, 0x01	; 1
     7a2:	91 05       	cpc	r25, r1
     7a4:	91 f0       	breq	.+36     	; 0x7ca <Task_06+0x48>
     7a6:	82 30       	cpi	r24, 0x02	; 2
     7a8:	91 05       	cpc	r25, r1
     7aa:	0c f0       	brlt	.+2      	; 0x7ae <Task_06+0x2c>
     7ac:	6c c0       	rjmp	.+216    	; 0x886 <Task_06+0x104>

	{
			case 0 :
			{

				break;
     7ae:	93 c1       	rjmp	.+806    	; 0xad6 <Task_06+0x354>
void Task_06(void)
{



	switch(Task_06_Step )
     7b0:	85 30       	cpi	r24, 0x05	; 5
     7b2:	91 05       	cpc	r25, r1
     7b4:	09 f4       	brne	.+2      	; 0x7b8 <Task_06+0x36>
     7b6:	aa c0       	rjmp	.+340    	; 0x90c <Task_06+0x18a>
     7b8:	85 30       	cpi	r24, 0x05	; 5
     7ba:	91 05       	cpc	r25, r1
     7bc:	0c f4       	brge	.+2      	; 0x7c0 <Task_06+0x3e>
     7be:	84 c0       	rjmp	.+264    	; 0x8c8 <Task_06+0x146>
     7c0:	86 30       	cpi	r24, 0x06	; 6
     7c2:	91 05       	cpc	r25, r1
     7c4:	09 f4       	brne	.+2      	; 0x7c8 <Task_06+0x46>
     7c6:	bc c0       	rjmp	.+376    	; 0x940 <Task_06+0x1be>
			}

			case 7 :
			{

				break;
     7c8:	86 c1       	rjmp	.+780    	; 0xad6 <Task_06+0x354>
			//################################################################################

			case 1 :
			{

				switch (Servo_Pos_Step)
     7ca:	80 91 47 01 	lds	r24, 0x0147
     7ce:	88 2f       	mov	r24, r24
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	81 30       	cpi	r24, 0x01	; 1
     7d4:	91 05       	cpc	r25, r1
     7d6:	79 f0       	breq	.+30     	; 0x7f6 <Task_06+0x74>
     7d8:	82 30       	cpi	r24, 0x02	; 2
     7da:	91 05       	cpc	r25, r1
     7dc:	b9 f0       	breq	.+46     	; 0x80c <Task_06+0x8a>
     7de:	00 97       	sbiw	r24, 0x00	; 0
     7e0:	01 f5       	brne	.+64     	; 0x822 <Task_06+0xa0>
				{
					case 0 :
					{
						Servo_L_45;
     7e2:	8a e4       	ldi	r24, 0x4A	; 74
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	20 e2       	ldi	r18, 0x20	; 32
     7e8:	33 e0       	ldi	r19, 0x03	; 3
     7ea:	fc 01       	movw	r30, r24
     7ec:	31 83       	std	Z+1, r19	; 0x01
     7ee:	20 83       	st	Z, r18
						Servo_Pos=0;
     7f0:	10 92 4b 01 	sts	0x014B, r1
						break;
     7f4:	16 c0       	rjmp	.+44     	; 0x822 <Task_06+0xa0>
					}
					case 1 :
					{
						Servo_Centre;
     7f6:	8a e4       	ldi	r24, 0x4A	; 74
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	24 e1       	ldi	r18, 0x14	; 20
     7fc:	35 e0       	ldi	r19, 0x05	; 5
     7fe:	fc 01       	movw	r30, r24
     800:	31 83       	std	Z+1, r19	; 0x01
     802:	20 83       	st	Z, r18
						Servo_Pos=1;
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	80 93 4b 01 	sts	0x014B, r24
						break;
     80a:	0b c0       	rjmp	.+22     	; 0x822 <Task_06+0xa0>
					}
					case 2 :
					{
						Servo_R_45;
     80c:	8a e4       	ldi	r24, 0x4A	; 74
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	28 e0       	ldi	r18, 0x08	; 8
     812:	37 e0       	ldi	r19, 0x07	; 7
     814:	fc 01       	movw	r30, r24
     816:	31 83       	std	Z+1, r19	; 0x01
     818:	20 83       	st	Z, r18
						Servo_Pos=2;
     81a:	82 e0       	ldi	r24, 0x02	; 2
     81c:	80 93 4b 01 	sts	0x014B, r24
						break;
     820:	00 00       	nop
				}




				if(Servo_Motor_Dir==0)
     822:	80 91 4a 01 	lds	r24, 0x014A
     826:	88 23       	and	r24, r24
     828:	99 f4       	brne	.+38     	; 0x850 <Task_06+0xce>
				{
					if(Servo_Pos_Step==2)
     82a:	80 91 47 01 	lds	r24, 0x0147
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	49 f4       	brne	.+18     	; 0x844 <Task_06+0xc2>
					{
						Servo_Motor_Dir =1;
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	80 93 4a 01 	sts	0x014A, r24
						Servo_Pos_Step--;
     838:	80 91 47 01 	lds	r24, 0x0147
     83c:	81 50       	subi	r24, 0x01	; 1
     83e:	80 93 47 01 	sts	0x0147, r24
     842:	17 c0       	rjmp	.+46     	; 0x872 <Task_06+0xf0>
					}
					else
					{
						Servo_Pos_Step++;
     844:	80 91 47 01 	lds	r24, 0x0147
     848:	8f 5f       	subi	r24, 0xFF	; 255
     84a:	80 93 47 01 	sts	0x0147, r24
     84e:	11 c0       	rjmp	.+34     	; 0x872 <Task_06+0xf0>
					}
				}
				else
				{

					if(Servo_Pos_Step==0)
     850:	80 91 47 01 	lds	r24, 0x0147
     854:	88 23       	and	r24, r24
     856:	41 f4       	brne	.+16     	; 0x868 <Task_06+0xe6>
					{
						Servo_Motor_Dir =0;
     858:	10 92 4a 01 	sts	0x014A, r1
						Servo_Pos_Step++;
     85c:	80 91 47 01 	lds	r24, 0x0147
     860:	8f 5f       	subi	r24, 0xFF	; 255
     862:	80 93 47 01 	sts	0x0147, r24
     866:	05 c0       	rjmp	.+10     	; 0x872 <Task_06+0xf0>
					}
					else
					{
						Servo_Pos_Step--;
     868:	80 91 47 01 	lds	r24, 0x0147
     86c:	81 50       	subi	r24, 0x01	; 1
     86e:	80 93 47 01 	sts	0x0147, r24
					}
				}



				Servo_Motor_Delay = 0;
     872:	10 92 49 01 	sts	0x0149, r1
     876:	10 92 48 01 	sts	0x0148, r1

				//OCR1A = 2100;//1430;//540;
				//b=0;
				Task_06__GoTo_Next_Step	;
     87a:	80 91 44 01 	lds	r24, 0x0144
     87e:	8f 5f       	subi	r24, 0xFF	; 255
     880:	80 93 44 01 	sts	0x0144, r24

				break;
     884:	28 c1       	rjmp	.+592    	; 0xad6 <Task_06+0x354>

			}
			case 2 :
			{
				Servo_Motor_Delay++;
     886:	80 91 48 01 	lds	r24, 0x0148
     88a:	90 91 49 01 	lds	r25, 0x0149
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	90 93 49 01 	sts	0x0149, r25
     894:	80 93 48 01 	sts	0x0148, r24

				if(Servo_Motor_Delay == 8000)
     898:	80 91 48 01 	lds	r24, 0x0148
     89c:	90 91 49 01 	lds	r25, 0x0149
     8a0:	80 34       	cpi	r24, 0x40	; 64
     8a2:	ff e1       	ldi	r31, 0x1F	; 31
     8a4:	9f 07       	cpc	r25, r31
     8a6:	09 f0       	breq	.+2      	; 0x8aa <Task_06+0x128>
     8a8:	13 c1       	rjmp	.+550    	; 0xad0 <Task_06+0x34e>
				{

					Task_06__GoTo_Next_Step	;
     8aa:	80 91 44 01 	lds	r24, 0x0144
     8ae:	8f 5f       	subi	r24, 0xFF	; 255
     8b0:	80 93 44 01 	sts	0x0144, r24

				}


				break;
     8b4:	0d c1       	rjmp	.+538    	; 0xad0 <Task_06+0x34e>


			}
			case 3 :
			{
				Task_02__Task_Start;
     8b6:	81 e0       	ldi	r24, 0x01	; 1
     8b8:	80 93 3b 01 	sts	0x013B, r24


				Task_06__GoTo_Next_Step	;
     8bc:	80 91 44 01 	lds	r24, 0x0144
     8c0:	8f 5f       	subi	r24, 0xFF	; 255
     8c2:	80 93 44 01 	sts	0x0144, r24
				break;
     8c6:	07 c1       	rjmp	.+526    	; 0xad6 <Task_06+0x354>
			}
			case 4 :
			{
				if(Task_02_Step  == 0)
     8c8:	80 91 3b 01 	lds	r24, 0x013B
     8cc:	88 23       	and	r24, r24
     8ce:	09 f0       	breq	.+2      	; 0x8d2 <Task_06+0x150>
     8d0:	01 c1       	rjmp	.+514    	; 0xad4 <Task_06+0x352>
				{
					Gamura_Vel[Servo_Pos]=MyVel._long;
     8d2:	80 91 4b 01 	lds	r24, 0x014B
     8d6:	28 2f       	mov	r18, r24
     8d8:	30 e0       	ldi	r19, 0x00	; 0
     8da:	80 91 5b 01 	lds	r24, 0x015B
     8de:	90 91 5c 01 	lds	r25, 0x015C
     8e2:	a0 91 5d 01 	lds	r26, 0x015D
     8e6:	b0 91 5e 01 	lds	r27, 0x015E
     8ea:	22 0f       	add	r18, r18
     8ec:	33 1f       	adc	r19, r19
     8ee:	22 0f       	add	r18, r18
     8f0:	33 1f       	adc	r19, r19
     8f2:	20 5a       	subi	r18, 0xA0	; 160
     8f4:	3e 4f       	sbci	r19, 0xFE	; 254
     8f6:	f9 01       	movw	r30, r18
     8f8:	80 83       	st	Z, r24
     8fa:	91 83       	std	Z+1, r25	; 0x01
     8fc:	a2 83       	std	Z+2, r26	; 0x02
     8fe:	b3 83       	std	Z+3, r27	; 0x03
					Task_06__GoTo_Next_Step	;
     900:	80 91 44 01 	lds	r24, 0x0144
     904:	8f 5f       	subi	r24, 0xFF	; 255
     906:	80 93 44 01 	sts	0x0144, r24
				}
				break;
     90a:	e4 c0       	rjmp	.+456    	; 0xad4 <Task_06+0x352>
				//sprintf(USART2_buffer,"%lu  %lu  %lu\n\r", Gamura_Vel[0], Gamura_Vel[1], Gamura_Vel[2]);
				//USART2_Transmit();
				//Task_06__Task_Start;


		    	 UDR0 = 0;
     90c:	8c e2       	ldi	r24, 0x2C	; 44
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	fc 01       	movw	r30, r24
     912:	10 82       	st	Z, r1

				 USART2_Waiting_For_Free ;
     914:	80 91 52 01 	lds	r24, 0x0152
     918:	88 23       	and	r24, r24
     91a:	e1 f7       	brne	.-8      	; 0x914 <Task_06+0x192>
				 sprintf(USART2_buffer,"y");
     91c:	89 e7       	ldi	r24, 0x79	; 121
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	90 93 eb 01 	sts	0x01EB, r25
     924:	80 93 ea 01 	sts	0x01EA, r24
				 USART2_Transmit();
     928:	0e 94 a3 05 	call	0xb46	; 0xb46 <USART2_Transmit>
				 USART2_Waiting_For_Free ;
     92c:	80 91 52 01 	lds	r24, 0x0152
     930:	88 23       	and	r24, r24
     932:	e1 f7       	brne	.-8      	; 0x92c <Task_06+0x1aa>

				 Task_06__GoTo_Next_Step;
     934:	80 91 44 01 	lds	r24, 0x0144
     938:	8f 5f       	subi	r24, 0xFF	; 255
     93a:	80 93 44 01 	sts	0x0144, r24




				break;
     93e:	cb c0       	rjmp	.+406    	; 0xad6 <Task_06+0x354>
			}

			case 6 :
			{
				if(Gamura_Vel[0]<800){ STL=1;} else {STL =0;}
     940:	80 91 60 01 	lds	r24, 0x0160
     944:	90 91 61 01 	lds	r25, 0x0161
     948:	a0 91 62 01 	lds	r26, 0x0162
     94c:	b0 91 63 01 	lds	r27, 0x0163
     950:	80 32       	cpi	r24, 0x20	; 32
     952:	f3 e0       	ldi	r31, 0x03	; 3
     954:	9f 07       	cpc	r25, r31
     956:	a1 05       	cpc	r26, r1
     958:	b1 05       	cpc	r27, r1
     95a:	20 f4       	brcc	.+8      	; 0x964 <Task_06+0x1e2>
     95c:	81 e0       	ldi	r24, 0x01	; 1
     95e:	80 93 4c 01 	sts	0x014C, r24
     962:	02 c0       	rjmp	.+4      	; 0x968 <Task_06+0x1e6>
     964:	10 92 4c 01 	sts	0x014C, r1
				if(Gamura_Vel[1]<800){ STM=1;} else {STM =0;}
     968:	80 91 64 01 	lds	r24, 0x0164
     96c:	90 91 65 01 	lds	r25, 0x0165
     970:	a0 91 66 01 	lds	r26, 0x0166
     974:	b0 91 67 01 	lds	r27, 0x0167
     978:	80 32       	cpi	r24, 0x20	; 32
     97a:	23 e0       	ldi	r18, 0x03	; 3
     97c:	92 07       	cpc	r25, r18
     97e:	a1 05       	cpc	r26, r1
     980:	b1 05       	cpc	r27, r1
     982:	20 f4       	brcc	.+8      	; 0x98c <Task_06+0x20a>
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	80 93 4d 01 	sts	0x014D, r24
     98a:	02 c0       	rjmp	.+4      	; 0x990 <Task_06+0x20e>
     98c:	10 92 4d 01 	sts	0x014D, r1
				if(Gamura_Vel[2]<800){ STR=1;} else {STR =0;}
     990:	80 91 68 01 	lds	r24, 0x0168
     994:	90 91 69 01 	lds	r25, 0x0169
     998:	a0 91 6a 01 	lds	r26, 0x016A
     99c:	b0 91 6b 01 	lds	r27, 0x016B
     9a0:	80 32       	cpi	r24, 0x20	; 32
     9a2:	e3 e0       	ldi	r30, 0x03	; 3
     9a4:	9e 07       	cpc	r25, r30
     9a6:	a1 05       	cpc	r26, r1
     9a8:	b1 05       	cpc	r27, r1
     9aa:	20 f4       	brcc	.+8      	; 0x9b4 <Task_06+0x232>
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	80 93 4e 01 	sts	0x014E, r24
     9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <Task_06+0x236>
     9b4:	10 92 4e 01 	sts	0x014E, r1

				if(STL==0 && STM==0 && STR==0) { UDR0 = 0x17; }
     9b8:	80 91 4c 01 	lds	r24, 0x014C
     9bc:	88 23       	and	r24, r24
     9be:	69 f4       	brne	.+26     	; 0x9da <Task_06+0x258>
     9c0:	80 91 4d 01 	lds	r24, 0x014D
     9c4:	88 23       	and	r24, r24
     9c6:	49 f4       	brne	.+18     	; 0x9da <Task_06+0x258>
     9c8:	80 91 4e 01 	lds	r24, 0x014E
     9cc:	88 23       	and	r24, r24
     9ce:	29 f4       	brne	.+10     	; 0x9da <Task_06+0x258>
     9d0:	8c e2       	ldi	r24, 0x2C	; 44
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	27 e1       	ldi	r18, 0x17	; 23
     9d6:	fc 01       	movw	r30, r24
     9d8:	20 83       	st	Z, r18
				if(STL==0 && STM==0 && STR==1) { UDR0 = 0x67; }
     9da:	80 91 4c 01 	lds	r24, 0x014C
     9de:	88 23       	and	r24, r24
     9e0:	69 f4       	brne	.+26     	; 0x9fc <Task_06+0x27a>
     9e2:	80 91 4d 01 	lds	r24, 0x014D
     9e6:	88 23       	and	r24, r24
     9e8:	49 f4       	brne	.+18     	; 0x9fc <Task_06+0x27a>
     9ea:	80 91 4e 01 	lds	r24, 0x014E
     9ee:	81 30       	cpi	r24, 0x01	; 1
     9f0:	29 f4       	brne	.+10     	; 0x9fc <Task_06+0x27a>
     9f2:	8c e2       	ldi	r24, 0x2C	; 44
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	27 e6       	ldi	r18, 0x67	; 103
     9f8:	fc 01       	movw	r30, r24
     9fa:	20 83       	st	Z, r18
				if(STL==0 && STM==1 && STR==0) { UDR0 = 0x67; }
     9fc:	80 91 4c 01 	lds	r24, 0x014C
     a00:	88 23       	and	r24, r24
     a02:	69 f4       	brne	.+26     	; 0xa1e <Task_06+0x29c>
     a04:	80 91 4d 01 	lds	r24, 0x014D
     a08:	81 30       	cpi	r24, 0x01	; 1
     a0a:	49 f4       	brne	.+18     	; 0xa1e <Task_06+0x29c>
     a0c:	80 91 4e 01 	lds	r24, 0x014E
     a10:	88 23       	and	r24, r24
     a12:	29 f4       	brne	.+10     	; 0xa1e <Task_06+0x29c>
     a14:	8c e2       	ldi	r24, 0x2C	; 44
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	27 e6       	ldi	r18, 0x67	; 103
     a1a:	fc 01       	movw	r30, r24
     a1c:	20 83       	st	Z, r18
				if(STL==0 && STM==1 && STR==1) { UDR0 = 0x67; }
     a1e:	80 91 4c 01 	lds	r24, 0x014C
     a22:	88 23       	and	r24, r24
     a24:	69 f4       	brne	.+26     	; 0xa40 <Task_06+0x2be>
     a26:	80 91 4d 01 	lds	r24, 0x014D
     a2a:	81 30       	cpi	r24, 0x01	; 1
     a2c:	49 f4       	brne	.+18     	; 0xa40 <Task_06+0x2be>
     a2e:	80 91 4e 01 	lds	r24, 0x014E
     a32:	81 30       	cpi	r24, 0x01	; 1
     a34:	29 f4       	brne	.+10     	; 0xa40 <Task_06+0x2be>
     a36:	8c e2       	ldi	r24, 0x2C	; 44
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	27 e6       	ldi	r18, 0x67	; 103
     a3c:	fc 01       	movw	r30, r24
     a3e:	20 83       	st	Z, r18
				if(STL==1 && STM==0 && STR==0) { UDR0 = 0x57; }
     a40:	80 91 4c 01 	lds	r24, 0x014C
     a44:	81 30       	cpi	r24, 0x01	; 1
     a46:	69 f4       	brne	.+26     	; 0xa62 <Task_06+0x2e0>
     a48:	80 91 4d 01 	lds	r24, 0x014D
     a4c:	88 23       	and	r24, r24
     a4e:	49 f4       	brne	.+18     	; 0xa62 <Task_06+0x2e0>
     a50:	80 91 4e 01 	lds	r24, 0x014E
     a54:	88 23       	and	r24, r24
     a56:	29 f4       	brne	.+10     	; 0xa62 <Task_06+0x2e0>
     a58:	8c e2       	ldi	r24, 0x2C	; 44
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	27 e5       	ldi	r18, 0x57	; 87
     a5e:	fc 01       	movw	r30, r24
     a60:	20 83       	st	Z, r18
				if(STL==1 && STM==0 && STR==1) { UDR0 = 0x77; }
     a62:	80 91 4c 01 	lds	r24, 0x014C
     a66:	81 30       	cpi	r24, 0x01	; 1
     a68:	69 f4       	brne	.+26     	; 0xa84 <Task_06+0x302>
     a6a:	80 91 4d 01 	lds	r24, 0x014D
     a6e:	88 23       	and	r24, r24
     a70:	49 f4       	brne	.+18     	; 0xa84 <Task_06+0x302>
     a72:	80 91 4e 01 	lds	r24, 0x014E
     a76:	81 30       	cpi	r24, 0x01	; 1
     a78:	29 f4       	brne	.+10     	; 0xa84 <Task_06+0x302>
     a7a:	8c e2       	ldi	r24, 0x2C	; 44
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	27 e7       	ldi	r18, 0x77	; 119
     a80:	fc 01       	movw	r30, r24
     a82:	20 83       	st	Z, r18
				if(STL==1 && STM==1 && STR==0) { UDR0 = 0x57; }
     a84:	80 91 4c 01 	lds	r24, 0x014C
     a88:	81 30       	cpi	r24, 0x01	; 1
     a8a:	69 f4       	brne	.+26     	; 0xaa6 <Task_06+0x324>
     a8c:	80 91 4d 01 	lds	r24, 0x014D
     a90:	81 30       	cpi	r24, 0x01	; 1
     a92:	49 f4       	brne	.+18     	; 0xaa6 <Task_06+0x324>
     a94:	80 91 4e 01 	lds	r24, 0x014E
     a98:	88 23       	and	r24, r24
     a9a:	29 f4       	brne	.+10     	; 0xaa6 <Task_06+0x324>
     a9c:	8c e2       	ldi	r24, 0x2C	; 44
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	27 e5       	ldi	r18, 0x57	; 87
     aa2:	fc 01       	movw	r30, r24
     aa4:	20 83       	st	Z, r18
				if(STL==1 && STM==1 && STR==1) { UDR0 = 0x77; }
     aa6:	80 91 4c 01 	lds	r24, 0x014C
     aaa:	81 30       	cpi	r24, 0x01	; 1
     aac:	69 f4       	brne	.+26     	; 0xac8 <Task_06+0x346>
     aae:	80 91 4d 01 	lds	r24, 0x014D
     ab2:	81 30       	cpi	r24, 0x01	; 1
     ab4:	49 f4       	brne	.+18     	; 0xac8 <Task_06+0x346>
     ab6:	80 91 4e 01 	lds	r24, 0x014E
     aba:	81 30       	cpi	r24, 0x01	; 1
     abc:	29 f4       	brne	.+10     	; 0xac8 <Task_06+0x346>
     abe:	8c e2       	ldi	r24, 0x2C	; 44
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	27 e7       	ldi	r18, 0x77	; 119
     ac4:	fc 01       	movw	r30, r24
     ac6:	20 83       	st	Z, r18



				Task_06__Task_Start;
     ac8:	81 e0       	ldi	r24, 0x01	; 1
     aca:	80 93 44 01 	sts	0x0144, r24


				break;
     ace:	03 c0       	rjmp	.+6      	; 0xad6 <Task_06+0x354>
					Task_06__GoTo_Next_Step	;

				}


				break;
     ad0:	00 00       	nop
     ad2:	01 c0       	rjmp	.+2      	; 0xad6 <Task_06+0x354>
				if(Task_02_Step  == 0)
				{
					Gamura_Vel[Servo_Pos]=MyVel._long;
					Task_06__GoTo_Next_Step	;
				}
				break;
     ad4:	00 00       	nop





}
     ad6:	df 91       	pop	r29
     ad8:	cf 91       	pop	r28
     ada:	08 95       	ret

00000adc <USART_Init>:


//###################################################################

void USART_Init()
{
     adc:	cf 93       	push	r28
     ade:	df 93       	push	r29
     ae0:	cd b7       	in	r28, 0x3d	; 61
     ae2:	de b7       	in	r29, 0x3e	; 62
	UBRR0L= UBRRVAL; 					//	Set baud rate, low byte
     ae4:	89 e2       	ldi	r24, 0x29	; 41
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	2f e2       	ldi	r18, 0x2F	; 47
     aea:	fc 01       	movw	r30, r24
     aec:	20 83       	st	Z, r18
	UBRR0H=(UBRRVAL>>8);				//	Set baud rate, high byte
     aee:	80 e9       	ldi	r24, 0x90	; 144
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	fc 01       	movw	r30, r24
     af4:	10 82       	st	Z, r1

	UCSR0C=(0<<UMSEL0)|					//
     af6:	85 e9       	ldi	r24, 0x95	; 149
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	26 e0       	ldi	r18, 0x06	; 6
     afc:	fc 01       	movw	r30, r24
     afe:	20 83       	st	Z, r18
		  (0<<UPM00) |					//
		  (0<<USBS0) |					//
		  (1<<UCSZ01)|					//
		  (1<<UCSZ00)|					//
		  (0<<UCPOL0);					//
	UCSR0B=(0<<RXEN) |					//	Enable USART Receiver
     b00:	8a e2       	ldi	r24, 0x2A	; 42
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	28 e0       	ldi	r18, 0x08	; 8
     b06:	fc 01       	movw	r30, r24
     b08:	20 83       	st	Z, r18
	      (1<<TXEN) |					//	Enable USART Transmitter
		  (0<<RXCIE)|					//	Enable USART Interrupt on receive complete
		  (0<<TXCIE);

	//sei();
}
     b0a:	df 91       	pop	r29
     b0c:	cf 91       	pop	r28
     b0e:	08 95       	ret

00000b10 <USART2_Init>:


//###################################################################

void USART2_Init()
{
     b10:	cf 93       	push	r28
     b12:	df 93       	push	r29
     b14:	cd b7       	in	r28, 0x3d	; 61
     b16:	de b7       	in	r29, 0x3e	; 62
	UBRR1L= UBRRVAL2; 					//	Set baud rate, low byte
     b18:	89 e9       	ldi	r24, 0x99	; 153
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	2f e2       	ldi	r18, 0x2F	; 47
     b1e:	fc 01       	movw	r30, r24
     b20:	20 83       	st	Z, r18
	UBRR1H=(UBRRVAL2>>8);				//	Set baud rate, high byte
     b22:	88 e9       	ldi	r24, 0x98	; 152
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	fc 01       	movw	r30, r24
     b28:	10 82       	st	Z, r1

	UCSR1C=(0<<UMSEL1)|					//
     b2a:	8d e9       	ldi	r24, 0x9D	; 157
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	26 e0       	ldi	r18, 0x06	; 6
     b30:	fc 01       	movw	r30, r24
     b32:	20 83       	st	Z, r18
		  (0<<UPM10) |					//
		  (0<<USBS1) |					//
		  (1<<UCSZ11)|					//
		  (1<<UCSZ10)|					//
		  (0<<UCPOL1);					//
	UCSR1B=(1<<RXEN1) |					//	Enable USART Receiver
     b34:	8a e9       	ldi	r24, 0x9A	; 154
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	28 ed       	ldi	r18, 0xD8	; 216
     b3a:	fc 01       	movw	r30, r24
     b3c:	20 83       	st	Z, r18
	      (1<<TXEN1) |					//	Enable USART Transmitter
		  (1<<RXCIE1)|					//	Enable USART Interrupt on receive complete
		  (1<<TXCIE1);

	sei();
     b3e:	78 94       	sei
}
     b40:	df 91       	pop	r29
     b42:	cf 91       	pop	r28
     b44:	08 95       	ret

00000b46 <USART2_Transmit>:

void USART2_Transmit()
{
     b46:	cf 93       	push	r28
     b48:	df 93       	push	r29
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
	USART2_Positone = 0 ;
     b4e:	10 92 51 01 	sts	0x0151, r1
	if (USART2_buffer[USART2_Positone]!=0)
     b52:	80 91 51 01 	lds	r24, 0x0151
     b56:	88 2f       	mov	r24, r24
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	86 51       	subi	r24, 0x16	; 22
     b5c:	9e 4f       	sbci	r25, 0xFE	; 254
     b5e:	fc 01       	movw	r30, r24
     b60:	80 81       	ld	r24, Z
     b62:	88 23       	and	r24, r24
     b64:	81 f0       	breq	.+32     	; 0xb86 <USART2_Transmit+0x40>
	{
		USART2_Busy = 1 ;
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	80 93 52 01 	sts	0x0152, r24
		UDR1=USART2_buffer[USART2_Positone];
     b6c:	8c e9       	ldi	r24, 0x9C	; 156
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	20 91 51 01 	lds	r18, 0x0151
     b74:	22 2f       	mov	r18, r18
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	26 51       	subi	r18, 0x16	; 22
     b7a:	3e 4f       	sbci	r19, 0xFE	; 254
     b7c:	f9 01       	movw	r30, r18
     b7e:	20 81       	ld	r18, Z
     b80:	fc 01       	movw	r30, r24
     b82:	20 83       	st	Z, r18
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <USART2_Transmit+0x44>
	} else {
		USART2_Busy = 0 ;
     b86:	10 92 52 01 	sts	0x0152, r1
	}
}
     b8a:	df 91       	pop	r29
     b8c:	cf 91       	pop	r28
     b8e:	08 95       	ret

00000b90 <__vector_32>:

ISR(USART1_TX_vect)
{
     b90:	1f 92       	push	r1
     b92:	0f 92       	push	r0
     b94:	00 90 5f 00 	lds	r0, 0x005F
     b98:	0f 92       	push	r0
     b9a:	11 24       	eor	r1, r1
     b9c:	00 90 5b 00 	lds	r0, 0x005B
     ba0:	0f 92       	push	r0
     ba2:	10 92 5b 00 	sts	0x005B, r1
     ba6:	2f 93       	push	r18
     ba8:	3f 93       	push	r19
     baa:	8f 93       	push	r24
     bac:	9f 93       	push	r25
     bae:	ef 93       	push	r30
     bb0:	ff 93       	push	r31
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29
     bb6:	cd b7       	in	r28, 0x3d	; 61
     bb8:	de b7       	in	r29, 0x3e	; 62
	USART2_Positone ++;
     bba:	80 91 51 01 	lds	r24, 0x0151
     bbe:	8f 5f       	subi	r24, 0xFF	; 255
     bc0:	80 93 51 01 	sts	0x0151, r24
	if (USART2_buffer[USART2_Positone]!=0)  {
     bc4:	80 91 51 01 	lds	r24, 0x0151
     bc8:	88 2f       	mov	r24, r24
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	86 51       	subi	r24, 0x16	; 22
     bce:	9e 4f       	sbci	r25, 0xFE	; 254
     bd0:	fc 01       	movw	r30, r24
     bd2:	80 81       	ld	r24, Z
     bd4:	88 23       	and	r24, r24
     bd6:	69 f0       	breq	.+26     	; 0xbf2 <__vector_32+0x62>
		UDR1=USART2_buffer[USART2_Positone];
     bd8:	8c e9       	ldi	r24, 0x9C	; 156
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	20 91 51 01 	lds	r18, 0x0151
     be0:	22 2f       	mov	r18, r18
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	26 51       	subi	r18, 0x16	; 22
     be6:	3e 4f       	sbci	r19, 0xFE	; 254
     be8:	f9 01       	movw	r30, r18
     bea:	20 81       	ld	r18, Z
     bec:	fc 01       	movw	r30, r24
     bee:	20 83       	st	Z, r18
     bf0:	02 c0       	rjmp	.+4      	; 0xbf6 <__vector_32+0x66>
	} else {
		USART2_Busy = 0;
     bf2:	10 92 52 01 	sts	0x0152, r1
	}
}
     bf6:	df 91       	pop	r29
     bf8:	cf 91       	pop	r28
     bfa:	ff 91       	pop	r31
     bfc:	ef 91       	pop	r30
     bfe:	9f 91       	pop	r25
     c00:	8f 91       	pop	r24
     c02:	3f 91       	pop	r19
     c04:	2f 91       	pop	r18
     c06:	0f 90       	pop	r0
     c08:	00 92 5b 00 	sts	0x005B, r0
     c0c:	0f 90       	pop	r0
     c0e:	00 92 5f 00 	sts	0x005F, r0
     c12:	0f 90       	pop	r0
     c14:	1f 90       	pop	r1
     c16:	18 95       	reti

00000c18 <__vector_30>:

ISR(USART1_RX_vect) {
     c18:	1f 92       	push	r1
     c1a:	0f 92       	push	r0
     c1c:	00 90 5f 00 	lds	r0, 0x005F
     c20:	0f 92       	push	r0
     c22:	11 24       	eor	r1, r1
     c24:	00 90 5b 00 	lds	r0, 0x005B
     c28:	0f 92       	push	r0
     c2a:	10 92 5b 00 	sts	0x005B, r1
     c2e:	2f 93       	push	r18
     c30:	3f 93       	push	r19
     c32:	4f 93       	push	r20
     c34:	5f 93       	push	r21
     c36:	6f 93       	push	r22
     c38:	7f 93       	push	r23
     c3a:	8f 93       	push	r24
     c3c:	9f 93       	push	r25
     c3e:	af 93       	push	r26
     c40:	bf 93       	push	r27
     c42:	ef 93       	push	r30
     c44:	ff 93       	push	r31
     c46:	cf 93       	push	r28
     c48:	df 93       	push	r29
     c4a:	cd b7       	in	r28, 0x3d	; 61
     c4c:	de b7       	in	r29, 0x3e	; 62

	USART2_Vel = UDR1;
     c4e:	8c e9       	ldi	r24, 0x9C	; 156
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	fc 01       	movw	r30, r24
     c54:	80 81       	ld	r24, Z
     c56:	80 93 e9 01 	sts	0x01E9, r24
	Task_03();
     c5a:	0e 94 0a 02 	call	0x414	; 0x414 <Task_03>

}
     c5e:	df 91       	pop	r29
     c60:	cf 91       	pop	r28
     c62:	ff 91       	pop	r31
     c64:	ef 91       	pop	r30
     c66:	bf 91       	pop	r27
     c68:	af 91       	pop	r26
     c6a:	9f 91       	pop	r25
     c6c:	8f 91       	pop	r24
     c6e:	7f 91       	pop	r23
     c70:	6f 91       	pop	r22
     c72:	5f 91       	pop	r21
     c74:	4f 91       	pop	r20
     c76:	3f 91       	pop	r19
     c78:	2f 91       	pop	r18
     c7a:	0f 90       	pop	r0
     c7c:	00 92 5b 00 	sts	0x005B, r0
     c80:	0f 90       	pop	r0
     c82:	00 92 5f 00 	sts	0x005F, r0
     c86:	0f 90       	pop	r0
     c88:	1f 90       	pop	r1
     c8a:	18 95       	reti

00000c8c <main>:
#include "ROOT.h"
#include <util/delay.h>
#define DD_SERVO_Out			DDRB |=  (1 << 5);


int main(void) {
     c8c:	cf 93       	push	r28
     c8e:	df 93       	push	r29
     c90:	00 d0       	rcall	.+0      	; 0xc92 <main+0x6>
     c92:	cd b7       	in	r28, 0x3d	; 61
     c94:	de b7       	in	r29, 0x3e	; 62

	DD_SERVO_Out;
     c96:	87 e3       	ldi	r24, 0x37	; 55
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	27 e3       	ldi	r18, 0x37	; 55
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	f9 01       	movw	r30, r18
     ca0:	20 81       	ld	r18, Z
     ca2:	20 62       	ori	r18, 0x20	; 32
     ca4:	fc 01       	movw	r30, r24
     ca6:	20 83       	st	Z, r18

	OCR1AH = 0x05;
     ca8:	8b e4       	ldi	r24, 0x4B	; 75
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	25 e0       	ldi	r18, 0x05	; 5
     cae:	fc 01       	movw	r30, r24
     cb0:	20 83       	st	Z, r18
	OCR1AL = 0xDC;
     cb2:	8a e4       	ldi	r24, 0x4A	; 74
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	2c ed       	ldi	r18, 0xDC	; 220
     cb8:	fc 01       	movw	r30, r24
     cba:	20 83       	st	Z, r18
	ICR1H = 0xFF;
     cbc:	87 e4       	ldi	r24, 0x47	; 71
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	2f ef       	ldi	r18, 0xFF	; 255
     cc2:	fc 01       	movw	r30, r24
     cc4:	20 83       	st	Z, r18
	ICR1L = 0xFF;
     cc6:	86 e4       	ldi	r24, 0x46	; 70
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	2f ef       	ldi	r18, 0xFF	; 255
     ccc:	fc 01       	movw	r30, r24
     cce:	20 83       	st	Z, r18
	TCCR1C =0;
     cd0:	8a e7       	ldi	r24, 0x7A	; 122
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	fc 01       	movw	r30, r24
     cd6:	10 82       	st	Z, r1
	TCCR1A = 0x82;
     cd8:	8f e4       	ldi	r24, 0x4F	; 79
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	22 e8       	ldi	r18, 0x82	; 130
     cde:	fc 01       	movw	r30, r24
     ce0:	20 83       	st	Z, r18
	TCCR1B = 0x1A;
     ce2:	8e e4       	ldi	r24, 0x4E	; 78
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	2a e1       	ldi	r18, 0x1A	; 26
     ce8:	fc 01       	movw	r30, r24
     cea:	20 83       	st	Z, r18



	int xxx=0;
     cec:	1a 82       	std	Y+2, r1	; 0x02
     cee:	19 82       	std	Y+1, r1	; 0x01

	gamura_init();
     cf0:	0e 94 16 01 	call	0x22c	; 0x22c <gamura_init>
	USART_Init();
     cf4:	0e 94 6e 05 	call	0xadc	; 0xadc <USART_Init>
	USART2_Init();
     cf8:	0e 94 88 05 	call	0xb10	; 0xb10 <USART2_Init>

	 Task_01__Task_Stop;
     cfc:	10 92 3a 01 	sts	0x013A, r1
	 Task_02__Task_Stop;
     d00:	10 92 3b 01 	sts	0x013B, r1
	 //Task_02__Task_Start;
	 Task_03__Task_Stop;
     d04:	10 92 3c 01 	sts	0x013C, r1
	 Task_04__Task_Stop;
     d08:	10 92 3d 01 	sts	0x013D, r1
	 Task_05__Task_Stop;
     d0c:	10 92 40 01 	sts	0x0140, r1
	 Task_06__Task_Start;
     d10:	81 e0       	ldi	r24, 0x01	; 1
     d12:	80 93 44 01 	sts	0x0144, r24
	while (1) {

		Task_02();
     d16:	0e 94 aa 00 	call	0x154	; 0x154 <Task_02>
		Task_01();
     d1a:	0e 94 67 00 	call	0xce	; 0xce <Task_01>
		//Task_04();
		Task_05();
     d1e:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <Task_05>
		Task_06();
     d22:	0e 94 c1 03 	call	0x782	; 0x782 <Task_06>
		//Task_03();
	}
     d26:	f7 cf       	rjmp	.-18     	; 0xd16 <main+0x8a>

00000d28 <__fixunssfsi>:
     d28:	cf 92       	push	r12
     d2a:	df 92       	push	r13
     d2c:	ef 92       	push	r14
     d2e:	ff 92       	push	r15
     d30:	0f 93       	push	r16
     d32:	1f 93       	push	r17
     d34:	6b 01       	movw	r12, r22
     d36:	7c 01       	movw	r14, r24
     d38:	20 e0       	ldi	r18, 0x00	; 0
     d3a:	30 e0       	ldi	r19, 0x00	; 0
     d3c:	40 e0       	ldi	r20, 0x00	; 0
     d3e:	5f e4       	ldi	r21, 0x4F	; 79
     d40:	0e 94 83 09 	call	0x1306	; 0x1306 <__gesf2>
     d44:	87 fd       	sbrc	r24, 7
     d46:	0e c0       	rjmp	.+28     	; 0xd64 <__fixunssfsi+0x3c>
     d48:	20 e0       	ldi	r18, 0x00	; 0
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	40 e0       	ldi	r20, 0x00	; 0
     d4e:	5f e4       	ldi	r21, 0x4F	; 79
     d50:	c7 01       	movw	r24, r14
     d52:	b6 01       	movw	r22, r12
     d54:	0e 94 3f 08 	call	0x107e	; 0x107e <__subsf3>
     d58:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__fixsfsi>
     d5c:	8b 01       	movw	r16, r22
     d5e:	9c 01       	movw	r18, r24
     d60:	30 58       	subi	r19, 0x80	; 128
     d62:	06 c0       	rjmp	.+12     	; 0xd70 <__fixunssfsi+0x48>
     d64:	c7 01       	movw	r24, r14
     d66:	b6 01       	movw	r22, r12
     d68:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__fixsfsi>
     d6c:	8b 01       	movw	r16, r22
     d6e:	9c 01       	movw	r18, r24
     d70:	b8 01       	movw	r22, r16
     d72:	c9 01       	movw	r24, r18
     d74:	1f 91       	pop	r17
     d76:	0f 91       	pop	r16
     d78:	ff 90       	pop	r15
     d7a:	ef 90       	pop	r14
     d7c:	df 90       	pop	r13
     d7e:	cf 90       	pop	r12
     d80:	08 95       	ret

00000d82 <_fpadd_parts>:
     d82:	a0 e0       	ldi	r26, 0x00	; 0
     d84:	b0 e0       	ldi	r27, 0x00	; 0
     d86:	e7 ec       	ldi	r30, 0xC7	; 199
     d88:	f6 e0       	ldi	r31, 0x06	; 6
     d8a:	0c 94 c5 0b 	jmp	0x178a	; 0x178a <__prologue_saves__+0x8>
     d8e:	3c 01       	movw	r6, r24
     d90:	cb 01       	movw	r24, r22
     d92:	ea 01       	movw	r28, r20
     d94:	d3 01       	movw	r26, r6
     d96:	2c 91       	ld	r18, X
     d98:	22 30       	cpi	r18, 0x02	; 2
     d9a:	08 f4       	brcc	.+2      	; 0xd9e <_fpadd_parts+0x1c>
     d9c:	3e c1       	rjmp	.+636    	; 0x101a <_fpadd_parts+0x298>
     d9e:	fb 01       	movw	r30, r22
     da0:	30 81       	ld	r19, Z
     da2:	32 30       	cpi	r19, 0x02	; 2
     da4:	08 f4       	brcc	.+2      	; 0xda8 <_fpadd_parts+0x26>
     da6:	36 c1       	rjmp	.+620    	; 0x1014 <_fpadd_parts+0x292>
     da8:	24 30       	cpi	r18, 0x04	; 4
     daa:	71 f4       	brne	.+28     	; 0xdc8 <_fpadd_parts+0x46>
     dac:	34 30       	cpi	r19, 0x04	; 4
     dae:	09 f0       	breq	.+2      	; 0xdb2 <_fpadd_parts+0x30>
     db0:	34 c1       	rjmp	.+616    	; 0x101a <_fpadd_parts+0x298>
     db2:	11 96       	adiw	r26, 0x01	; 1
     db4:	2c 91       	ld	r18, X
     db6:	81 81       	ldd	r24, Z+1	; 0x01
     db8:	28 17       	cp	r18, r24
     dba:	09 f4       	brne	.+2      	; 0xdbe <_fpadd_parts+0x3c>
     dbc:	2e c1       	rjmp	.+604    	; 0x101a <_fpadd_parts+0x298>
     dbe:	b1 e3       	ldi	r27, 0x31	; 49
     dc0:	6b 2e       	mov	r6, r27
     dc2:	b1 e0       	ldi	r27, 0x01	; 1
     dc4:	7b 2e       	mov	r7, r27
     dc6:	29 c1       	rjmp	.+594    	; 0x101a <_fpadd_parts+0x298>
     dc8:	34 30       	cpi	r19, 0x04	; 4
     dca:	09 f4       	brne	.+2      	; 0xdce <_fpadd_parts+0x4c>
     dcc:	23 c1       	rjmp	.+582    	; 0x1014 <_fpadd_parts+0x292>
     dce:	32 30       	cpi	r19, 0x02	; 2
     dd0:	91 f4       	brne	.+36     	; 0xdf6 <_fpadd_parts+0x74>
     dd2:	22 30       	cpi	r18, 0x02	; 2
     dd4:	09 f0       	breq	.+2      	; 0xdd8 <_fpadd_parts+0x56>
     dd6:	21 c1       	rjmp	.+578    	; 0x101a <_fpadd_parts+0x298>
     dd8:	28 e0       	ldi	r18, 0x08	; 8
     dda:	f3 01       	movw	r30, r6
     ddc:	da 01       	movw	r26, r20
     dde:	01 90       	ld	r0, Z+
     de0:	0d 92       	st	X+, r0
     de2:	2a 95       	dec	r18
     de4:	e1 f7       	brne	.-8      	; 0xdde <_fpadd_parts+0x5c>
     de6:	db 01       	movw	r26, r22
     de8:	11 96       	adiw	r26, 0x01	; 1
     dea:	8c 91       	ld	r24, X
     dec:	f3 01       	movw	r30, r6
     dee:	91 81       	ldd	r25, Z+1	; 0x01
     df0:	89 23       	and	r24, r25
     df2:	89 83       	std	Y+1, r24	; 0x01
     df4:	11 c1       	rjmp	.+546    	; 0x1018 <_fpadd_parts+0x296>
     df6:	22 30       	cpi	r18, 0x02	; 2
     df8:	09 f4       	brne	.+2      	; 0xdfc <_fpadd_parts+0x7a>
     dfa:	0c c1       	rjmp	.+536    	; 0x1014 <_fpadd_parts+0x292>
     dfc:	d3 01       	movw	r26, r6
     dfe:	12 96       	adiw	r26, 0x02	; 2
     e00:	ed 91       	ld	r30, X+
     e02:	fc 91       	ld	r31, X
     e04:	13 97       	sbiw	r26, 0x03	; 3
     e06:	db 01       	movw	r26, r22
     e08:	12 96       	adiw	r26, 0x02	; 2
     e0a:	6d 91       	ld	r22, X+
     e0c:	7c 91       	ld	r23, X
     e0e:	13 97       	sbiw	r26, 0x03	; 3
     e10:	d3 01       	movw	r26, r6
     e12:	14 96       	adiw	r26, 0x04	; 4
     e14:	0d 91       	ld	r16, X+
     e16:	1d 91       	ld	r17, X+
     e18:	2d 91       	ld	r18, X+
     e1a:	3c 91       	ld	r19, X
     e1c:	17 97       	sbiw	r26, 0x07	; 7
     e1e:	dc 01       	movw	r26, r24
     e20:	14 96       	adiw	r26, 0x04	; 4
     e22:	cd 90       	ld	r12, X+
     e24:	dd 90       	ld	r13, X+
     e26:	ed 90       	ld	r14, X+
     e28:	fc 90       	ld	r15, X
     e2a:	17 97       	sbiw	r26, 0x07	; 7
     e2c:	af 01       	movw	r20, r30
     e2e:	46 1b       	sub	r20, r22
     e30:	57 0b       	sbc	r21, r23
     e32:	da 01       	movw	r26, r20
     e34:	57 ff       	sbrs	r21, 7
     e36:	04 c0       	rjmp	.+8      	; 0xe40 <_fpadd_parts+0xbe>
     e38:	aa 27       	eor	r26, r26
     e3a:	bb 27       	eor	r27, r27
     e3c:	a4 1b       	sub	r26, r20
     e3e:	b5 0b       	sbc	r27, r21
     e40:	a0 32       	cpi	r26, 0x20	; 32
     e42:	b1 05       	cpc	r27, r1
     e44:	0c f0       	brlt	.+2      	; 0xe48 <_fpadd_parts+0xc6>
     e46:	65 c0       	rjmp	.+202    	; 0xf12 <_fpadd_parts+0x190>
     e48:	14 16       	cp	r1, r20
     e4a:	15 06       	cpc	r1, r21
     e4c:	7c f5       	brge	.+94     	; 0xeac <_fpadd_parts+0x12a>
     e4e:	b7 01       	movw	r22, r14
     e50:	a6 01       	movw	r20, r12
     e52:	0a 2e       	mov	r0, r26
     e54:	04 c0       	rjmp	.+8      	; 0xe5e <_fpadd_parts+0xdc>
     e56:	76 95       	lsr	r23
     e58:	67 95       	ror	r22
     e5a:	57 95       	ror	r21
     e5c:	47 95       	ror	r20
     e5e:	0a 94       	dec	r0
     e60:	d2 f7       	brpl	.-12     	; 0xe56 <_fpadd_parts+0xd4>
     e62:	81 2c       	mov	r8, r1
     e64:	91 2c       	mov	r9, r1
     e66:	54 01       	movw	r10, r8
     e68:	83 94       	inc	r8
     e6a:	04 c0       	rjmp	.+8      	; 0xe74 <_fpadd_parts+0xf2>
     e6c:	88 0c       	add	r8, r8
     e6e:	99 1c       	adc	r9, r9
     e70:	aa 1c       	adc	r10, r10
     e72:	bb 1c       	adc	r11, r11
     e74:	aa 95       	dec	r26
     e76:	d2 f7       	brpl	.-12     	; 0xe6c <_fpadd_parts+0xea>
     e78:	b1 e0       	ldi	r27, 0x01	; 1
     e7a:	8b 1a       	sub	r8, r27
     e7c:	91 08       	sbc	r9, r1
     e7e:	a1 08       	sbc	r10, r1
     e80:	b1 08       	sbc	r11, r1
     e82:	8c 20       	and	r8, r12
     e84:	9d 20       	and	r9, r13
     e86:	ae 20       	and	r10, r14
     e88:	bf 20       	and	r11, r15
     e8a:	c1 2c       	mov	r12, r1
     e8c:	d1 2c       	mov	r13, r1
     e8e:	76 01       	movw	r14, r12
     e90:	c3 94       	inc	r12
     e92:	81 14       	cp	r8, r1
     e94:	91 04       	cpc	r9, r1
     e96:	a1 04       	cpc	r10, r1
     e98:	b1 04       	cpc	r11, r1
     e9a:	19 f4       	brne	.+6      	; 0xea2 <_fpadd_parts+0x120>
     e9c:	c1 2c       	mov	r12, r1
     e9e:	d1 2c       	mov	r13, r1
     ea0:	76 01       	movw	r14, r12
     ea2:	c4 2a       	or	r12, r20
     ea4:	d5 2a       	or	r13, r21
     ea6:	e6 2a       	or	r14, r22
     ea8:	f7 2a       	or	r15, r23
     eaa:	3e c0       	rjmp	.+124    	; 0xf28 <_fpadd_parts+0x1a6>
     eac:	45 2b       	or	r20, r21
     eae:	e1 f1       	breq	.+120    	; 0xf28 <_fpadd_parts+0x1a6>
     eb0:	ea 0f       	add	r30, r26
     eb2:	fb 1f       	adc	r31, r27
     eb4:	b9 01       	movw	r22, r18
     eb6:	a8 01       	movw	r20, r16
     eb8:	0a 2e       	mov	r0, r26
     eba:	04 c0       	rjmp	.+8      	; 0xec4 <_fpadd_parts+0x142>
     ebc:	76 95       	lsr	r23
     ebe:	67 95       	ror	r22
     ec0:	57 95       	ror	r21
     ec2:	47 95       	ror	r20
     ec4:	0a 94       	dec	r0
     ec6:	d2 f7       	brpl	.-12     	; 0xebc <_fpadd_parts+0x13a>
     ec8:	81 2c       	mov	r8, r1
     eca:	91 2c       	mov	r9, r1
     ecc:	54 01       	movw	r10, r8
     ece:	83 94       	inc	r8
     ed0:	04 c0       	rjmp	.+8      	; 0xeda <_fpadd_parts+0x158>
     ed2:	88 0c       	add	r8, r8
     ed4:	99 1c       	adc	r9, r9
     ed6:	aa 1c       	adc	r10, r10
     ed8:	bb 1c       	adc	r11, r11
     eda:	aa 95       	dec	r26
     edc:	d2 f7       	brpl	.-12     	; 0xed2 <_fpadd_parts+0x150>
     ede:	a1 e0       	ldi	r26, 0x01	; 1
     ee0:	8a 1a       	sub	r8, r26
     ee2:	91 08       	sbc	r9, r1
     ee4:	a1 08       	sbc	r10, r1
     ee6:	b1 08       	sbc	r11, r1
     ee8:	80 22       	and	r8, r16
     eea:	91 22       	and	r9, r17
     eec:	a2 22       	and	r10, r18
     eee:	b3 22       	and	r11, r19
     ef0:	01 e0       	ldi	r16, 0x01	; 1
     ef2:	10 e0       	ldi	r17, 0x00	; 0
     ef4:	20 e0       	ldi	r18, 0x00	; 0
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	81 14       	cp	r8, r1
     efa:	91 04       	cpc	r9, r1
     efc:	a1 04       	cpc	r10, r1
     efe:	b1 04       	cpc	r11, r1
     f00:	19 f4       	brne	.+6      	; 0xf08 <_fpadd_parts+0x186>
     f02:	00 e0       	ldi	r16, 0x00	; 0
     f04:	10 e0       	ldi	r17, 0x00	; 0
     f06:	98 01       	movw	r18, r16
     f08:	04 2b       	or	r16, r20
     f0a:	15 2b       	or	r17, r21
     f0c:	26 2b       	or	r18, r22
     f0e:	37 2b       	or	r19, r23
     f10:	0b c0       	rjmp	.+22     	; 0xf28 <_fpadd_parts+0x1a6>
     f12:	6e 17       	cp	r22, r30
     f14:	7f 07       	cpc	r23, r31
     f16:	24 f4       	brge	.+8      	; 0xf20 <_fpadd_parts+0x19e>
     f18:	c1 2c       	mov	r12, r1
     f1a:	d1 2c       	mov	r13, r1
     f1c:	76 01       	movw	r14, r12
     f1e:	04 c0       	rjmp	.+8      	; 0xf28 <_fpadd_parts+0x1a6>
     f20:	fb 01       	movw	r30, r22
     f22:	00 e0       	ldi	r16, 0x00	; 0
     f24:	10 e0       	ldi	r17, 0x00	; 0
     f26:	98 01       	movw	r18, r16
     f28:	d3 01       	movw	r26, r6
     f2a:	11 96       	adiw	r26, 0x01	; 1
     f2c:	4c 91       	ld	r20, X
     f2e:	dc 01       	movw	r26, r24
     f30:	11 96       	adiw	r26, 0x01	; 1
     f32:	8c 91       	ld	r24, X
     f34:	48 17       	cp	r20, r24
     f36:	09 f4       	brne	.+2      	; 0xf3a <_fpadd_parts+0x1b8>
     f38:	42 c0       	rjmp	.+132    	; 0xfbe <_fpadd_parts+0x23c>
     f3a:	44 23       	and	r20, r20
     f3c:	49 f0       	breq	.+18     	; 0xf50 <_fpadd_parts+0x1ce>
     f3e:	d7 01       	movw	r26, r14
     f40:	c6 01       	movw	r24, r12
     f42:	80 1b       	sub	r24, r16
     f44:	91 0b       	sbc	r25, r17
     f46:	a2 0b       	sbc	r26, r18
     f48:	b3 0b       	sbc	r27, r19
     f4a:	8c 01       	movw	r16, r24
     f4c:	9d 01       	movw	r18, r26
     f4e:	04 c0       	rjmp	.+8      	; 0xf58 <_fpadd_parts+0x1d6>
     f50:	0c 19       	sub	r16, r12
     f52:	1d 09       	sbc	r17, r13
     f54:	2e 09       	sbc	r18, r14
     f56:	3f 09       	sbc	r19, r15
     f58:	37 fd       	sbrc	r19, 7
     f5a:	04 c0       	rjmp	.+8      	; 0xf64 <_fpadd_parts+0x1e2>
     f5c:	19 82       	std	Y+1, r1	; 0x01
     f5e:	fb 83       	std	Y+3, r31	; 0x03
     f60:	ea 83       	std	Y+2, r30	; 0x02
     f62:	0b c0       	rjmp	.+22     	; 0xf7a <_fpadd_parts+0x1f8>
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	89 83       	std	Y+1, r24	; 0x01
     f68:	fb 83       	std	Y+3, r31	; 0x03
     f6a:	ea 83       	std	Y+2, r30	; 0x02
     f6c:	30 95       	com	r19
     f6e:	20 95       	com	r18
     f70:	10 95       	com	r17
     f72:	01 95       	neg	r16
     f74:	1f 4f       	sbci	r17, 0xFF	; 255
     f76:	2f 4f       	sbci	r18, 0xFF	; 255
     f78:	3f 4f       	sbci	r19, 0xFF	; 255
     f7a:	0c 83       	std	Y+4, r16	; 0x04
     f7c:	1d 83       	std	Y+5, r17	; 0x05
     f7e:	2e 83       	std	Y+6, r18	; 0x06
     f80:	3f 83       	std	Y+7, r19	; 0x07
     f82:	0d c0       	rjmp	.+26     	; 0xf9e <_fpadd_parts+0x21c>
     f84:	88 0f       	add	r24, r24
     f86:	99 1f       	adc	r25, r25
     f88:	aa 1f       	adc	r26, r26
     f8a:	bb 1f       	adc	r27, r27
     f8c:	8c 83       	std	Y+4, r24	; 0x04
     f8e:	9d 83       	std	Y+5, r25	; 0x05
     f90:	ae 83       	std	Y+6, r26	; 0x06
     f92:	bf 83       	std	Y+7, r27	; 0x07
     f94:	8a 81       	ldd	r24, Y+2	; 0x02
     f96:	9b 81       	ldd	r25, Y+3	; 0x03
     f98:	01 97       	sbiw	r24, 0x01	; 1
     f9a:	9b 83       	std	Y+3, r25	; 0x03
     f9c:	8a 83       	std	Y+2, r24	; 0x02
     f9e:	8c 81       	ldd	r24, Y+4	; 0x04
     fa0:	9d 81       	ldd	r25, Y+5	; 0x05
     fa2:	ae 81       	ldd	r26, Y+6	; 0x06
     fa4:	bf 81       	ldd	r27, Y+7	; 0x07
     fa6:	8c 01       	movw	r16, r24
     fa8:	9d 01       	movw	r18, r26
     faa:	01 50       	subi	r16, 0x01	; 1
     fac:	11 09       	sbc	r17, r1
     fae:	21 09       	sbc	r18, r1
     fb0:	31 09       	sbc	r19, r1
     fb2:	0f 3f       	cpi	r16, 0xFF	; 255
     fb4:	1f 4f       	sbci	r17, 0xFF	; 255
     fb6:	2f 4f       	sbci	r18, 0xFF	; 255
     fb8:	3f 43       	sbci	r19, 0x3F	; 63
     fba:	20 f3       	brcs	.-56     	; 0xf84 <_fpadd_parts+0x202>
     fbc:	0b c0       	rjmp	.+22     	; 0xfd4 <_fpadd_parts+0x252>
     fbe:	49 83       	std	Y+1, r20	; 0x01
     fc0:	fb 83       	std	Y+3, r31	; 0x03
     fc2:	ea 83       	std	Y+2, r30	; 0x02
     fc4:	0c 0d       	add	r16, r12
     fc6:	1d 1d       	adc	r17, r13
     fc8:	2e 1d       	adc	r18, r14
     fca:	3f 1d       	adc	r19, r15
     fcc:	0c 83       	std	Y+4, r16	; 0x04
     fce:	1d 83       	std	Y+5, r17	; 0x05
     fd0:	2e 83       	std	Y+6, r18	; 0x06
     fd2:	3f 83       	std	Y+7, r19	; 0x07
     fd4:	83 e0       	ldi	r24, 0x03	; 3
     fd6:	88 83       	st	Y, r24
     fd8:	0c 81       	ldd	r16, Y+4	; 0x04
     fda:	1d 81       	ldd	r17, Y+5	; 0x05
     fdc:	2e 81       	ldd	r18, Y+6	; 0x06
     fde:	3f 81       	ldd	r19, Y+7	; 0x07
     fe0:	37 ff       	sbrs	r19, 7
     fe2:	1a c0       	rjmp	.+52     	; 0x1018 <_fpadd_parts+0x296>
     fe4:	d9 01       	movw	r26, r18
     fe6:	c8 01       	movw	r24, r16
     fe8:	81 70       	andi	r24, 0x01	; 1
     fea:	99 27       	eor	r25, r25
     fec:	aa 27       	eor	r26, r26
     fee:	bb 27       	eor	r27, r27
     ff0:	36 95       	lsr	r19
     ff2:	27 95       	ror	r18
     ff4:	17 95       	ror	r17
     ff6:	07 95       	ror	r16
     ff8:	80 2b       	or	r24, r16
     ffa:	91 2b       	or	r25, r17
     ffc:	a2 2b       	or	r26, r18
     ffe:	b3 2b       	or	r27, r19
    1000:	8c 83       	std	Y+4, r24	; 0x04
    1002:	9d 83       	std	Y+5, r25	; 0x05
    1004:	ae 83       	std	Y+6, r26	; 0x06
    1006:	bf 83       	std	Y+7, r27	; 0x07
    1008:	8a 81       	ldd	r24, Y+2	; 0x02
    100a:	9b 81       	ldd	r25, Y+3	; 0x03
    100c:	01 96       	adiw	r24, 0x01	; 1
    100e:	9b 83       	std	Y+3, r25	; 0x03
    1010:	8a 83       	std	Y+2, r24	; 0x02
    1012:	02 c0       	rjmp	.+4      	; 0x1018 <_fpadd_parts+0x296>
    1014:	3c 01       	movw	r6, r24
    1016:	01 c0       	rjmp	.+2      	; 0x101a <_fpadd_parts+0x298>
    1018:	3e 01       	movw	r6, r28
    101a:	c3 01       	movw	r24, r6
    101c:	cd b7       	in	r28, 0x3d	; 61
    101e:	de b7       	in	r29, 0x3e	; 62
    1020:	ee e0       	ldi	r30, 0x0E	; 14
    1022:	0c 94 e1 0b 	jmp	0x17c2	; 0x17c2 <__epilogue_restores__+0x8>

00001026 <__addsf3>:
    1026:	a0 e2       	ldi	r26, 0x20	; 32
    1028:	b0 e0       	ldi	r27, 0x00	; 0
    102a:	e9 e1       	ldi	r30, 0x19	; 25
    102c:	f8 e0       	ldi	r31, 0x08	; 8
    102e:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__prologue_saves__+0x20>
    1032:	6d 8f       	std	Y+29, r22	; 0x1d
    1034:	7e 8f       	std	Y+30, r23	; 0x1e
    1036:	8f 8f       	std	Y+31, r24	; 0x1f
    1038:	98 a3       	std	Y+32, r25	; 0x20
    103a:	29 8f       	std	Y+25, r18	; 0x19
    103c:	3a 8f       	std	Y+26, r19	; 0x1a
    103e:	4b 8f       	std	Y+27, r20	; 0x1b
    1040:	5c 8f       	std	Y+28, r21	; 0x1c
    1042:	be 01       	movw	r22, r28
    1044:	6f 5e       	subi	r22, 0xEF	; 239
    1046:	7f 4f       	sbci	r23, 0xFF	; 255
    1048:	ce 01       	movw	r24, r28
    104a:	4d 96       	adiw	r24, 0x1d	; 29
    104c:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    1050:	be 01       	movw	r22, r28
    1052:	67 5f       	subi	r22, 0xF7	; 247
    1054:	7f 4f       	sbci	r23, 0xFF	; 255
    1056:	ce 01       	movw	r24, r28
    1058:	49 96       	adiw	r24, 0x19	; 25
    105a:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    105e:	ae 01       	movw	r20, r28
    1060:	4f 5f       	subi	r20, 0xFF	; 255
    1062:	5f 4f       	sbci	r21, 0xFF	; 255
    1064:	be 01       	movw	r22, r28
    1066:	67 5f       	subi	r22, 0xF7	; 247
    1068:	7f 4f       	sbci	r23, 0xFF	; 255
    106a:	ce 01       	movw	r24, r28
    106c:	41 96       	adiw	r24, 0x11	; 17
    106e:	0e 94 c1 06 	call	0xd82	; 0xd82 <_fpadd_parts>
    1072:	0e 94 30 0a 	call	0x1460	; 0x1460 <__pack_f>
    1076:	a0 96       	adiw	r28, 0x20	; 32
    1078:	e2 e0       	ldi	r30, 0x02	; 2
    107a:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <__epilogue_restores__+0x20>

0000107e <__subsf3>:
    107e:	a0 e2       	ldi	r26, 0x20	; 32
    1080:	b0 e0       	ldi	r27, 0x00	; 0
    1082:	e5 e4       	ldi	r30, 0x45	; 69
    1084:	f8 e0       	ldi	r31, 0x08	; 8
    1086:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__prologue_saves__+0x20>
    108a:	6d 8f       	std	Y+29, r22	; 0x1d
    108c:	7e 8f       	std	Y+30, r23	; 0x1e
    108e:	8f 8f       	std	Y+31, r24	; 0x1f
    1090:	98 a3       	std	Y+32, r25	; 0x20
    1092:	29 8f       	std	Y+25, r18	; 0x19
    1094:	3a 8f       	std	Y+26, r19	; 0x1a
    1096:	4b 8f       	std	Y+27, r20	; 0x1b
    1098:	5c 8f       	std	Y+28, r21	; 0x1c
    109a:	be 01       	movw	r22, r28
    109c:	6f 5e       	subi	r22, 0xEF	; 239
    109e:	7f 4f       	sbci	r23, 0xFF	; 255
    10a0:	ce 01       	movw	r24, r28
    10a2:	4d 96       	adiw	r24, 0x1d	; 29
    10a4:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    10a8:	be 01       	movw	r22, r28
    10aa:	67 5f       	subi	r22, 0xF7	; 247
    10ac:	7f 4f       	sbci	r23, 0xFF	; 255
    10ae:	ce 01       	movw	r24, r28
    10b0:	49 96       	adiw	r24, 0x19	; 25
    10b2:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    10b6:	8a 85       	ldd	r24, Y+10	; 0x0a
    10b8:	91 e0       	ldi	r25, 0x01	; 1
    10ba:	89 27       	eor	r24, r25
    10bc:	8a 87       	std	Y+10, r24	; 0x0a
    10be:	ae 01       	movw	r20, r28
    10c0:	4f 5f       	subi	r20, 0xFF	; 255
    10c2:	5f 4f       	sbci	r21, 0xFF	; 255
    10c4:	be 01       	movw	r22, r28
    10c6:	67 5f       	subi	r22, 0xF7	; 247
    10c8:	7f 4f       	sbci	r23, 0xFF	; 255
    10ca:	ce 01       	movw	r24, r28
    10cc:	41 96       	adiw	r24, 0x11	; 17
    10ce:	0e 94 c1 06 	call	0xd82	; 0xd82 <_fpadd_parts>
    10d2:	0e 94 30 0a 	call	0x1460	; 0x1460 <__pack_f>
    10d6:	a0 96       	adiw	r28, 0x20	; 32
    10d8:	e2 e0       	ldi	r30, 0x02	; 2
    10da:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <__epilogue_restores__+0x20>

000010de <__mulsf3>:
    10de:	a0 e2       	ldi	r26, 0x20	; 32
    10e0:	b0 e0       	ldi	r27, 0x00	; 0
    10e2:	e5 e7       	ldi	r30, 0x75	; 117
    10e4:	f8 e0       	ldi	r31, 0x08	; 8
    10e6:	0c 94 c3 0b 	jmp	0x1786	; 0x1786 <__prologue_saves__+0x4>
    10ea:	6d 8f       	std	Y+29, r22	; 0x1d
    10ec:	7e 8f       	std	Y+30, r23	; 0x1e
    10ee:	8f 8f       	std	Y+31, r24	; 0x1f
    10f0:	98 a3       	std	Y+32, r25	; 0x20
    10f2:	29 8f       	std	Y+25, r18	; 0x19
    10f4:	3a 8f       	std	Y+26, r19	; 0x1a
    10f6:	4b 8f       	std	Y+27, r20	; 0x1b
    10f8:	5c 8f       	std	Y+28, r21	; 0x1c
    10fa:	be 01       	movw	r22, r28
    10fc:	6f 5e       	subi	r22, 0xEF	; 239
    10fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1100:	ce 01       	movw	r24, r28
    1102:	4d 96       	adiw	r24, 0x1d	; 29
    1104:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    1108:	be 01       	movw	r22, r28
    110a:	67 5f       	subi	r22, 0xF7	; 247
    110c:	7f 4f       	sbci	r23, 0xFF	; 255
    110e:	ce 01       	movw	r24, r28
    1110:	49 96       	adiw	r24, 0x19	; 25
    1112:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    1116:	99 89       	ldd	r25, Y+17	; 0x11
    1118:	92 30       	cpi	r25, 0x02	; 2
    111a:	08 f4       	brcc	.+2      	; 0x111e <__stack+0x1f>
    111c:	12 c0       	rjmp	.+36     	; 0x1142 <__stack+0x43>
    111e:	89 85       	ldd	r24, Y+9	; 0x09
    1120:	82 30       	cpi	r24, 0x02	; 2
    1122:	08 f4       	brcc	.+2      	; 0x1126 <__stack+0x27>
    1124:	1a c0       	rjmp	.+52     	; 0x115a <__stack+0x5b>
    1126:	94 30       	cpi	r25, 0x04	; 4
    1128:	21 f4       	brne	.+8      	; 0x1132 <__stack+0x33>
    112a:	82 30       	cpi	r24, 0x02	; 2
    112c:	09 f4       	brne	.+2      	; 0x1130 <__stack+0x31>
    112e:	b4 c0       	rjmp	.+360    	; 0x1298 <__stack+0x199>
    1130:	08 c0       	rjmp	.+16     	; 0x1142 <__stack+0x43>
    1132:	84 30       	cpi	r24, 0x04	; 4
    1134:	21 f4       	brne	.+8      	; 0x113e <__stack+0x3f>
    1136:	92 30       	cpi	r25, 0x02	; 2
    1138:	09 f4       	brne	.+2      	; 0x113c <__stack+0x3d>
    113a:	ae c0       	rjmp	.+348    	; 0x1298 <__stack+0x199>
    113c:	0e c0       	rjmp	.+28     	; 0x115a <__stack+0x5b>
    113e:	92 30       	cpi	r25, 0x02	; 2
    1140:	51 f4       	brne	.+20     	; 0x1156 <__stack+0x57>
    1142:	81 e0       	ldi	r24, 0x01	; 1
    1144:	2a 89       	ldd	r18, Y+18	; 0x12
    1146:	9a 85       	ldd	r25, Y+10	; 0x0a
    1148:	29 13       	cpse	r18, r25
    114a:	01 c0       	rjmp	.+2      	; 0x114e <__stack+0x4f>
    114c:	80 e0       	ldi	r24, 0x00	; 0
    114e:	8a 8b       	std	Y+18, r24	; 0x12
    1150:	ce 01       	movw	r24, r28
    1152:	41 96       	adiw	r24, 0x11	; 17
    1154:	a3 c0       	rjmp	.+326    	; 0x129c <__stack+0x19d>
    1156:	82 30       	cpi	r24, 0x02	; 2
    1158:	51 f4       	brne	.+20     	; 0x116e <__stack+0x6f>
    115a:	81 e0       	ldi	r24, 0x01	; 1
    115c:	2a 89       	ldd	r18, Y+18	; 0x12
    115e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1160:	29 13       	cpse	r18, r25
    1162:	01 c0       	rjmp	.+2      	; 0x1166 <__stack+0x67>
    1164:	80 e0       	ldi	r24, 0x00	; 0
    1166:	8a 87       	std	Y+10, r24	; 0x0a
    1168:	ce 01       	movw	r24, r28
    116a:	09 96       	adiw	r24, 0x09	; 9
    116c:	97 c0       	rjmp	.+302    	; 0x129c <__stack+0x19d>
    116e:	8d 88       	ldd	r8, Y+21	; 0x15
    1170:	9e 88       	ldd	r9, Y+22	; 0x16
    1172:	af 88       	ldd	r10, Y+23	; 0x17
    1174:	b8 8c       	ldd	r11, Y+24	; 0x18
    1176:	0d 85       	ldd	r16, Y+13	; 0x0d
    1178:	1e 85       	ldd	r17, Y+14	; 0x0e
    117a:	2f 85       	ldd	r18, Y+15	; 0x0f
    117c:	38 89       	ldd	r19, Y+16	; 0x10
    117e:	e0 e2       	ldi	r30, 0x20	; 32
    1180:	f0 e0       	ldi	r31, 0x00	; 0
    1182:	80 e0       	ldi	r24, 0x00	; 0
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	dc 01       	movw	r26, r24
    1188:	c1 2c       	mov	r12, r1
    118a:	d1 2c       	mov	r13, r1
    118c:	76 01       	movw	r14, r12
    118e:	40 e0       	ldi	r20, 0x00	; 0
    1190:	50 e0       	ldi	r21, 0x00	; 0
    1192:	ba 01       	movw	r22, r20
    1194:	80 fe       	sbrs	r8, 0
    1196:	18 c0       	rjmp	.+48     	; 0x11c8 <__stack+0xc9>
    1198:	40 0f       	add	r20, r16
    119a:	51 1f       	adc	r21, r17
    119c:	62 1f       	adc	r22, r18
    119e:	73 1f       	adc	r23, r19
    11a0:	8c 0d       	add	r24, r12
    11a2:	9d 1d       	adc	r25, r13
    11a4:	ae 1d       	adc	r26, r14
    11a6:	bf 1d       	adc	r27, r15
    11a8:	41 2c       	mov	r4, r1
    11aa:	51 2c       	mov	r5, r1
    11ac:	32 01       	movw	r6, r4
    11ae:	43 94       	inc	r4
    11b0:	40 17       	cp	r20, r16
    11b2:	51 07       	cpc	r21, r17
    11b4:	62 07       	cpc	r22, r18
    11b6:	73 07       	cpc	r23, r19
    11b8:	18 f0       	brcs	.+6      	; 0x11c0 <__stack+0xc1>
    11ba:	41 2c       	mov	r4, r1
    11bc:	51 2c       	mov	r5, r1
    11be:	32 01       	movw	r6, r4
    11c0:	84 0d       	add	r24, r4
    11c2:	95 1d       	adc	r25, r5
    11c4:	a6 1d       	adc	r26, r6
    11c6:	b7 1d       	adc	r27, r7
    11c8:	cc 0c       	add	r12, r12
    11ca:	dd 1c       	adc	r13, r13
    11cc:	ee 1c       	adc	r14, r14
    11ce:	ff 1c       	adc	r15, r15
    11d0:	37 ff       	sbrs	r19, 7
    11d2:	02 c0       	rjmp	.+4      	; 0x11d8 <__stack+0xd9>
    11d4:	68 94       	set
    11d6:	c0 f8       	bld	r12, 0
    11d8:	00 0f       	add	r16, r16
    11da:	11 1f       	adc	r17, r17
    11dc:	22 1f       	adc	r18, r18
    11de:	33 1f       	adc	r19, r19
    11e0:	b6 94       	lsr	r11
    11e2:	a7 94       	ror	r10
    11e4:	97 94       	ror	r9
    11e6:	87 94       	ror	r8
    11e8:	31 97       	sbiw	r30, 0x01	; 1
    11ea:	a1 f6       	brne	.-88     	; 0x1194 <__stack+0x95>
    11ec:	2b 89       	ldd	r18, Y+19	; 0x13
    11ee:	3c 89       	ldd	r19, Y+20	; 0x14
    11f0:	eb 85       	ldd	r30, Y+11	; 0x0b
    11f2:	fc 85       	ldd	r31, Y+12	; 0x0c
    11f4:	2e 0f       	add	r18, r30
    11f6:	3f 1f       	adc	r19, r31
    11f8:	2e 5f       	subi	r18, 0xFE	; 254
    11fa:	3f 4f       	sbci	r19, 0xFF	; 255
    11fc:	3c 83       	std	Y+4, r19	; 0x04
    11fe:	2b 83       	std	Y+3, r18	; 0x03
    1200:	21 e0       	ldi	r18, 0x01	; 1
    1202:	ea 89       	ldd	r30, Y+18	; 0x12
    1204:	3a 85       	ldd	r19, Y+10	; 0x0a
    1206:	e3 13       	cpse	r30, r19
    1208:	01 c0       	rjmp	.+2      	; 0x120c <__stack+0x10d>
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	2a 83       	std	Y+2, r18	; 0x02
    120e:	eb 81       	ldd	r30, Y+3	; 0x03
    1210:	fc 81       	ldd	r31, Y+4	; 0x04
    1212:	0c c0       	rjmp	.+24     	; 0x122c <__stack+0x12d>
    1214:	80 ff       	sbrs	r24, 0
    1216:	05 c0       	rjmp	.+10     	; 0x1222 <__stack+0x123>
    1218:	76 95       	lsr	r23
    121a:	67 95       	ror	r22
    121c:	57 95       	ror	r21
    121e:	47 95       	ror	r20
    1220:	70 68       	ori	r23, 0x80	; 128
    1222:	b6 95       	lsr	r27
    1224:	a7 95       	ror	r26
    1226:	97 95       	ror	r25
    1228:	87 95       	ror	r24
    122a:	31 96       	adiw	r30, 0x01	; 1
    122c:	b7 fd       	sbrc	r27, 7
    122e:	f2 cf       	rjmp	.-28     	; 0x1214 <__stack+0x115>
    1230:	9f 01       	movw	r18, r30
    1232:	0c c0       	rjmp	.+24     	; 0x124c <__stack+0x14d>
    1234:	88 0f       	add	r24, r24
    1236:	99 1f       	adc	r25, r25
    1238:	aa 1f       	adc	r26, r26
    123a:	bb 1f       	adc	r27, r27
    123c:	77 fd       	sbrc	r23, 7
    123e:	81 60       	ori	r24, 0x01	; 1
    1240:	44 0f       	add	r20, r20
    1242:	55 1f       	adc	r21, r21
    1244:	66 1f       	adc	r22, r22
    1246:	77 1f       	adc	r23, r23
    1248:	21 50       	subi	r18, 0x01	; 1
    124a:	31 09       	sbc	r19, r1
    124c:	00 97       	sbiw	r24, 0x00	; 0
    124e:	a1 05       	cpc	r26, r1
    1250:	e0 e4       	ldi	r30, 0x40	; 64
    1252:	be 07       	cpc	r27, r30
    1254:	78 f3       	brcs	.-34     	; 0x1234 <__stack+0x135>
    1256:	2b 83       	std	Y+3, r18	; 0x03
    1258:	3c 83       	std	Y+4, r19	; 0x04
    125a:	8c 01       	movw	r16, r24
    125c:	9d 01       	movw	r18, r26
    125e:	0f 77       	andi	r16, 0x7F	; 127
    1260:	11 27       	eor	r17, r17
    1262:	22 27       	eor	r18, r18
    1264:	33 27       	eor	r19, r19
    1266:	00 34       	cpi	r16, 0x40	; 64
    1268:	11 05       	cpc	r17, r1
    126a:	21 05       	cpc	r18, r1
    126c:	31 05       	cpc	r19, r1
    126e:	59 f4       	brne	.+22     	; 0x1286 <__stack+0x187>
    1270:	87 fd       	sbrc	r24, 7
    1272:	09 c0       	rjmp	.+18     	; 0x1286 <__stack+0x187>
    1274:	45 2b       	or	r20, r21
    1276:	46 2b       	or	r20, r22
    1278:	47 2b       	or	r20, r23
    127a:	29 f0       	breq	.+10     	; 0x1286 <__stack+0x187>
    127c:	80 5c       	subi	r24, 0xC0	; 192
    127e:	9f 4f       	sbci	r25, 0xFF	; 255
    1280:	af 4f       	sbci	r26, 0xFF	; 255
    1282:	bf 4f       	sbci	r27, 0xFF	; 255
    1284:	80 78       	andi	r24, 0x80	; 128
    1286:	8d 83       	std	Y+5, r24	; 0x05
    1288:	9e 83       	std	Y+6, r25	; 0x06
    128a:	af 83       	std	Y+7, r26	; 0x07
    128c:	b8 87       	std	Y+8, r27	; 0x08
    128e:	83 e0       	ldi	r24, 0x03	; 3
    1290:	89 83       	std	Y+1, r24	; 0x01
    1292:	ce 01       	movw	r24, r28
    1294:	01 96       	adiw	r24, 0x01	; 1
    1296:	02 c0       	rjmp	.+4      	; 0x129c <__stack+0x19d>
    1298:	81 e3       	ldi	r24, 0x31	; 49
    129a:	91 e0       	ldi	r25, 0x01	; 1
    129c:	0e 94 30 0a 	call	0x1460	; 0x1460 <__pack_f>
    12a0:	a0 96       	adiw	r28, 0x20	; 32
    12a2:	e0 e1       	ldi	r30, 0x10	; 16
    12a4:	0c 94 df 0b 	jmp	0x17be	; 0x17be <__epilogue_restores__+0x4>

000012a8 <__gtsf2>:
    12a8:	a8 e1       	ldi	r26, 0x18	; 24
    12aa:	b0 e0       	ldi	r27, 0x00	; 0
    12ac:	ea e5       	ldi	r30, 0x5A	; 90
    12ae:	f9 e0       	ldi	r31, 0x09	; 9
    12b0:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__prologue_saves__+0x20>
    12b4:	6d 8b       	std	Y+21, r22	; 0x15
    12b6:	7e 8b       	std	Y+22, r23	; 0x16
    12b8:	8f 8b       	std	Y+23, r24	; 0x17
    12ba:	98 8f       	std	Y+24, r25	; 0x18
    12bc:	29 8b       	std	Y+17, r18	; 0x11
    12be:	3a 8b       	std	Y+18, r19	; 0x12
    12c0:	4b 8b       	std	Y+19, r20	; 0x13
    12c2:	5c 8b       	std	Y+20, r21	; 0x14
    12c4:	be 01       	movw	r22, r28
    12c6:	67 5f       	subi	r22, 0xF7	; 247
    12c8:	7f 4f       	sbci	r23, 0xFF	; 255
    12ca:	ce 01       	movw	r24, r28
    12cc:	45 96       	adiw	r24, 0x15	; 21
    12ce:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    12d2:	be 01       	movw	r22, r28
    12d4:	6f 5f       	subi	r22, 0xFF	; 255
    12d6:	7f 4f       	sbci	r23, 0xFF	; 255
    12d8:	ce 01       	movw	r24, r28
    12da:	41 96       	adiw	r24, 0x11	; 17
    12dc:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    12e0:	89 85       	ldd	r24, Y+9	; 0x09
    12e2:	82 30       	cpi	r24, 0x02	; 2
    12e4:	58 f0       	brcs	.+22     	; 0x12fc <__gtsf2+0x54>
    12e6:	89 81       	ldd	r24, Y+1	; 0x01
    12e8:	82 30       	cpi	r24, 0x02	; 2
    12ea:	40 f0       	brcs	.+16     	; 0x12fc <__gtsf2+0x54>
    12ec:	be 01       	movw	r22, r28
    12ee:	6f 5f       	subi	r22, 0xFF	; 255
    12f0:	7f 4f       	sbci	r23, 0xFF	; 255
    12f2:	ce 01       	movw	r24, r28
    12f4:	09 96       	adiw	r24, 0x09	; 9
    12f6:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <__fpcmp_parts_f>
    12fa:	01 c0       	rjmp	.+2      	; 0x12fe <__gtsf2+0x56>
    12fc:	8f ef       	ldi	r24, 0xFF	; 255
    12fe:	68 96       	adiw	r28, 0x18	; 24
    1300:	e2 e0       	ldi	r30, 0x02	; 2
    1302:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <__epilogue_restores__+0x20>

00001306 <__gesf2>:
    1306:	a8 e1       	ldi	r26, 0x18	; 24
    1308:	b0 e0       	ldi	r27, 0x00	; 0
    130a:	e9 e8       	ldi	r30, 0x89	; 137
    130c:	f9 e0       	ldi	r31, 0x09	; 9
    130e:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__prologue_saves__+0x20>
    1312:	6d 8b       	std	Y+21, r22	; 0x15
    1314:	7e 8b       	std	Y+22, r23	; 0x16
    1316:	8f 8b       	std	Y+23, r24	; 0x17
    1318:	98 8f       	std	Y+24, r25	; 0x18
    131a:	29 8b       	std	Y+17, r18	; 0x11
    131c:	3a 8b       	std	Y+18, r19	; 0x12
    131e:	4b 8b       	std	Y+19, r20	; 0x13
    1320:	5c 8b       	std	Y+20, r21	; 0x14
    1322:	be 01       	movw	r22, r28
    1324:	67 5f       	subi	r22, 0xF7	; 247
    1326:	7f 4f       	sbci	r23, 0xFF	; 255
    1328:	ce 01       	movw	r24, r28
    132a:	45 96       	adiw	r24, 0x15	; 21
    132c:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    1330:	be 01       	movw	r22, r28
    1332:	6f 5f       	subi	r22, 0xFF	; 255
    1334:	7f 4f       	sbci	r23, 0xFF	; 255
    1336:	ce 01       	movw	r24, r28
    1338:	41 96       	adiw	r24, 0x11	; 17
    133a:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    133e:	89 85       	ldd	r24, Y+9	; 0x09
    1340:	82 30       	cpi	r24, 0x02	; 2
    1342:	58 f0       	brcs	.+22     	; 0x135a <__gesf2+0x54>
    1344:	89 81       	ldd	r24, Y+1	; 0x01
    1346:	82 30       	cpi	r24, 0x02	; 2
    1348:	40 f0       	brcs	.+16     	; 0x135a <__gesf2+0x54>
    134a:	be 01       	movw	r22, r28
    134c:	6f 5f       	subi	r22, 0xFF	; 255
    134e:	7f 4f       	sbci	r23, 0xFF	; 255
    1350:	ce 01       	movw	r24, r28
    1352:	09 96       	adiw	r24, 0x09	; 9
    1354:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <__fpcmp_parts_f>
    1358:	01 c0       	rjmp	.+2      	; 0x135c <__gesf2+0x56>
    135a:	8f ef       	ldi	r24, 0xFF	; 255
    135c:	68 96       	adiw	r28, 0x18	; 24
    135e:	e2 e0       	ldi	r30, 0x02	; 2
    1360:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <__epilogue_restores__+0x20>

00001364 <__ltsf2>:
    1364:	a8 e1       	ldi	r26, 0x18	; 24
    1366:	b0 e0       	ldi	r27, 0x00	; 0
    1368:	e8 eb       	ldi	r30, 0xB8	; 184
    136a:	f9 e0       	ldi	r31, 0x09	; 9
    136c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__prologue_saves__+0x20>
    1370:	6d 8b       	std	Y+21, r22	; 0x15
    1372:	7e 8b       	std	Y+22, r23	; 0x16
    1374:	8f 8b       	std	Y+23, r24	; 0x17
    1376:	98 8f       	std	Y+24, r25	; 0x18
    1378:	29 8b       	std	Y+17, r18	; 0x11
    137a:	3a 8b       	std	Y+18, r19	; 0x12
    137c:	4b 8b       	std	Y+19, r20	; 0x13
    137e:	5c 8b       	std	Y+20, r21	; 0x14
    1380:	be 01       	movw	r22, r28
    1382:	67 5f       	subi	r22, 0xF7	; 247
    1384:	7f 4f       	sbci	r23, 0xFF	; 255
    1386:	ce 01       	movw	r24, r28
    1388:	45 96       	adiw	r24, 0x15	; 21
    138a:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    138e:	be 01       	movw	r22, r28
    1390:	6f 5f       	subi	r22, 0xFF	; 255
    1392:	7f 4f       	sbci	r23, 0xFF	; 255
    1394:	ce 01       	movw	r24, r28
    1396:	41 96       	adiw	r24, 0x11	; 17
    1398:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    139c:	89 85       	ldd	r24, Y+9	; 0x09
    139e:	82 30       	cpi	r24, 0x02	; 2
    13a0:	58 f0       	brcs	.+22     	; 0x13b8 <__ltsf2+0x54>
    13a2:	89 81       	ldd	r24, Y+1	; 0x01
    13a4:	82 30       	cpi	r24, 0x02	; 2
    13a6:	40 f0       	brcs	.+16     	; 0x13b8 <__ltsf2+0x54>
    13a8:	be 01       	movw	r22, r28
    13aa:	6f 5f       	subi	r22, 0xFF	; 255
    13ac:	7f 4f       	sbci	r23, 0xFF	; 255
    13ae:	ce 01       	movw	r24, r28
    13b0:	09 96       	adiw	r24, 0x09	; 9
    13b2:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <__fpcmp_parts_f>
    13b6:	01 c0       	rjmp	.+2      	; 0x13ba <__ltsf2+0x56>
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	68 96       	adiw	r28, 0x18	; 24
    13bc:	e2 e0       	ldi	r30, 0x02	; 2
    13be:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <__epilogue_restores__+0x20>

000013c2 <__fixsfsi>:
    13c2:	ac e0       	ldi	r26, 0x0C	; 12
    13c4:	b0 e0       	ldi	r27, 0x00	; 0
    13c6:	e7 ee       	ldi	r30, 0xE7	; 231
    13c8:	f9 e0       	ldi	r31, 0x09	; 9
    13ca:	0c 94 cf 0b 	jmp	0x179e	; 0x179e <__prologue_saves__+0x1c>
    13ce:	69 87       	std	Y+9, r22	; 0x09
    13d0:	7a 87       	std	Y+10, r23	; 0x0a
    13d2:	8b 87       	std	Y+11, r24	; 0x0b
    13d4:	9c 87       	std	Y+12, r25	; 0x0c
    13d6:	be 01       	movw	r22, r28
    13d8:	6f 5f       	subi	r22, 0xFF	; 255
    13da:	7f 4f       	sbci	r23, 0xFF	; 255
    13dc:	ce 01       	movw	r24, r28
    13de:	09 96       	adiw	r24, 0x09	; 9
    13e0:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__unpack_f>
    13e4:	89 81       	ldd	r24, Y+1	; 0x01
    13e6:	82 30       	cpi	r24, 0x02	; 2
    13e8:	91 f1       	breq	.+100    	; 0x144e <__fixsfsi+0x8c>
    13ea:	82 30       	cpi	r24, 0x02	; 2
    13ec:	80 f1       	brcs	.+96     	; 0x144e <__fixsfsi+0x8c>
    13ee:	84 30       	cpi	r24, 0x04	; 4
    13f0:	41 f4       	brne	.+16     	; 0x1402 <__fixsfsi+0x40>
    13f2:	8a 81       	ldd	r24, Y+2	; 0x02
    13f4:	88 23       	and	r24, r24
    13f6:	31 f1       	breq	.+76     	; 0x1444 <__fixsfsi+0x82>
    13f8:	00 e0       	ldi	r16, 0x00	; 0
    13fa:	10 e0       	ldi	r17, 0x00	; 0
    13fc:	20 e0       	ldi	r18, 0x00	; 0
    13fe:	30 e8       	ldi	r19, 0x80	; 128
    1400:	29 c0       	rjmp	.+82     	; 0x1454 <__fixsfsi+0x92>
    1402:	2b 81       	ldd	r18, Y+3	; 0x03
    1404:	3c 81       	ldd	r19, Y+4	; 0x04
    1406:	37 fd       	sbrc	r19, 7
    1408:	22 c0       	rjmp	.+68     	; 0x144e <__fixsfsi+0x8c>
    140a:	2f 31       	cpi	r18, 0x1F	; 31
    140c:	31 05       	cpc	r19, r1
    140e:	8c f7       	brge	.-30     	; 0x13f2 <__fixsfsi+0x30>
    1410:	8e e1       	ldi	r24, 0x1E	; 30
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	82 1b       	sub	r24, r18
    1416:	93 0b       	sbc	r25, r19
    1418:	0d 81       	ldd	r16, Y+5	; 0x05
    141a:	1e 81       	ldd	r17, Y+6	; 0x06
    141c:	2f 81       	ldd	r18, Y+7	; 0x07
    141e:	38 85       	ldd	r19, Y+8	; 0x08
    1420:	04 c0       	rjmp	.+8      	; 0x142a <__fixsfsi+0x68>
    1422:	36 95       	lsr	r19
    1424:	27 95       	ror	r18
    1426:	17 95       	ror	r17
    1428:	07 95       	ror	r16
    142a:	8a 95       	dec	r24
    142c:	d2 f7       	brpl	.-12     	; 0x1422 <__fixsfsi+0x60>
    142e:	8a 81       	ldd	r24, Y+2	; 0x02
    1430:	88 23       	and	r24, r24
    1432:	81 f0       	breq	.+32     	; 0x1454 <__fixsfsi+0x92>
    1434:	30 95       	com	r19
    1436:	20 95       	com	r18
    1438:	10 95       	com	r17
    143a:	01 95       	neg	r16
    143c:	1f 4f       	sbci	r17, 0xFF	; 255
    143e:	2f 4f       	sbci	r18, 0xFF	; 255
    1440:	3f 4f       	sbci	r19, 0xFF	; 255
    1442:	08 c0       	rjmp	.+16     	; 0x1454 <__fixsfsi+0x92>
    1444:	0f ef       	ldi	r16, 0xFF	; 255
    1446:	1f ef       	ldi	r17, 0xFF	; 255
    1448:	2f ef       	ldi	r18, 0xFF	; 255
    144a:	3f e7       	ldi	r19, 0x7F	; 127
    144c:	03 c0       	rjmp	.+6      	; 0x1454 <__fixsfsi+0x92>
    144e:	00 e0       	ldi	r16, 0x00	; 0
    1450:	10 e0       	ldi	r17, 0x00	; 0
    1452:	98 01       	movw	r18, r16
    1454:	b8 01       	movw	r22, r16
    1456:	c9 01       	movw	r24, r18
    1458:	2c 96       	adiw	r28, 0x0c	; 12
    145a:	e4 e0       	ldi	r30, 0x04	; 4
    145c:	0c 94 eb 0b 	jmp	0x17d6	; 0x17d6 <__epilogue_restores__+0x1c>

00001460 <__pack_f>:
    1460:	0f 93       	push	r16
    1462:	1f 93       	push	r17
    1464:	cf 93       	push	r28
    1466:	fc 01       	movw	r30, r24
    1468:	44 81       	ldd	r20, Z+4	; 0x04
    146a:	55 81       	ldd	r21, Z+5	; 0x05
    146c:	66 81       	ldd	r22, Z+6	; 0x06
    146e:	77 81       	ldd	r23, Z+7	; 0x07
    1470:	c1 81       	ldd	r28, Z+1	; 0x01
    1472:	80 81       	ld	r24, Z
    1474:	82 30       	cpi	r24, 0x02	; 2
    1476:	20 f4       	brcc	.+8      	; 0x1480 <__pack_f+0x20>
    1478:	60 61       	ori	r22, 0x10	; 16
    147a:	8f ef       	ldi	r24, 0xFF	; 255
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	a3 c0       	rjmp	.+326    	; 0x15c6 <__pack_f+0x166>
    1480:	84 30       	cpi	r24, 0x04	; 4
    1482:	09 f4       	brne	.+2      	; 0x1486 <__pack_f+0x26>
    1484:	9b c0       	rjmp	.+310    	; 0x15bc <__pack_f+0x15c>
    1486:	82 30       	cpi	r24, 0x02	; 2
    1488:	09 f4       	brne	.+2      	; 0x148c <__pack_f+0x2c>
    148a:	92 c0       	rjmp	.+292    	; 0x15b0 <__pack_f+0x150>
    148c:	41 15       	cp	r20, r1
    148e:	51 05       	cpc	r21, r1
    1490:	61 05       	cpc	r22, r1
    1492:	71 05       	cpc	r23, r1
    1494:	09 f4       	brne	.+2      	; 0x1498 <__pack_f+0x38>
    1496:	8f c0       	rjmp	.+286    	; 0x15b6 <__pack_f+0x156>
    1498:	22 81       	ldd	r18, Z+2	; 0x02
    149a:	33 81       	ldd	r19, Z+3	; 0x03
    149c:	22 38       	cpi	r18, 0x82	; 130
    149e:	8f ef       	ldi	r24, 0xFF	; 255
    14a0:	38 07       	cpc	r19, r24
    14a2:	0c f0       	brlt	.+2      	; 0x14a6 <__pack_f+0x46>
    14a4:	57 c0       	rjmp	.+174    	; 0x1554 <__pack_f+0xf4>
    14a6:	e2 e8       	ldi	r30, 0x82	; 130
    14a8:	ff ef       	ldi	r31, 0xFF	; 255
    14aa:	e2 1b       	sub	r30, r18
    14ac:	f3 0b       	sbc	r31, r19
    14ae:	ea 31       	cpi	r30, 0x1A	; 26
    14b0:	f1 05       	cpc	r31, r1
    14b2:	64 f5       	brge	.+88     	; 0x150c <__pack_f+0xac>
    14b4:	8a 01       	movw	r16, r20
    14b6:	9b 01       	movw	r18, r22
    14b8:	0e 2e       	mov	r0, r30
    14ba:	04 c0       	rjmp	.+8      	; 0x14c4 <__pack_f+0x64>
    14bc:	36 95       	lsr	r19
    14be:	27 95       	ror	r18
    14c0:	17 95       	ror	r17
    14c2:	07 95       	ror	r16
    14c4:	0a 94       	dec	r0
    14c6:	d2 f7       	brpl	.-12     	; 0x14bc <__pack_f+0x5c>
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	a0 e0       	ldi	r26, 0x00	; 0
    14ce:	b0 e0       	ldi	r27, 0x00	; 0
    14d0:	04 c0       	rjmp	.+8      	; 0x14da <__pack_f+0x7a>
    14d2:	88 0f       	add	r24, r24
    14d4:	99 1f       	adc	r25, r25
    14d6:	aa 1f       	adc	r26, r26
    14d8:	bb 1f       	adc	r27, r27
    14da:	ea 95       	dec	r30
    14dc:	d2 f7       	brpl	.-12     	; 0x14d2 <__pack_f+0x72>
    14de:	01 97       	sbiw	r24, 0x01	; 1
    14e0:	a1 09       	sbc	r26, r1
    14e2:	b1 09       	sbc	r27, r1
    14e4:	84 23       	and	r24, r20
    14e6:	95 23       	and	r25, r21
    14e8:	a6 23       	and	r26, r22
    14ea:	b7 23       	and	r27, r23
    14ec:	41 e0       	ldi	r20, 0x01	; 1
    14ee:	50 e0       	ldi	r21, 0x00	; 0
    14f0:	60 e0       	ldi	r22, 0x00	; 0
    14f2:	70 e0       	ldi	r23, 0x00	; 0
    14f4:	89 2b       	or	r24, r25
    14f6:	8a 2b       	or	r24, r26
    14f8:	8b 2b       	or	r24, r27
    14fa:	19 f4       	brne	.+6      	; 0x1502 <__pack_f+0xa2>
    14fc:	40 e0       	ldi	r20, 0x00	; 0
    14fe:	50 e0       	ldi	r21, 0x00	; 0
    1500:	ba 01       	movw	r22, r20
    1502:	40 2b       	or	r20, r16
    1504:	51 2b       	or	r21, r17
    1506:	62 2b       	or	r22, r18
    1508:	73 2b       	or	r23, r19
    150a:	03 c0       	rjmp	.+6      	; 0x1512 <__pack_f+0xb2>
    150c:	40 e0       	ldi	r20, 0x00	; 0
    150e:	50 e0       	ldi	r21, 0x00	; 0
    1510:	ba 01       	movw	r22, r20
    1512:	db 01       	movw	r26, r22
    1514:	ca 01       	movw	r24, r20
    1516:	8f 77       	andi	r24, 0x7F	; 127
    1518:	99 27       	eor	r25, r25
    151a:	aa 27       	eor	r26, r26
    151c:	bb 27       	eor	r27, r27
    151e:	80 34       	cpi	r24, 0x40	; 64
    1520:	91 05       	cpc	r25, r1
    1522:	a1 05       	cpc	r26, r1
    1524:	b1 05       	cpc	r27, r1
    1526:	39 f4       	brne	.+14     	; 0x1536 <__pack_f+0xd6>
    1528:	47 ff       	sbrs	r20, 7
    152a:	09 c0       	rjmp	.+18     	; 0x153e <__pack_f+0xde>
    152c:	40 5c       	subi	r20, 0xC0	; 192
    152e:	5f 4f       	sbci	r21, 0xFF	; 255
    1530:	6f 4f       	sbci	r22, 0xFF	; 255
    1532:	7f 4f       	sbci	r23, 0xFF	; 255
    1534:	04 c0       	rjmp	.+8      	; 0x153e <__pack_f+0xde>
    1536:	41 5c       	subi	r20, 0xC1	; 193
    1538:	5f 4f       	sbci	r21, 0xFF	; 255
    153a:	6f 4f       	sbci	r22, 0xFF	; 255
    153c:	7f 4f       	sbci	r23, 0xFF	; 255
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	41 15       	cp	r20, r1
    1544:	51 05       	cpc	r21, r1
    1546:	61 05       	cpc	r22, r1
    1548:	20 e4       	ldi	r18, 0x40	; 64
    154a:	72 07       	cpc	r23, r18
    154c:	48 f5       	brcc	.+82     	; 0x15a0 <__pack_f+0x140>
    154e:	80 e0       	ldi	r24, 0x00	; 0
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	26 c0       	rjmp	.+76     	; 0x15a0 <__pack_f+0x140>
    1554:	20 38       	cpi	r18, 0x80	; 128
    1556:	31 05       	cpc	r19, r1
    1558:	8c f5       	brge	.+98     	; 0x15bc <__pack_f+0x15c>
    155a:	db 01       	movw	r26, r22
    155c:	ca 01       	movw	r24, r20
    155e:	8f 77       	andi	r24, 0x7F	; 127
    1560:	99 27       	eor	r25, r25
    1562:	aa 27       	eor	r26, r26
    1564:	bb 27       	eor	r27, r27
    1566:	80 34       	cpi	r24, 0x40	; 64
    1568:	91 05       	cpc	r25, r1
    156a:	a1 05       	cpc	r26, r1
    156c:	b1 05       	cpc	r27, r1
    156e:	39 f4       	brne	.+14     	; 0x157e <__pack_f+0x11e>
    1570:	47 ff       	sbrs	r20, 7
    1572:	09 c0       	rjmp	.+18     	; 0x1586 <__pack_f+0x126>
    1574:	40 5c       	subi	r20, 0xC0	; 192
    1576:	5f 4f       	sbci	r21, 0xFF	; 255
    1578:	6f 4f       	sbci	r22, 0xFF	; 255
    157a:	7f 4f       	sbci	r23, 0xFF	; 255
    157c:	04 c0       	rjmp	.+8      	; 0x1586 <__pack_f+0x126>
    157e:	41 5c       	subi	r20, 0xC1	; 193
    1580:	5f 4f       	sbci	r21, 0xFF	; 255
    1582:	6f 4f       	sbci	r22, 0xFF	; 255
    1584:	7f 4f       	sbci	r23, 0xFF	; 255
    1586:	77 fd       	sbrc	r23, 7
    1588:	04 c0       	rjmp	.+8      	; 0x1592 <__pack_f+0x132>
    158a:	c9 01       	movw	r24, r18
    158c:	81 58       	subi	r24, 0x81	; 129
    158e:	9f 4f       	sbci	r25, 0xFF	; 255
    1590:	07 c0       	rjmp	.+14     	; 0x15a0 <__pack_f+0x140>
    1592:	76 95       	lsr	r23
    1594:	67 95       	ror	r22
    1596:	57 95       	ror	r21
    1598:	47 95       	ror	r20
    159a:	c9 01       	movw	r24, r18
    159c:	80 58       	subi	r24, 0x80	; 128
    159e:	9f 4f       	sbci	r25, 0xFF	; 255
    15a0:	97 e0       	ldi	r25, 0x07	; 7
    15a2:	76 95       	lsr	r23
    15a4:	67 95       	ror	r22
    15a6:	57 95       	ror	r21
    15a8:	47 95       	ror	r20
    15aa:	9a 95       	dec	r25
    15ac:	d1 f7       	brne	.-12     	; 0x15a2 <__pack_f+0x142>
    15ae:	0b c0       	rjmp	.+22     	; 0x15c6 <__pack_f+0x166>
    15b0:	80 e0       	ldi	r24, 0x00	; 0
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	05 c0       	rjmp	.+10     	; 0x15c0 <__pack_f+0x160>
    15b6:	80 e0       	ldi	r24, 0x00	; 0
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	05 c0       	rjmp	.+10     	; 0x15c6 <__pack_f+0x166>
    15bc:	8f ef       	ldi	r24, 0xFF	; 255
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	40 e0       	ldi	r20, 0x00	; 0
    15c2:	50 e0       	ldi	r21, 0x00	; 0
    15c4:	ba 01       	movw	r22, r20
    15c6:	98 2f       	mov	r25, r24
    15c8:	96 95       	lsr	r25
    15ca:	c0 fb       	bst	r28, 0
    15cc:	97 f9       	bld	r25, 7
    15ce:	36 2f       	mov	r19, r22
    15d0:	80 fb       	bst	r24, 0
    15d2:	37 f9       	bld	r19, 7
    15d4:	64 2f       	mov	r22, r20
    15d6:	75 2f       	mov	r23, r21
    15d8:	83 2f       	mov	r24, r19
    15da:	cf 91       	pop	r28
    15dc:	1f 91       	pop	r17
    15de:	0f 91       	pop	r16
    15e0:	08 95       	ret

000015e2 <__unpack_f>:
    15e2:	cf 92       	push	r12
    15e4:	df 92       	push	r13
    15e6:	ef 92       	push	r14
    15e8:	dc 01       	movw	r26, r24
    15ea:	fb 01       	movw	r30, r22
    15ec:	cc 90       	ld	r12, X
    15ee:	11 96       	adiw	r26, 0x01	; 1
    15f0:	dc 90       	ld	r13, X
    15f2:	11 97       	sbiw	r26, 0x01	; 1
    15f4:	12 96       	adiw	r26, 0x02	; 2
    15f6:	8c 91       	ld	r24, X
    15f8:	12 97       	sbiw	r26, 0x02	; 2
    15fa:	3f e7       	ldi	r19, 0x7F	; 127
    15fc:	e3 2e       	mov	r14, r19
    15fe:	e8 22       	and	r14, r24
    1600:	6e 2d       	mov	r22, r14
    1602:	a6 01       	movw	r20, r12
    1604:	70 e0       	ldi	r23, 0x00	; 0
    1606:	98 2f       	mov	r25, r24
    1608:	99 1f       	adc	r25, r25
    160a:	99 27       	eor	r25, r25
    160c:	99 1f       	adc	r25, r25
    160e:	13 96       	adiw	r26, 0x03	; 3
    1610:	2c 91       	ld	r18, X
    1612:	82 2f       	mov	r24, r18
    1614:	88 0f       	add	r24, r24
    1616:	89 2b       	or	r24, r25
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	27 fb       	bst	r18, 7
    161c:	22 27       	eor	r18, r18
    161e:	20 f9       	bld	r18, 0
    1620:	21 83       	std	Z+1, r18	; 0x01
    1622:	00 97       	sbiw	r24, 0x00	; 0
    1624:	29 f5       	brne	.+74     	; 0x1670 <__unpack_f+0x8e>
    1626:	41 15       	cp	r20, r1
    1628:	51 05       	cpc	r21, r1
    162a:	61 05       	cpc	r22, r1
    162c:	71 05       	cpc	r23, r1
    162e:	11 f4       	brne	.+4      	; 0x1634 <__unpack_f+0x52>
    1630:	82 e0       	ldi	r24, 0x02	; 2
    1632:	27 c0       	rjmp	.+78     	; 0x1682 <__unpack_f+0xa0>
    1634:	82 e8       	ldi	r24, 0x82	; 130
    1636:	9f ef       	ldi	r25, 0xFF	; 255
    1638:	93 83       	std	Z+3, r25	; 0x03
    163a:	82 83       	std	Z+2, r24	; 0x02
    163c:	27 e0       	ldi	r18, 0x07	; 7
    163e:	44 0f       	add	r20, r20
    1640:	55 1f       	adc	r21, r21
    1642:	66 1f       	adc	r22, r22
    1644:	77 1f       	adc	r23, r23
    1646:	2a 95       	dec	r18
    1648:	d1 f7       	brne	.-12     	; 0x163e <__unpack_f+0x5c>
    164a:	83 e0       	ldi	r24, 0x03	; 3
    164c:	80 83       	st	Z, r24
    164e:	09 c0       	rjmp	.+18     	; 0x1662 <__unpack_f+0x80>
    1650:	44 0f       	add	r20, r20
    1652:	55 1f       	adc	r21, r21
    1654:	66 1f       	adc	r22, r22
    1656:	77 1f       	adc	r23, r23
    1658:	82 81       	ldd	r24, Z+2	; 0x02
    165a:	93 81       	ldd	r25, Z+3	; 0x03
    165c:	01 97       	sbiw	r24, 0x01	; 1
    165e:	93 83       	std	Z+3, r25	; 0x03
    1660:	82 83       	std	Z+2, r24	; 0x02
    1662:	41 15       	cp	r20, r1
    1664:	51 05       	cpc	r21, r1
    1666:	61 05       	cpc	r22, r1
    1668:	80 e4       	ldi	r24, 0x40	; 64
    166a:	78 07       	cpc	r23, r24
    166c:	88 f3       	brcs	.-30     	; 0x1650 <__unpack_f+0x6e>
    166e:	20 c0       	rjmp	.+64     	; 0x16b0 <__unpack_f+0xce>
    1670:	8f 3f       	cpi	r24, 0xFF	; 255
    1672:	91 05       	cpc	r25, r1
    1674:	79 f4       	brne	.+30     	; 0x1694 <__unpack_f+0xb2>
    1676:	41 15       	cp	r20, r1
    1678:	51 05       	cpc	r21, r1
    167a:	61 05       	cpc	r22, r1
    167c:	71 05       	cpc	r23, r1
    167e:	19 f4       	brne	.+6      	; 0x1686 <__unpack_f+0xa4>
    1680:	84 e0       	ldi	r24, 0x04	; 4
    1682:	80 83       	st	Z, r24
    1684:	19 c0       	rjmp	.+50     	; 0x16b8 <__unpack_f+0xd6>
    1686:	e4 fe       	sbrs	r14, 4
    1688:	03 c0       	rjmp	.+6      	; 0x1690 <__unpack_f+0xae>
    168a:	81 e0       	ldi	r24, 0x01	; 1
    168c:	80 83       	st	Z, r24
    168e:	10 c0       	rjmp	.+32     	; 0x16b0 <__unpack_f+0xce>
    1690:	10 82       	st	Z, r1
    1692:	0e c0       	rjmp	.+28     	; 0x16b0 <__unpack_f+0xce>
    1694:	8f 57       	subi	r24, 0x7F	; 127
    1696:	91 09       	sbc	r25, r1
    1698:	93 83       	std	Z+3, r25	; 0x03
    169a:	82 83       	std	Z+2, r24	; 0x02
    169c:	83 e0       	ldi	r24, 0x03	; 3
    169e:	80 83       	st	Z, r24
    16a0:	87 e0       	ldi	r24, 0x07	; 7
    16a2:	44 0f       	add	r20, r20
    16a4:	55 1f       	adc	r21, r21
    16a6:	66 1f       	adc	r22, r22
    16a8:	77 1f       	adc	r23, r23
    16aa:	8a 95       	dec	r24
    16ac:	d1 f7       	brne	.-12     	; 0x16a2 <__unpack_f+0xc0>
    16ae:	70 64       	ori	r23, 0x40	; 64
    16b0:	44 83       	std	Z+4, r20	; 0x04
    16b2:	55 83       	std	Z+5, r21	; 0x05
    16b4:	66 83       	std	Z+6, r22	; 0x06
    16b6:	77 83       	std	Z+7, r23	; 0x07
    16b8:	ef 90       	pop	r14
    16ba:	df 90       	pop	r13
    16bc:	cf 90       	pop	r12
    16be:	08 95       	ret

000016c0 <__fpcmp_parts_f>:
    16c0:	cf 93       	push	r28
    16c2:	fc 01       	movw	r30, r24
    16c4:	db 01       	movw	r26, r22
    16c6:	90 81       	ld	r25, Z
    16c8:	92 30       	cpi	r25, 0x02	; 2
    16ca:	08 f4       	brcc	.+2      	; 0x16ce <__fpcmp_parts_f+0xe>
    16cc:	52 c0       	rjmp	.+164    	; 0x1772 <__fpcmp_parts_f+0xb2>
    16ce:	8c 91       	ld	r24, X
    16d0:	82 30       	cpi	r24, 0x02	; 2
    16d2:	08 f4       	brcc	.+2      	; 0x16d6 <__fpcmp_parts_f+0x16>
    16d4:	4e c0       	rjmp	.+156    	; 0x1772 <__fpcmp_parts_f+0xb2>
    16d6:	94 30       	cpi	r25, 0x04	; 4
    16d8:	71 f4       	brne	.+28     	; 0x16f6 <__fpcmp_parts_f+0x36>
    16da:	84 30       	cpi	r24, 0x04	; 4
    16dc:	39 f4       	brne	.+14     	; 0x16ec <__fpcmp_parts_f+0x2c>
    16de:	11 96       	adiw	r26, 0x01	; 1
    16e0:	2c 91       	ld	r18, X
    16e2:	30 e0       	ldi	r19, 0x00	; 0
    16e4:	81 81       	ldd	r24, Z+1	; 0x01
    16e6:	28 1b       	sub	r18, r24
    16e8:	31 09       	sbc	r19, r1
    16ea:	48 c0       	rjmp	.+144    	; 0x177c <__fpcmp_parts_f+0xbc>
    16ec:	81 81       	ldd	r24, Z+1	; 0x01
    16ee:	88 23       	and	r24, r24
    16f0:	09 f4       	brne	.+2      	; 0x16f4 <__fpcmp_parts_f+0x34>
    16f2:	3f c0       	rjmp	.+126    	; 0x1772 <__fpcmp_parts_f+0xb2>
    16f4:	3b c0       	rjmp	.+118    	; 0x176c <__fpcmp_parts_f+0xac>
    16f6:	84 30       	cpi	r24, 0x04	; 4
    16f8:	29 f4       	brne	.+10     	; 0x1704 <__fpcmp_parts_f+0x44>
    16fa:	11 96       	adiw	r26, 0x01	; 1
    16fc:	8c 91       	ld	r24, X
    16fe:	81 11       	cpse	r24, r1
    1700:	38 c0       	rjmp	.+112    	; 0x1772 <__fpcmp_parts_f+0xb2>
    1702:	34 c0       	rjmp	.+104    	; 0x176c <__fpcmp_parts_f+0xac>
    1704:	92 30       	cpi	r25, 0x02	; 2
    1706:	19 f4       	brne	.+6      	; 0x170e <__fpcmp_parts_f+0x4e>
    1708:	82 30       	cpi	r24, 0x02	; 2
    170a:	b9 f7       	brne	.-18     	; 0x16fa <__fpcmp_parts_f+0x3a>
    170c:	35 c0       	rjmp	.+106    	; 0x1778 <__fpcmp_parts_f+0xb8>
    170e:	82 30       	cpi	r24, 0x02	; 2
    1710:	69 f3       	breq	.-38     	; 0x16ec <__fpcmp_parts_f+0x2c>
    1712:	c1 81       	ldd	r28, Z+1	; 0x01
    1714:	11 96       	adiw	r26, 0x01	; 1
    1716:	8c 91       	ld	r24, X
    1718:	11 97       	sbiw	r26, 0x01	; 1
    171a:	c8 13       	cpse	r28, r24
    171c:	1d c0       	rjmp	.+58     	; 0x1758 <__fpcmp_parts_f+0x98>
    171e:	22 81       	ldd	r18, Z+2	; 0x02
    1720:	33 81       	ldd	r19, Z+3	; 0x03
    1722:	12 96       	adiw	r26, 0x02	; 2
    1724:	8d 91       	ld	r24, X+
    1726:	9c 91       	ld	r25, X
    1728:	13 97       	sbiw	r26, 0x03	; 3
    172a:	82 17       	cp	r24, r18
    172c:	93 07       	cpc	r25, r19
    172e:	0c f4       	brge	.+2      	; 0x1732 <__fpcmp_parts_f+0x72>
    1730:	13 c0       	rjmp	.+38     	; 0x1758 <__fpcmp_parts_f+0x98>
    1732:	28 17       	cp	r18, r24
    1734:	39 07       	cpc	r19, r25
    1736:	0c f4       	brge	.+2      	; 0x173a <__fpcmp_parts_f+0x7a>
    1738:	17 c0       	rjmp	.+46     	; 0x1768 <__fpcmp_parts_f+0xa8>
    173a:	44 81       	ldd	r20, Z+4	; 0x04
    173c:	55 81       	ldd	r21, Z+5	; 0x05
    173e:	66 81       	ldd	r22, Z+6	; 0x06
    1740:	77 81       	ldd	r23, Z+7	; 0x07
    1742:	14 96       	adiw	r26, 0x04	; 4
    1744:	8d 91       	ld	r24, X+
    1746:	9d 91       	ld	r25, X+
    1748:	0d 90       	ld	r0, X+
    174a:	bc 91       	ld	r27, X
    174c:	a0 2d       	mov	r26, r0
    174e:	84 17       	cp	r24, r20
    1750:	95 07       	cpc	r25, r21
    1752:	a6 07       	cpc	r26, r22
    1754:	b7 07       	cpc	r27, r23
    1756:	18 f4       	brcc	.+6      	; 0x175e <__fpcmp_parts_f+0x9e>
    1758:	c1 11       	cpse	r28, r1
    175a:	08 c0       	rjmp	.+16     	; 0x176c <__fpcmp_parts_f+0xac>
    175c:	0a c0       	rjmp	.+20     	; 0x1772 <__fpcmp_parts_f+0xb2>
    175e:	48 17       	cp	r20, r24
    1760:	59 07       	cpc	r21, r25
    1762:	6a 07       	cpc	r22, r26
    1764:	7b 07       	cpc	r23, r27
    1766:	40 f4       	brcc	.+16     	; 0x1778 <__fpcmp_parts_f+0xb8>
    1768:	c1 11       	cpse	r28, r1
    176a:	03 c0       	rjmp	.+6      	; 0x1772 <__fpcmp_parts_f+0xb2>
    176c:	2f ef       	ldi	r18, 0xFF	; 255
    176e:	3f ef       	ldi	r19, 0xFF	; 255
    1770:	05 c0       	rjmp	.+10     	; 0x177c <__fpcmp_parts_f+0xbc>
    1772:	21 e0       	ldi	r18, 0x01	; 1
    1774:	30 e0       	ldi	r19, 0x00	; 0
    1776:	02 c0       	rjmp	.+4      	; 0x177c <__fpcmp_parts_f+0xbc>
    1778:	20 e0       	ldi	r18, 0x00	; 0
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	c9 01       	movw	r24, r18
    177e:	cf 91       	pop	r28
    1780:	08 95       	ret

00001782 <__prologue_saves__>:
    1782:	2f 92       	push	r2
    1784:	3f 92       	push	r3
    1786:	4f 92       	push	r4
    1788:	5f 92       	push	r5
    178a:	6f 92       	push	r6
    178c:	7f 92       	push	r7
    178e:	8f 92       	push	r8
    1790:	9f 92       	push	r9
    1792:	af 92       	push	r10
    1794:	bf 92       	push	r11
    1796:	cf 92       	push	r12
    1798:	df 92       	push	r13
    179a:	ef 92       	push	r14
    179c:	ff 92       	push	r15
    179e:	0f 93       	push	r16
    17a0:	1f 93       	push	r17
    17a2:	cf 93       	push	r28
    17a4:	df 93       	push	r29
    17a6:	cd b7       	in	r28, 0x3d	; 61
    17a8:	de b7       	in	r29, 0x3e	; 62
    17aa:	ca 1b       	sub	r28, r26
    17ac:	db 0b       	sbc	r29, r27
    17ae:	0f b6       	in	r0, 0x3f	; 63
    17b0:	f8 94       	cli
    17b2:	de bf       	out	0x3e, r29	; 62
    17b4:	0f be       	out	0x3f, r0	; 63
    17b6:	cd bf       	out	0x3d, r28	; 61
    17b8:	09 94       	ijmp

000017ba <__epilogue_restores__>:
    17ba:	2a 88       	ldd	r2, Y+18	; 0x12
    17bc:	39 88       	ldd	r3, Y+17	; 0x11
    17be:	48 88       	ldd	r4, Y+16	; 0x10
    17c0:	5f 84       	ldd	r5, Y+15	; 0x0f
    17c2:	6e 84       	ldd	r6, Y+14	; 0x0e
    17c4:	7d 84       	ldd	r7, Y+13	; 0x0d
    17c6:	8c 84       	ldd	r8, Y+12	; 0x0c
    17c8:	9b 84       	ldd	r9, Y+11	; 0x0b
    17ca:	aa 84       	ldd	r10, Y+10	; 0x0a
    17cc:	b9 84       	ldd	r11, Y+9	; 0x09
    17ce:	c8 84       	ldd	r12, Y+8	; 0x08
    17d0:	df 80       	ldd	r13, Y+7	; 0x07
    17d2:	ee 80       	ldd	r14, Y+6	; 0x06
    17d4:	fd 80       	ldd	r15, Y+5	; 0x05
    17d6:	0c 81       	ldd	r16, Y+4	; 0x04
    17d8:	1b 81       	ldd	r17, Y+3	; 0x03
    17da:	aa 81       	ldd	r26, Y+2	; 0x02
    17dc:	b9 81       	ldd	r27, Y+1	; 0x01
    17de:	ce 0f       	add	r28, r30
    17e0:	d1 1d       	adc	r29, r1
    17e2:	0f b6       	in	r0, 0x3f	; 63
    17e4:	f8 94       	cli
    17e6:	de bf       	out	0x3e, r29	; 62
    17e8:	0f be       	out	0x3f, r0	; 63
    17ea:	cd bf       	out	0x3d, r28	; 61
    17ec:	ed 01       	movw	r28, r26
    17ee:	08 95       	ret

000017f0 <sprintf>:
    17f0:	0f 93       	push	r16
    17f2:	1f 93       	push	r17
    17f4:	cf 93       	push	r28
    17f6:	df 93       	push	r29
    17f8:	cd b7       	in	r28, 0x3d	; 61
    17fa:	de b7       	in	r29, 0x3e	; 62
    17fc:	60 97       	sbiw	r28, 0x10	; 16
    17fe:	0f b6       	in	r0, 0x3f	; 63
    1800:	f8 94       	cli
    1802:	de bf       	out	0x3e, r29	; 62
    1804:	0f be       	out	0x3f, r0	; 63
    1806:	cd bf       	out	0x3d, r28	; 61
    1808:	0f 89       	ldd	r16, Y+23	; 0x17
    180a:	18 8d       	ldd	r17, Y+24	; 0x18
    180c:	86 e0       	ldi	r24, 0x06	; 6
    180e:	8c 83       	std	Y+4, r24	; 0x04
    1810:	1a 83       	std	Y+2, r17	; 0x02
    1812:	09 83       	std	Y+1, r16	; 0x01
    1814:	8f ef       	ldi	r24, 0xFF	; 255
    1816:	9f e7       	ldi	r25, 0x7F	; 127
    1818:	9e 83       	std	Y+6, r25	; 0x06
    181a:	8d 83       	std	Y+5, r24	; 0x05
    181c:	ae 01       	movw	r20, r28
    181e:	45 5e       	subi	r20, 0xE5	; 229
    1820:	5f 4f       	sbci	r21, 0xFF	; 255
    1822:	58 8b       	std	Y+16, r21	; 0x10
    1824:	4f 87       	std	Y+15, r20	; 0x0f
    1826:	69 8d       	ldd	r22, Y+25	; 0x19
    1828:	7a 8d       	ldd	r23, Y+26	; 0x1a
    182a:	ce 01       	movw	r24, r28
    182c:	01 96       	adiw	r24, 0x01	; 1
    182e:	0e 94 29 0c 	call	0x1852	; 0x1852 <vfprintf>
    1832:	ef 81       	ldd	r30, Y+7	; 0x07
    1834:	f8 85       	ldd	r31, Y+8	; 0x08
    1836:	e0 0f       	add	r30, r16
    1838:	f1 1f       	adc	r31, r17
    183a:	10 82       	st	Z, r1
    183c:	60 96       	adiw	r28, 0x10	; 16
    183e:	0f b6       	in	r0, 0x3f	; 63
    1840:	f8 94       	cli
    1842:	de bf       	out	0x3e, r29	; 62
    1844:	0f be       	out	0x3f, r0	; 63
    1846:	cd bf       	out	0x3d, r28	; 61
    1848:	df 91       	pop	r29
    184a:	cf 91       	pop	r28
    184c:	1f 91       	pop	r17
    184e:	0f 91       	pop	r16
    1850:	08 95       	ret

00001852 <vfprintf>:
    1852:	2f 92       	push	r2
    1854:	3f 92       	push	r3
    1856:	4f 92       	push	r4
    1858:	5f 92       	push	r5
    185a:	6f 92       	push	r6
    185c:	7f 92       	push	r7
    185e:	8f 92       	push	r8
    1860:	9f 92       	push	r9
    1862:	af 92       	push	r10
    1864:	bf 92       	push	r11
    1866:	cf 92       	push	r12
    1868:	df 92       	push	r13
    186a:	ef 92       	push	r14
    186c:	ff 92       	push	r15
    186e:	0f 93       	push	r16
    1870:	1f 93       	push	r17
    1872:	cf 93       	push	r28
    1874:	df 93       	push	r29
    1876:	cd b7       	in	r28, 0x3d	; 61
    1878:	de b7       	in	r29, 0x3e	; 62
    187a:	2c 97       	sbiw	r28, 0x0c	; 12
    187c:	0f b6       	in	r0, 0x3f	; 63
    187e:	f8 94       	cli
    1880:	de bf       	out	0x3e, r29	; 62
    1882:	0f be       	out	0x3f, r0	; 63
    1884:	cd bf       	out	0x3d, r28	; 61
    1886:	7c 01       	movw	r14, r24
    1888:	6b 01       	movw	r12, r22
    188a:	8a 01       	movw	r16, r20
    188c:	fc 01       	movw	r30, r24
    188e:	17 82       	std	Z+7, r1	; 0x07
    1890:	16 82       	std	Z+6, r1	; 0x06
    1892:	83 81       	ldd	r24, Z+3	; 0x03
    1894:	81 ff       	sbrs	r24, 1
    1896:	c7 c1       	rjmp	.+910    	; 0x1c26 <vfprintf+0x3d4>
    1898:	88 24       	eor	r8, r8
    189a:	83 94       	inc	r8
    189c:	91 2c       	mov	r9, r1
    189e:	8c 0e       	add	r8, r28
    18a0:	9d 1e       	adc	r9, r29
    18a2:	f7 01       	movw	r30, r14
    18a4:	93 81       	ldd	r25, Z+3	; 0x03
    18a6:	f6 01       	movw	r30, r12
    18a8:	93 fd       	sbrc	r25, 3
    18aa:	85 91       	lpm	r24, Z+
    18ac:	93 ff       	sbrs	r25, 3
    18ae:	81 91       	ld	r24, Z+
    18b0:	6f 01       	movw	r12, r30
    18b2:	88 23       	and	r24, r24
    18b4:	09 f4       	brne	.+2      	; 0x18b8 <vfprintf+0x66>
    18b6:	b3 c1       	rjmp	.+870    	; 0x1c1e <vfprintf+0x3cc>
    18b8:	85 32       	cpi	r24, 0x25	; 37
    18ba:	39 f4       	brne	.+14     	; 0x18ca <vfprintf+0x78>
    18bc:	93 fd       	sbrc	r25, 3
    18be:	85 91       	lpm	r24, Z+
    18c0:	93 ff       	sbrs	r25, 3
    18c2:	81 91       	ld	r24, Z+
    18c4:	6f 01       	movw	r12, r30
    18c6:	85 32       	cpi	r24, 0x25	; 37
    18c8:	29 f4       	brne	.+10     	; 0x18d4 <vfprintf+0x82>
    18ca:	b7 01       	movw	r22, r14
    18cc:	90 e0       	ldi	r25, 0x00	; 0
    18ce:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <fputc>
    18d2:	e7 cf       	rjmp	.-50     	; 0x18a2 <vfprintf+0x50>
    18d4:	71 2c       	mov	r7, r1
    18d6:	31 2c       	mov	r3, r1
    18d8:	20 e0       	ldi	r18, 0x00	; 0
    18da:	20 32       	cpi	r18, 0x20	; 32
    18dc:	a8 f4       	brcc	.+42     	; 0x1908 <vfprintf+0xb6>
    18de:	8b 32       	cpi	r24, 0x2B	; 43
    18e0:	61 f0       	breq	.+24     	; 0x18fa <vfprintf+0xa8>
    18e2:	28 f4       	brcc	.+10     	; 0x18ee <vfprintf+0x9c>
    18e4:	80 32       	cpi	r24, 0x20	; 32
    18e6:	51 f0       	breq	.+20     	; 0x18fc <vfprintf+0xaa>
    18e8:	83 32       	cpi	r24, 0x23	; 35
    18ea:	71 f4       	brne	.+28     	; 0x1908 <vfprintf+0xb6>
    18ec:	0b c0       	rjmp	.+22     	; 0x1904 <vfprintf+0xb2>
    18ee:	8d 32       	cpi	r24, 0x2D	; 45
    18f0:	39 f0       	breq	.+14     	; 0x1900 <vfprintf+0xae>
    18f2:	80 33       	cpi	r24, 0x30	; 48
    18f4:	49 f4       	brne	.+18     	; 0x1908 <vfprintf+0xb6>
    18f6:	21 60       	ori	r18, 0x01	; 1
    18f8:	28 c0       	rjmp	.+80     	; 0x194a <vfprintf+0xf8>
    18fa:	22 60       	ori	r18, 0x02	; 2
    18fc:	24 60       	ori	r18, 0x04	; 4
    18fe:	25 c0       	rjmp	.+74     	; 0x194a <vfprintf+0xf8>
    1900:	28 60       	ori	r18, 0x08	; 8
    1902:	23 c0       	rjmp	.+70     	; 0x194a <vfprintf+0xf8>
    1904:	20 61       	ori	r18, 0x10	; 16
    1906:	21 c0       	rjmp	.+66     	; 0x194a <vfprintf+0xf8>
    1908:	27 fd       	sbrc	r18, 7
    190a:	27 c0       	rjmp	.+78     	; 0x195a <vfprintf+0x108>
    190c:	38 2f       	mov	r19, r24
    190e:	30 53       	subi	r19, 0x30	; 48
    1910:	3a 30       	cpi	r19, 0x0A	; 10
    1912:	78 f4       	brcc	.+30     	; 0x1932 <vfprintf+0xe0>
    1914:	26 ff       	sbrs	r18, 6
    1916:	06 c0       	rjmp	.+12     	; 0x1924 <vfprintf+0xd2>
    1918:	fa e0       	ldi	r31, 0x0A	; 10
    191a:	7f 9e       	mul	r7, r31
    191c:	30 0d       	add	r19, r0
    191e:	11 24       	eor	r1, r1
    1920:	73 2e       	mov	r7, r19
    1922:	13 c0       	rjmp	.+38     	; 0x194a <vfprintf+0xf8>
    1924:	8a e0       	ldi	r24, 0x0A	; 10
    1926:	38 9e       	mul	r3, r24
    1928:	30 0d       	add	r19, r0
    192a:	11 24       	eor	r1, r1
    192c:	33 2e       	mov	r3, r19
    192e:	20 62       	ori	r18, 0x20	; 32
    1930:	0c c0       	rjmp	.+24     	; 0x194a <vfprintf+0xf8>
    1932:	8e 32       	cpi	r24, 0x2E	; 46
    1934:	21 f4       	brne	.+8      	; 0x193e <vfprintf+0xec>
    1936:	26 fd       	sbrc	r18, 6
    1938:	72 c1       	rjmp	.+740    	; 0x1c1e <vfprintf+0x3cc>
    193a:	20 64       	ori	r18, 0x40	; 64
    193c:	06 c0       	rjmp	.+12     	; 0x194a <vfprintf+0xf8>
    193e:	8c 36       	cpi	r24, 0x6C	; 108
    1940:	11 f4       	brne	.+4      	; 0x1946 <vfprintf+0xf4>
    1942:	20 68       	ori	r18, 0x80	; 128
    1944:	02 c0       	rjmp	.+4      	; 0x194a <vfprintf+0xf8>
    1946:	88 36       	cpi	r24, 0x68	; 104
    1948:	41 f4       	brne	.+16     	; 0x195a <vfprintf+0x108>
    194a:	f6 01       	movw	r30, r12
    194c:	93 fd       	sbrc	r25, 3
    194e:	85 91       	lpm	r24, Z+
    1950:	93 ff       	sbrs	r25, 3
    1952:	81 91       	ld	r24, Z+
    1954:	6f 01       	movw	r12, r30
    1956:	81 11       	cpse	r24, r1
    1958:	c0 cf       	rjmp	.-128    	; 0x18da <vfprintf+0x88>
    195a:	98 2f       	mov	r25, r24
    195c:	95 54       	subi	r25, 0x45	; 69
    195e:	93 30       	cpi	r25, 0x03	; 3
    1960:	18 f0       	brcs	.+6      	; 0x1968 <vfprintf+0x116>
    1962:	90 52       	subi	r25, 0x20	; 32
    1964:	93 30       	cpi	r25, 0x03	; 3
    1966:	28 f4       	brcc	.+10     	; 0x1972 <vfprintf+0x120>
    1968:	0c 5f       	subi	r16, 0xFC	; 252
    196a:	1f 4f       	sbci	r17, 0xFF	; 255
    196c:	ff e3       	ldi	r31, 0x3F	; 63
    196e:	f9 83       	std	Y+1, r31	; 0x01
    1970:	0d c0       	rjmp	.+26     	; 0x198c <vfprintf+0x13a>
    1972:	83 36       	cpi	r24, 0x63	; 99
    1974:	31 f0       	breq	.+12     	; 0x1982 <vfprintf+0x130>
    1976:	83 37       	cpi	r24, 0x73	; 115
    1978:	71 f0       	breq	.+28     	; 0x1996 <vfprintf+0x144>
    197a:	83 35       	cpi	r24, 0x53	; 83
    197c:	09 f0       	breq	.+2      	; 0x1980 <vfprintf+0x12e>
    197e:	5e c0       	rjmp	.+188    	; 0x1a3c <vfprintf+0x1ea>
    1980:	23 c0       	rjmp	.+70     	; 0x19c8 <vfprintf+0x176>
    1982:	f8 01       	movw	r30, r16
    1984:	80 81       	ld	r24, Z
    1986:	89 83       	std	Y+1, r24	; 0x01
    1988:	0e 5f       	subi	r16, 0xFE	; 254
    198a:	1f 4f       	sbci	r17, 0xFF	; 255
    198c:	66 24       	eor	r6, r6
    198e:	63 94       	inc	r6
    1990:	71 2c       	mov	r7, r1
    1992:	54 01       	movw	r10, r8
    1994:	15 c0       	rjmp	.+42     	; 0x19c0 <vfprintf+0x16e>
    1996:	28 01       	movw	r4, r16
    1998:	f2 e0       	ldi	r31, 0x02	; 2
    199a:	4f 0e       	add	r4, r31
    199c:	51 1c       	adc	r5, r1
    199e:	f8 01       	movw	r30, r16
    19a0:	a0 80       	ld	r10, Z
    19a2:	b1 80       	ldd	r11, Z+1	; 0x01
    19a4:	26 ff       	sbrs	r18, 6
    19a6:	03 c0       	rjmp	.+6      	; 0x19ae <vfprintf+0x15c>
    19a8:	67 2d       	mov	r22, r7
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	02 c0       	rjmp	.+4      	; 0x19b2 <vfprintf+0x160>
    19ae:	6f ef       	ldi	r22, 0xFF	; 255
    19b0:	7f ef       	ldi	r23, 0xFF	; 255
    19b2:	c5 01       	movw	r24, r10
    19b4:	2c 87       	std	Y+12, r18	; 0x0c
    19b6:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <strnlen>
    19ba:	3c 01       	movw	r6, r24
    19bc:	82 01       	movw	r16, r4
    19be:	2c 85       	ldd	r18, Y+12	; 0x0c
    19c0:	6f e7       	ldi	r22, 0x7F	; 127
    19c2:	26 2e       	mov	r2, r22
    19c4:	22 22       	and	r2, r18
    19c6:	18 c0       	rjmp	.+48     	; 0x19f8 <vfprintf+0x1a6>
    19c8:	28 01       	movw	r4, r16
    19ca:	f2 e0       	ldi	r31, 0x02	; 2
    19cc:	4f 0e       	add	r4, r31
    19ce:	51 1c       	adc	r5, r1
    19d0:	f8 01       	movw	r30, r16
    19d2:	a0 80       	ld	r10, Z
    19d4:	b1 80       	ldd	r11, Z+1	; 0x01
    19d6:	26 ff       	sbrs	r18, 6
    19d8:	03 c0       	rjmp	.+6      	; 0x19e0 <vfprintf+0x18e>
    19da:	67 2d       	mov	r22, r7
    19dc:	70 e0       	ldi	r23, 0x00	; 0
    19de:	02 c0       	rjmp	.+4      	; 0x19e4 <vfprintf+0x192>
    19e0:	6f ef       	ldi	r22, 0xFF	; 255
    19e2:	7f ef       	ldi	r23, 0xFF	; 255
    19e4:	c5 01       	movw	r24, r10
    19e6:	2c 87       	std	Y+12, r18	; 0x0c
    19e8:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <strnlen_P>
    19ec:	3c 01       	movw	r6, r24
    19ee:	2c 85       	ldd	r18, Y+12	; 0x0c
    19f0:	50 e8       	ldi	r21, 0x80	; 128
    19f2:	25 2e       	mov	r2, r21
    19f4:	22 2a       	or	r2, r18
    19f6:	82 01       	movw	r16, r4
    19f8:	23 fc       	sbrc	r2, 3
    19fa:	1c c0       	rjmp	.+56     	; 0x1a34 <vfprintf+0x1e2>
    19fc:	06 c0       	rjmp	.+12     	; 0x1a0a <vfprintf+0x1b8>
    19fe:	b7 01       	movw	r22, r14
    1a00:	80 e2       	ldi	r24, 0x20	; 32
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <fputc>
    1a08:	3a 94       	dec	r3
    1a0a:	83 2d       	mov	r24, r3
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	68 16       	cp	r6, r24
    1a10:	79 06       	cpc	r7, r25
    1a12:	a8 f3       	brcs	.-22     	; 0x19fe <vfprintf+0x1ac>
    1a14:	0f c0       	rjmp	.+30     	; 0x1a34 <vfprintf+0x1e2>
    1a16:	f5 01       	movw	r30, r10
    1a18:	27 fc       	sbrc	r2, 7
    1a1a:	85 91       	lpm	r24, Z+
    1a1c:	27 fe       	sbrs	r2, 7
    1a1e:	81 91       	ld	r24, Z+
    1a20:	5f 01       	movw	r10, r30
    1a22:	b7 01       	movw	r22, r14
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <fputc>
    1a2a:	31 10       	cpse	r3, r1
    1a2c:	3a 94       	dec	r3
    1a2e:	f1 e0       	ldi	r31, 0x01	; 1
    1a30:	6f 1a       	sub	r6, r31
    1a32:	71 08       	sbc	r7, r1
    1a34:	61 14       	cp	r6, r1
    1a36:	71 04       	cpc	r7, r1
    1a38:	71 f7       	brne	.-36     	; 0x1a16 <vfprintf+0x1c4>
    1a3a:	ee c0       	rjmp	.+476    	; 0x1c18 <vfprintf+0x3c6>
    1a3c:	84 36       	cpi	r24, 0x64	; 100
    1a3e:	11 f0       	breq	.+4      	; 0x1a44 <vfprintf+0x1f2>
    1a40:	89 36       	cpi	r24, 0x69	; 105
    1a42:	41 f5       	brne	.+80     	; 0x1a94 <vfprintf+0x242>
    1a44:	f8 01       	movw	r30, r16
    1a46:	27 ff       	sbrs	r18, 7
    1a48:	07 c0       	rjmp	.+14     	; 0x1a58 <vfprintf+0x206>
    1a4a:	60 81       	ld	r22, Z
    1a4c:	71 81       	ldd	r23, Z+1	; 0x01
    1a4e:	82 81       	ldd	r24, Z+2	; 0x02
    1a50:	93 81       	ldd	r25, Z+3	; 0x03
    1a52:	0c 5f       	subi	r16, 0xFC	; 252
    1a54:	1f 4f       	sbci	r17, 0xFF	; 255
    1a56:	08 c0       	rjmp	.+16     	; 0x1a68 <vfprintf+0x216>
    1a58:	60 81       	ld	r22, Z
    1a5a:	71 81       	ldd	r23, Z+1	; 0x01
    1a5c:	88 27       	eor	r24, r24
    1a5e:	77 fd       	sbrc	r23, 7
    1a60:	80 95       	com	r24
    1a62:	98 2f       	mov	r25, r24
    1a64:	0e 5f       	subi	r16, 0xFE	; 254
    1a66:	1f 4f       	sbci	r17, 0xFF	; 255
    1a68:	4f e6       	ldi	r20, 0x6F	; 111
    1a6a:	64 2e       	mov	r6, r20
    1a6c:	62 22       	and	r6, r18
    1a6e:	97 ff       	sbrs	r25, 7
    1a70:	09 c0       	rjmp	.+18     	; 0x1a84 <vfprintf+0x232>
    1a72:	90 95       	com	r25
    1a74:	80 95       	com	r24
    1a76:	70 95       	com	r23
    1a78:	61 95       	neg	r22
    1a7a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a7c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a7e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a80:	f0 e8       	ldi	r31, 0x80	; 128
    1a82:	6f 2a       	or	r6, r31
    1a84:	2a e0       	ldi	r18, 0x0A	; 10
    1a86:	30 e0       	ldi	r19, 0x00	; 0
    1a88:	a4 01       	movw	r20, r8
    1a8a:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__ultoa_invert>
    1a8e:	a8 2e       	mov	r10, r24
    1a90:	a8 18       	sub	r10, r8
    1a92:	44 c0       	rjmp	.+136    	; 0x1b1c <vfprintf+0x2ca>
    1a94:	85 37       	cpi	r24, 0x75	; 117
    1a96:	31 f4       	brne	.+12     	; 0x1aa4 <vfprintf+0x252>
    1a98:	3f ee       	ldi	r19, 0xEF	; 239
    1a9a:	b3 2e       	mov	r11, r19
    1a9c:	b2 22       	and	r11, r18
    1a9e:	2a e0       	ldi	r18, 0x0A	; 10
    1aa0:	30 e0       	ldi	r19, 0x00	; 0
    1aa2:	24 c0       	rjmp	.+72     	; 0x1aec <vfprintf+0x29a>
    1aa4:	99 ef       	ldi	r25, 0xF9	; 249
    1aa6:	b9 2e       	mov	r11, r25
    1aa8:	b2 22       	and	r11, r18
    1aaa:	8f 36       	cpi	r24, 0x6F	; 111
    1aac:	b9 f0       	breq	.+46     	; 0x1adc <vfprintf+0x28a>
    1aae:	20 f4       	brcc	.+8      	; 0x1ab8 <vfprintf+0x266>
    1ab0:	88 35       	cpi	r24, 0x58	; 88
    1ab2:	09 f0       	breq	.+2      	; 0x1ab6 <vfprintf+0x264>
    1ab4:	b4 c0       	rjmp	.+360    	; 0x1c1e <vfprintf+0x3cc>
    1ab6:	0d c0       	rjmp	.+26     	; 0x1ad2 <vfprintf+0x280>
    1ab8:	80 37       	cpi	r24, 0x70	; 112
    1aba:	21 f0       	breq	.+8      	; 0x1ac4 <vfprintf+0x272>
    1abc:	88 37       	cpi	r24, 0x78	; 120
    1abe:	09 f0       	breq	.+2      	; 0x1ac2 <vfprintf+0x270>
    1ac0:	ae c0       	rjmp	.+348    	; 0x1c1e <vfprintf+0x3cc>
    1ac2:	02 c0       	rjmp	.+4      	; 0x1ac8 <vfprintf+0x276>
    1ac4:	20 e1       	ldi	r18, 0x10	; 16
    1ac6:	b2 2a       	or	r11, r18
    1ac8:	b4 fe       	sbrs	r11, 4
    1aca:	0b c0       	rjmp	.+22     	; 0x1ae2 <vfprintf+0x290>
    1acc:	84 e0       	ldi	r24, 0x04	; 4
    1ace:	b8 2a       	or	r11, r24
    1ad0:	08 c0       	rjmp	.+16     	; 0x1ae2 <vfprintf+0x290>
    1ad2:	24 ff       	sbrs	r18, 4
    1ad4:	09 c0       	rjmp	.+18     	; 0x1ae8 <vfprintf+0x296>
    1ad6:	e6 e0       	ldi	r30, 0x06	; 6
    1ad8:	be 2a       	or	r11, r30
    1ada:	06 c0       	rjmp	.+12     	; 0x1ae8 <vfprintf+0x296>
    1adc:	28 e0       	ldi	r18, 0x08	; 8
    1ade:	30 e0       	ldi	r19, 0x00	; 0
    1ae0:	05 c0       	rjmp	.+10     	; 0x1aec <vfprintf+0x29a>
    1ae2:	20 e1       	ldi	r18, 0x10	; 16
    1ae4:	30 e0       	ldi	r19, 0x00	; 0
    1ae6:	02 c0       	rjmp	.+4      	; 0x1aec <vfprintf+0x29a>
    1ae8:	20 e1       	ldi	r18, 0x10	; 16
    1aea:	32 e0       	ldi	r19, 0x02	; 2
    1aec:	f8 01       	movw	r30, r16
    1aee:	b7 fe       	sbrs	r11, 7
    1af0:	07 c0       	rjmp	.+14     	; 0x1b00 <vfprintf+0x2ae>
    1af2:	60 81       	ld	r22, Z
    1af4:	71 81       	ldd	r23, Z+1	; 0x01
    1af6:	82 81       	ldd	r24, Z+2	; 0x02
    1af8:	93 81       	ldd	r25, Z+3	; 0x03
    1afa:	0c 5f       	subi	r16, 0xFC	; 252
    1afc:	1f 4f       	sbci	r17, 0xFF	; 255
    1afe:	06 c0       	rjmp	.+12     	; 0x1b0c <vfprintf+0x2ba>
    1b00:	60 81       	ld	r22, Z
    1b02:	71 81       	ldd	r23, Z+1	; 0x01
    1b04:	80 e0       	ldi	r24, 0x00	; 0
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	0e 5f       	subi	r16, 0xFE	; 254
    1b0a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b0c:	a4 01       	movw	r20, r8
    1b0e:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__ultoa_invert>
    1b12:	a8 2e       	mov	r10, r24
    1b14:	a8 18       	sub	r10, r8
    1b16:	8f e7       	ldi	r24, 0x7F	; 127
    1b18:	68 2e       	mov	r6, r24
    1b1a:	6b 20       	and	r6, r11
    1b1c:	66 fe       	sbrs	r6, 6
    1b1e:	0b c0       	rjmp	.+22     	; 0x1b36 <vfprintf+0x2e4>
    1b20:	36 2d       	mov	r19, r6
    1b22:	3e 7f       	andi	r19, 0xFE	; 254
    1b24:	a7 14       	cp	r10, r7
    1b26:	50 f4       	brcc	.+20     	; 0x1b3c <vfprintf+0x2ea>
    1b28:	64 fe       	sbrs	r6, 4
    1b2a:	0a c0       	rjmp	.+20     	; 0x1b40 <vfprintf+0x2ee>
    1b2c:	62 fc       	sbrc	r6, 2
    1b2e:	08 c0       	rjmp	.+16     	; 0x1b40 <vfprintf+0x2ee>
    1b30:	36 2d       	mov	r19, r6
    1b32:	3e 7e       	andi	r19, 0xEE	; 238
    1b34:	05 c0       	rjmp	.+10     	; 0x1b40 <vfprintf+0x2ee>
    1b36:	ba 2c       	mov	r11, r10
    1b38:	36 2d       	mov	r19, r6
    1b3a:	03 c0       	rjmp	.+6      	; 0x1b42 <vfprintf+0x2f0>
    1b3c:	ba 2c       	mov	r11, r10
    1b3e:	01 c0       	rjmp	.+2      	; 0x1b42 <vfprintf+0x2f0>
    1b40:	b7 2c       	mov	r11, r7
    1b42:	34 ff       	sbrs	r19, 4
    1b44:	0d c0       	rjmp	.+26     	; 0x1b60 <vfprintf+0x30e>
    1b46:	fe 01       	movw	r30, r28
    1b48:	ea 0d       	add	r30, r10
    1b4a:	f1 1d       	adc	r31, r1
    1b4c:	80 81       	ld	r24, Z
    1b4e:	80 33       	cpi	r24, 0x30	; 48
    1b50:	11 f4       	brne	.+4      	; 0x1b56 <vfprintf+0x304>
    1b52:	39 7e       	andi	r19, 0xE9	; 233
    1b54:	09 c0       	rjmp	.+18     	; 0x1b68 <vfprintf+0x316>
    1b56:	32 ff       	sbrs	r19, 2
    1b58:	06 c0       	rjmp	.+12     	; 0x1b66 <vfprintf+0x314>
    1b5a:	b3 94       	inc	r11
    1b5c:	b3 94       	inc	r11
    1b5e:	04 c0       	rjmp	.+8      	; 0x1b68 <vfprintf+0x316>
    1b60:	83 2f       	mov	r24, r19
    1b62:	86 78       	andi	r24, 0x86	; 134
    1b64:	09 f0       	breq	.+2      	; 0x1b68 <vfprintf+0x316>
    1b66:	b3 94       	inc	r11
    1b68:	33 fd       	sbrc	r19, 3
    1b6a:	14 c0       	rjmp	.+40     	; 0x1b94 <vfprintf+0x342>
    1b6c:	30 ff       	sbrs	r19, 0
    1b6e:	0f c0       	rjmp	.+30     	; 0x1b8e <vfprintf+0x33c>
    1b70:	7a 2c       	mov	r7, r10
    1b72:	b3 14       	cp	r11, r3
    1b74:	60 f4       	brcc	.+24     	; 0x1b8e <vfprintf+0x33c>
    1b76:	73 0c       	add	r7, r3
    1b78:	7b 18       	sub	r7, r11
    1b7a:	b3 2c       	mov	r11, r3
    1b7c:	08 c0       	rjmp	.+16     	; 0x1b8e <vfprintf+0x33c>
    1b7e:	b7 01       	movw	r22, r14
    1b80:	80 e2       	ldi	r24, 0x20	; 32
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	3c 87       	std	Y+12, r19	; 0x0c
    1b86:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <fputc>
    1b8a:	b3 94       	inc	r11
    1b8c:	3c 85       	ldd	r19, Y+12	; 0x0c
    1b8e:	b3 14       	cp	r11, r3
    1b90:	b0 f3       	brcs	.-20     	; 0x1b7e <vfprintf+0x32c>
    1b92:	04 c0       	rjmp	.+8      	; 0x1b9c <vfprintf+0x34a>
    1b94:	b3 14       	cp	r11, r3
    1b96:	10 f4       	brcc	.+4      	; 0x1b9c <vfprintf+0x34a>
    1b98:	3b 18       	sub	r3, r11
    1b9a:	01 c0       	rjmp	.+2      	; 0x1b9e <vfprintf+0x34c>
    1b9c:	31 2c       	mov	r3, r1
    1b9e:	34 ff       	sbrs	r19, 4
    1ba0:	12 c0       	rjmp	.+36     	; 0x1bc6 <vfprintf+0x374>
    1ba2:	b7 01       	movw	r22, r14
    1ba4:	80 e3       	ldi	r24, 0x30	; 48
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	3c 87       	std	Y+12, r19	; 0x0c
    1baa:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <fputc>
    1bae:	3c 85       	ldd	r19, Y+12	; 0x0c
    1bb0:	32 ff       	sbrs	r19, 2
    1bb2:	1e c0       	rjmp	.+60     	; 0x1bf0 <vfprintf+0x39e>
    1bb4:	31 ff       	sbrs	r19, 1
    1bb6:	03 c0       	rjmp	.+6      	; 0x1bbe <vfprintf+0x36c>
    1bb8:	88 e5       	ldi	r24, 0x58	; 88
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	02 c0       	rjmp	.+4      	; 0x1bc2 <vfprintf+0x370>
    1bbe:	88 e7       	ldi	r24, 0x78	; 120
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	b7 01       	movw	r22, r14
    1bc4:	0c c0       	rjmp	.+24     	; 0x1bde <vfprintf+0x38c>
    1bc6:	83 2f       	mov	r24, r19
    1bc8:	86 78       	andi	r24, 0x86	; 134
    1bca:	91 f0       	breq	.+36     	; 0x1bf0 <vfprintf+0x39e>
    1bcc:	31 fd       	sbrc	r19, 1
    1bce:	02 c0       	rjmp	.+4      	; 0x1bd4 <vfprintf+0x382>
    1bd0:	80 e2       	ldi	r24, 0x20	; 32
    1bd2:	01 c0       	rjmp	.+2      	; 0x1bd6 <vfprintf+0x384>
    1bd4:	8b e2       	ldi	r24, 0x2B	; 43
    1bd6:	37 fd       	sbrc	r19, 7
    1bd8:	8d e2       	ldi	r24, 0x2D	; 45
    1bda:	b7 01       	movw	r22, r14
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <fputc>
    1be2:	06 c0       	rjmp	.+12     	; 0x1bf0 <vfprintf+0x39e>
    1be4:	b7 01       	movw	r22, r14
    1be6:	80 e3       	ldi	r24, 0x30	; 48
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <fputc>
    1bee:	7a 94       	dec	r7
    1bf0:	a7 14       	cp	r10, r7
    1bf2:	c0 f3       	brcs	.-16     	; 0x1be4 <vfprintf+0x392>
    1bf4:	aa 94       	dec	r10
    1bf6:	f4 01       	movw	r30, r8
    1bf8:	ea 0d       	add	r30, r10
    1bfa:	f1 1d       	adc	r31, r1
    1bfc:	b7 01       	movw	r22, r14
    1bfe:	80 81       	ld	r24, Z
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <fputc>
    1c06:	a1 10       	cpse	r10, r1
    1c08:	f5 cf       	rjmp	.-22     	; 0x1bf4 <vfprintf+0x3a2>
    1c0a:	06 c0       	rjmp	.+12     	; 0x1c18 <vfprintf+0x3c6>
    1c0c:	b7 01       	movw	r22, r14
    1c0e:	80 e2       	ldi	r24, 0x20	; 32
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <fputc>
    1c16:	3a 94       	dec	r3
    1c18:	31 10       	cpse	r3, r1
    1c1a:	f8 cf       	rjmp	.-16     	; 0x1c0c <vfprintf+0x3ba>
    1c1c:	42 ce       	rjmp	.-892    	; 0x18a2 <vfprintf+0x50>
    1c1e:	f7 01       	movw	r30, r14
    1c20:	26 81       	ldd	r18, Z+6	; 0x06
    1c22:	37 81       	ldd	r19, Z+7	; 0x07
    1c24:	02 c0       	rjmp	.+4      	; 0x1c2a <vfprintf+0x3d8>
    1c26:	2f ef       	ldi	r18, 0xFF	; 255
    1c28:	3f ef       	ldi	r19, 0xFF	; 255
    1c2a:	c9 01       	movw	r24, r18
    1c2c:	2c 96       	adiw	r28, 0x0c	; 12
    1c2e:	0f b6       	in	r0, 0x3f	; 63
    1c30:	f8 94       	cli
    1c32:	de bf       	out	0x3e, r29	; 62
    1c34:	0f be       	out	0x3f, r0	; 63
    1c36:	cd bf       	out	0x3d, r28	; 61
    1c38:	df 91       	pop	r29
    1c3a:	cf 91       	pop	r28
    1c3c:	1f 91       	pop	r17
    1c3e:	0f 91       	pop	r16
    1c40:	ff 90       	pop	r15
    1c42:	ef 90       	pop	r14
    1c44:	df 90       	pop	r13
    1c46:	cf 90       	pop	r12
    1c48:	bf 90       	pop	r11
    1c4a:	af 90       	pop	r10
    1c4c:	9f 90       	pop	r9
    1c4e:	8f 90       	pop	r8
    1c50:	7f 90       	pop	r7
    1c52:	6f 90       	pop	r6
    1c54:	5f 90       	pop	r5
    1c56:	4f 90       	pop	r4
    1c58:	3f 90       	pop	r3
    1c5a:	2f 90       	pop	r2
    1c5c:	08 95       	ret

00001c5e <strnlen_P>:
    1c5e:	fc 01       	movw	r30, r24
    1c60:	05 90       	lpm	r0, Z+
    1c62:	61 50       	subi	r22, 0x01	; 1
    1c64:	70 40       	sbci	r23, 0x00	; 0
    1c66:	01 10       	cpse	r0, r1
    1c68:	d8 f7       	brcc	.-10     	; 0x1c60 <strnlen_P+0x2>
    1c6a:	80 95       	com	r24
    1c6c:	90 95       	com	r25
    1c6e:	8e 0f       	add	r24, r30
    1c70:	9f 1f       	adc	r25, r31
    1c72:	08 95       	ret

00001c74 <strnlen>:
    1c74:	fc 01       	movw	r30, r24
    1c76:	61 50       	subi	r22, 0x01	; 1
    1c78:	70 40       	sbci	r23, 0x00	; 0
    1c7a:	01 90       	ld	r0, Z+
    1c7c:	01 10       	cpse	r0, r1
    1c7e:	d8 f7       	brcc	.-10     	; 0x1c76 <strnlen+0x2>
    1c80:	80 95       	com	r24
    1c82:	90 95       	com	r25
    1c84:	8e 0f       	add	r24, r30
    1c86:	9f 1f       	adc	r25, r31
    1c88:	08 95       	ret

00001c8a <fputc>:
    1c8a:	0f 93       	push	r16
    1c8c:	1f 93       	push	r17
    1c8e:	cf 93       	push	r28
    1c90:	df 93       	push	r29
    1c92:	8c 01       	movw	r16, r24
    1c94:	eb 01       	movw	r28, r22
    1c96:	8b 81       	ldd	r24, Y+3	; 0x03
    1c98:	81 fd       	sbrc	r24, 1
    1c9a:	03 c0       	rjmp	.+6      	; 0x1ca2 <fputc+0x18>
    1c9c:	0f ef       	ldi	r16, 0xFF	; 255
    1c9e:	1f ef       	ldi	r17, 0xFF	; 255
    1ca0:	1a c0       	rjmp	.+52     	; 0x1cd6 <fputc+0x4c>
    1ca2:	82 ff       	sbrs	r24, 2
    1ca4:	0d c0       	rjmp	.+26     	; 0x1cc0 <fputc+0x36>
    1ca6:	2e 81       	ldd	r18, Y+6	; 0x06
    1ca8:	3f 81       	ldd	r19, Y+7	; 0x07
    1caa:	8c 81       	ldd	r24, Y+4	; 0x04
    1cac:	9d 81       	ldd	r25, Y+5	; 0x05
    1cae:	28 17       	cp	r18, r24
    1cb0:	39 07       	cpc	r19, r25
    1cb2:	64 f4       	brge	.+24     	; 0x1ccc <fputc+0x42>
    1cb4:	e8 81       	ld	r30, Y
    1cb6:	f9 81       	ldd	r31, Y+1	; 0x01
    1cb8:	01 93       	st	Z+, r16
    1cba:	f9 83       	std	Y+1, r31	; 0x01
    1cbc:	e8 83       	st	Y, r30
    1cbe:	06 c0       	rjmp	.+12     	; 0x1ccc <fputc+0x42>
    1cc0:	e8 85       	ldd	r30, Y+8	; 0x08
    1cc2:	f9 85       	ldd	r31, Y+9	; 0x09
    1cc4:	80 2f       	mov	r24, r16
    1cc6:	09 95       	icall
    1cc8:	89 2b       	or	r24, r25
    1cca:	41 f7       	brne	.-48     	; 0x1c9c <fputc+0x12>
    1ccc:	8e 81       	ldd	r24, Y+6	; 0x06
    1cce:	9f 81       	ldd	r25, Y+7	; 0x07
    1cd0:	01 96       	adiw	r24, 0x01	; 1
    1cd2:	9f 83       	std	Y+7, r25	; 0x07
    1cd4:	8e 83       	std	Y+6, r24	; 0x06
    1cd6:	c8 01       	movw	r24, r16
    1cd8:	df 91       	pop	r29
    1cda:	cf 91       	pop	r28
    1cdc:	1f 91       	pop	r17
    1cde:	0f 91       	pop	r16
    1ce0:	08 95       	ret

00001ce2 <__ultoa_invert>:
    1ce2:	fa 01       	movw	r30, r20
    1ce4:	aa 27       	eor	r26, r26
    1ce6:	28 30       	cpi	r18, 0x08	; 8
    1ce8:	51 f1       	breq	.+84     	; 0x1d3e <__ultoa_invert+0x5c>
    1cea:	20 31       	cpi	r18, 0x10	; 16
    1cec:	81 f1       	breq	.+96     	; 0x1d4e <__ultoa_invert+0x6c>
    1cee:	e8 94       	clt
    1cf0:	6f 93       	push	r22
    1cf2:	6e 7f       	andi	r22, 0xFE	; 254
    1cf4:	6e 5f       	subi	r22, 0xFE	; 254
    1cf6:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf8:	8f 4f       	sbci	r24, 0xFF	; 255
    1cfa:	9f 4f       	sbci	r25, 0xFF	; 255
    1cfc:	af 4f       	sbci	r26, 0xFF	; 255
    1cfe:	b1 e0       	ldi	r27, 0x01	; 1
    1d00:	3e d0       	rcall	.+124    	; 0x1d7e <__ultoa_invert+0x9c>
    1d02:	b4 e0       	ldi	r27, 0x04	; 4
    1d04:	3c d0       	rcall	.+120    	; 0x1d7e <__ultoa_invert+0x9c>
    1d06:	67 0f       	add	r22, r23
    1d08:	78 1f       	adc	r23, r24
    1d0a:	89 1f       	adc	r24, r25
    1d0c:	9a 1f       	adc	r25, r26
    1d0e:	a1 1d       	adc	r26, r1
    1d10:	68 0f       	add	r22, r24
    1d12:	79 1f       	adc	r23, r25
    1d14:	8a 1f       	adc	r24, r26
    1d16:	91 1d       	adc	r25, r1
    1d18:	a1 1d       	adc	r26, r1
    1d1a:	6a 0f       	add	r22, r26
    1d1c:	71 1d       	adc	r23, r1
    1d1e:	81 1d       	adc	r24, r1
    1d20:	91 1d       	adc	r25, r1
    1d22:	a1 1d       	adc	r26, r1
    1d24:	20 d0       	rcall	.+64     	; 0x1d66 <__ultoa_invert+0x84>
    1d26:	09 f4       	brne	.+2      	; 0x1d2a <__ultoa_invert+0x48>
    1d28:	68 94       	set
    1d2a:	3f 91       	pop	r19
    1d2c:	2a e0       	ldi	r18, 0x0A	; 10
    1d2e:	26 9f       	mul	r18, r22
    1d30:	11 24       	eor	r1, r1
    1d32:	30 19       	sub	r19, r0
    1d34:	30 5d       	subi	r19, 0xD0	; 208
    1d36:	31 93       	st	Z+, r19
    1d38:	de f6       	brtc	.-74     	; 0x1cf0 <__ultoa_invert+0xe>
    1d3a:	cf 01       	movw	r24, r30
    1d3c:	08 95       	ret
    1d3e:	46 2f       	mov	r20, r22
    1d40:	47 70       	andi	r20, 0x07	; 7
    1d42:	40 5d       	subi	r20, 0xD0	; 208
    1d44:	41 93       	st	Z+, r20
    1d46:	b3 e0       	ldi	r27, 0x03	; 3
    1d48:	0f d0       	rcall	.+30     	; 0x1d68 <__ultoa_invert+0x86>
    1d4a:	c9 f7       	brne	.-14     	; 0x1d3e <__ultoa_invert+0x5c>
    1d4c:	f6 cf       	rjmp	.-20     	; 0x1d3a <__ultoa_invert+0x58>
    1d4e:	46 2f       	mov	r20, r22
    1d50:	4f 70       	andi	r20, 0x0F	; 15
    1d52:	40 5d       	subi	r20, 0xD0	; 208
    1d54:	4a 33       	cpi	r20, 0x3A	; 58
    1d56:	18 f0       	brcs	.+6      	; 0x1d5e <__ultoa_invert+0x7c>
    1d58:	49 5d       	subi	r20, 0xD9	; 217
    1d5a:	31 fd       	sbrc	r19, 1
    1d5c:	40 52       	subi	r20, 0x20	; 32
    1d5e:	41 93       	st	Z+, r20
    1d60:	02 d0       	rcall	.+4      	; 0x1d66 <__ultoa_invert+0x84>
    1d62:	a9 f7       	brne	.-22     	; 0x1d4e <__ultoa_invert+0x6c>
    1d64:	ea cf       	rjmp	.-44     	; 0x1d3a <__ultoa_invert+0x58>
    1d66:	b4 e0       	ldi	r27, 0x04	; 4
    1d68:	a6 95       	lsr	r26
    1d6a:	97 95       	ror	r25
    1d6c:	87 95       	ror	r24
    1d6e:	77 95       	ror	r23
    1d70:	67 95       	ror	r22
    1d72:	ba 95       	dec	r27
    1d74:	c9 f7       	brne	.-14     	; 0x1d68 <__ultoa_invert+0x86>
    1d76:	00 97       	sbiw	r24, 0x00	; 0
    1d78:	61 05       	cpc	r22, r1
    1d7a:	71 05       	cpc	r23, r1
    1d7c:	08 95       	ret
    1d7e:	9b 01       	movw	r18, r22
    1d80:	ac 01       	movw	r20, r24
    1d82:	0a 2e       	mov	r0, r26
    1d84:	06 94       	lsr	r0
    1d86:	57 95       	ror	r21
    1d88:	47 95       	ror	r20
    1d8a:	37 95       	ror	r19
    1d8c:	27 95       	ror	r18
    1d8e:	ba 95       	dec	r27
    1d90:	c9 f7       	brne	.-14     	; 0x1d84 <__ultoa_invert+0xa2>
    1d92:	62 0f       	add	r22, r18
    1d94:	73 1f       	adc	r23, r19
    1d96:	84 1f       	adc	r24, r20
    1d98:	95 1f       	adc	r25, r21
    1d9a:	a0 1d       	adc	r26, r0
    1d9c:	08 95       	ret

00001d9e <_exit>:
    1d9e:	f8 94       	cli

00001da0 <__stop_program>:
    1da0:	ff cf       	rjmp	.-2      	; 0x1da0 <__stop_program>
