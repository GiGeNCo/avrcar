
avrcar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00001b9c  00001c30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b9c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000019e  0080013a  0080013a  00001c6a  2**0
                  ALLOC
  3 .stab         000038b8  00000000  00000000  00001c6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000016e9  00000000  00000000  00005524  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00006c0d  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 09 05 	jmp	0xa12	; 0xa12 <__vector_30>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 c5 04 	jmp	0x98a	; 0x98a <__vector_32>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec e9       	ldi	r30, 0x9C	; 156
      a0:	fb e1       	ldi	r31, 0x1B	; 27
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 33       	cpi	r26, 0x3A	; 58
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	12 e0       	ldi	r17, 0x02	; 2
      b4:	aa e3       	ldi	r26, 0x3A	; 58
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 3d       	cpi	r26, 0xD8	; 216
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 43 05 	call	0xa86	; 0xa86 <main>
      c6:	0c 94 cc 0d 	jmp	0x1b98	; 0x1b98 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <Task_01>:
unsigned char Task_01_Step		= 0;



void Task_01(void)
{
      ce:	cf 93       	push	r28
      d0:	df 93       	push	r29
      d2:	cd b7       	in	r28, 0x3d	; 61
      d4:	de b7       	in	r29, 0x3e	; 62
	switch(Task_01_Step )
      d6:	80 91 3a 01 	lds	r24, 0x013A
      da:	88 2f       	mov	r24, r24
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	82 30       	cpi	r24, 0x02	; 2
      e0:	91 05       	cpc	r25, r1
      e2:	29 f1       	breq	.+74     	; 0x12e <Task_01+0x60>
      e4:	83 30       	cpi	r24, 0x03	; 3
      e6:	91 05       	cpc	r25, r1
      e8:	34 f4       	brge	.+12     	; 0xf6 <Task_01+0x28>
      ea:	00 97       	sbiw	r24, 0x00	; 0
      ec:	69 f1       	breq	.+90     	; 0x148 <Task_01+0x7a>
      ee:	81 30       	cpi	r24, 0x01	; 1
      f0:	91 05       	cpc	r25, r1
      f2:	59 f0       	breq	.+22     	; 0x10a <Task_01+0x3c>
      f4:	2c c0       	rjmp	.+88     	; 0x14e <Task_01+0x80>
      f6:	84 30       	cpi	r24, 0x04	; 4
      f8:	91 05       	cpc	r25, r1
      fa:	f9 f0       	breq	.+62     	; 0x13a <Task_01+0x6c>
      fc:	84 30       	cpi	r24, 0x04	; 4
      fe:	91 05       	cpc	r25, r1
     100:	cc f0       	brlt	.+50     	; 0x134 <Task_01+0x66>
     102:	85 30       	cpi	r24, 0x05	; 5
     104:	91 05       	cpc	r25, r1
     106:	e1 f0       	breq	.+56     	; 0x140 <Task_01+0x72>
     108:	22 c0       	rjmp	.+68     	; 0x14e <Task_01+0x80>

		//################################################################################

		case 1 :
		{
			if (USART2_Busy == 0) {
     10a:	80 91 4e 01 	lds	r24, 0x014E
     10e:	88 23       	and	r24, r24
     110:	e9 f4       	brne	.+58     	; 0x14c <Task_01+0x7e>
				sprintf(USART2_buffer,"xxxxxxxxxxxxxxxxxxxxx\n\r");
     112:	88 e1       	ldi	r24, 0x18	; 24
     114:	e0 e0       	ldi	r30, 0x00	; 0
     116:	f1 e0       	ldi	r31, 0x01	; 1
     118:	ae ed       	ldi	r26, 0xDE	; 222
     11a:	b1 e0       	ldi	r27, 0x01	; 1
     11c:	01 90       	ld	r0, Z+
     11e:	0d 92       	st	X+, r0
     120:	8a 95       	dec	r24
     122:	e1 f7       	brne	.-8      	; 0x11c <Task_01+0x4e>
				USART2_Transmit();
     124:	0e 94 a0 04 	call	0x940	; 0x940 <USART2_Transmit>
				Task_01__Task_Stop;
     128:	10 92 3a 01 	sts	0x013A, r1
			}

			break;
     12c:	0f c0       	rjmp	.+30     	; 0x14c <Task_01+0x7e>
		}
		case 2 :
		{


			Task_01__Task_Stop;
     12e:	10 92 3a 01 	sts	0x013A, r1
			break;
     132:	0d c0       	rjmp	.+26     	; 0x14e <Task_01+0x80>
		}
		case 3 :
		{


			Task_01__Task_Stop;
     134:	10 92 3a 01 	sts	0x013A, r1
			break;
     138:	0a c0       	rjmp	.+20     	; 0x14e <Task_01+0x80>

		case 4 :
		{


			Task_01__Task_Stop;
     13a:	10 92 3a 01 	sts	0x013A, r1
			break;
     13e:	07 c0       	rjmp	.+14     	; 0x14e <Task_01+0x80>
		}

		case 5 :
		{

			Task_01__Task_Stop;
     140:	10 92 3a 01 	sts	0x013A, r1
			break;
     144:	00 00       	nop
     146:	03 c0       	rjmp	.+6      	; 0x14e <Task_01+0x80>
{
	switch(Task_01_Step )
	{
		case 0 :
		{
			break;
     148:	00 00       	nop
     14a:	01 c0       	rjmp	.+2      	; 0x14e <Task_01+0x80>
				sprintf(USART2_buffer,"xxxxxxxxxxxxxxxxxxxxx\n\r");
				USART2_Transmit();
				Task_01__Task_Stop;
			}

			break;
     14c:	00 00       	nop




	}
}
     14e:	df 91       	pop	r29
     150:	cf 91       	pop	r28
     152:	08 95       	ret

00000154 <Task_02>:
		} all;
//#
//#################################################################################

void Task_02(void)
{
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	cd b7       	in	r28, 0x3d	; 61
     15a:	de b7       	in	r29, 0x3e	; 62
	switch(Task_02_Step )
     15c:	80 91 3b 01 	lds	r24, 0x013B
     160:	88 2f       	mov	r24, r24
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	82 30       	cpi	r24, 0x02	; 2
     166:	91 05       	cpc	r25, r1
     168:	f1 f0       	breq	.+60     	; 0x1a6 <Task_02+0x52>
     16a:	83 30       	cpi	r24, 0x03	; 3
     16c:	91 05       	cpc	r25, r1
     16e:	3c f4       	brge	.+14     	; 0x17e <Task_02+0x2a>
     170:	00 97       	sbiw	r24, 0x00	; 0
     172:	09 f4       	brne	.+2      	; 0x176 <Task_02+0x22>
     174:	52 c0       	rjmp	.+164    	; 0x21a <Task_02+0xc6>
     176:	81 30       	cpi	r24, 0x01	; 1
     178:	91 05       	cpc	r25, r1
     17a:	69 f0       	breq	.+26     	; 0x196 <Task_02+0x42>
     17c:	51 c0       	rjmp	.+162    	; 0x220 <Task_02+0xcc>
     17e:	84 30       	cpi	r24, 0x04	; 4
     180:	91 05       	cpc	r25, r1
     182:	09 f4       	brne	.+2      	; 0x186 <Task_02+0x32>
     184:	43 c0       	rjmp	.+134    	; 0x20c <Task_02+0xb8>
     186:	84 30       	cpi	r24, 0x04	; 4
     188:	91 05       	cpc	r25, r1
     18a:	ec f1       	brlt	.+122    	; 0x206 <Task_02+0xb2>
     18c:	85 30       	cpi	r24, 0x05	; 5
     18e:	91 05       	cpc	r25, r1
     190:	09 f4       	brne	.+2      	; 0x194 <Task_02+0x40>
     192:	3f c0       	rjmp	.+126    	; 0x212 <Task_02+0xbe>
     194:	45 c0       	rjmp	.+138    	; 0x220 <Task_02+0xcc>
		case 1 :
		{
			/////////////////////////////

			/////////////////////////////
			gamura();
     196:	0e 94 2c 01 	call	0x258	; 0x258 <gamura>

			Task_02__GoTo_Next_Step;
     19a:	80 91 3b 01 	lds	r24, 0x013B
     19e:	8f 5f       	subi	r24, 0xFF	; 255
     1a0:	80 93 3b 01 	sts	0x013B, r24

			break;
     1a4:	3d c0       	rjmp	.+122    	; 0x220 <Task_02+0xcc>
		}
		case 2 :
		{


			if (USART2_Busy == 0) {
     1a6:	80 91 4e 01 	lds	r24, 0x014E
     1aa:	88 23       	and	r24, r24
     1ac:	c1 f5       	brne	.+112    	; 0x21e <Task_02+0xca>
				sprintf(USART2_buffer,">  %lu\n\r", MyVel._long);
     1ae:	80 91 57 01 	lds	r24, 0x0157
     1b2:	90 91 58 01 	lds	r25, 0x0158
     1b6:	a0 91 59 01 	lds	r26, 0x0159
     1ba:	b0 91 5a 01 	lds	r27, 0x015A
     1be:	2b 2f       	mov	r18, r27
     1c0:	2f 93       	push	r18
     1c2:	2a 2f       	mov	r18, r26
     1c4:	2f 93       	push	r18
     1c6:	29 2f       	mov	r18, r25
     1c8:	2f 93       	push	r18
     1ca:	8f 93       	push	r24
     1cc:	88 e1       	ldi	r24, 0x18	; 24
     1ce:	91 e0       	ldi	r25, 0x01	; 1
     1d0:	89 2f       	mov	r24, r25
     1d2:	8f 93       	push	r24
     1d4:	88 e1       	ldi	r24, 0x18	; 24
     1d6:	91 e0       	ldi	r25, 0x01	; 1
     1d8:	8f 93       	push	r24
     1da:	8e ed       	ldi	r24, 0xDE	; 222
     1dc:	91 e0       	ldi	r25, 0x01	; 1
     1de:	89 2f       	mov	r24, r25
     1e0:	8f 93       	push	r24
     1e2:	8e ed       	ldi	r24, 0xDE	; 222
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	8f 93       	push	r24
     1e8:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <sprintf>
     1ec:	8d b7       	in	r24, 0x3d	; 61
     1ee:	9e b7       	in	r25, 0x3e	; 62
     1f0:	08 96       	adiw	r24, 0x08	; 8
     1f2:	0f b6       	in	r0, 0x3f	; 63
     1f4:	f8 94       	cli
     1f6:	de bf       	out	0x3e, r29	; 62
     1f8:	0f be       	out	0x3f, r0	; 63
     1fa:	cd bf       	out	0x3d, r28	; 61
				//mtvleli = MyVel._long;
				USART2_Transmit();
     1fc:	0e 94 a0 04 	call	0x940	; 0x940 <USART2_Transmit>
				Task_02__Task_Stop;
     200:	10 92 3b 01 	sts	0x013B, r1
				//Task_02__Task_Start;
			}



			break;
     204:	0c c0       	rjmp	.+24     	; 0x21e <Task_02+0xca>
		}
		case 3 :
		{


			Task_02__Task_Stop;
     206:	10 92 3b 01 	sts	0x013B, r1
			break;
     20a:	0a c0       	rjmp	.+20     	; 0x220 <Task_02+0xcc>

		case 4 :
		{


			Task_02__Task_Stop;
     20c:	10 92 3b 01 	sts	0x013B, r1
			break;
     210:	07 c0       	rjmp	.+14     	; 0x220 <Task_02+0xcc>
		}

		case 5 :
		{

			Task_02__Task_Stop;
     212:	10 92 3b 01 	sts	0x013B, r1
			break;
     216:	00 00       	nop
     218:	03 c0       	rjmp	.+6      	; 0x220 <Task_02+0xcc>
{
	switch(Task_02_Step )
	{
		case 0 :
		{
			break;
     21a:	00 00       	nop
     21c:	01 c0       	rjmp	.+2      	; 0x220 <Task_02+0xcc>
				//Task_02__Task_Start;
			}



			break;
     21e:	00 00       	nop




	}
}
     220:	df 91       	pop	r29
     222:	cf 91       	pop	r28
     224:	08 95       	ret

00000226 <gamura_init>:

//#################################################################
void gamura_init(void) {
     226:	cf 93       	push	r28
     228:	df 93       	push	r29
     22a:	cd b7       	in	r28, 0x3d	; 61
     22c:	de b7       	in	r29, 0x3e	; 62

	DD_HCRS04_Trig_Out;
     22e:	81 e3       	ldi	r24, 0x31	; 49
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	21 e3       	ldi	r18, 0x31	; 49
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	f9 01       	movw	r30, r18
     238:	20 81       	ld	r18, Z
     23a:	20 61       	ori	r18, 0x10	; 16
     23c:	fc 01       	movw	r30, r24
     23e:	20 83       	st	Z, r18
	DD_HCRS04_Echo_In;
     240:	81 e3       	ldi	r24, 0x31	; 49
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	21 e3       	ldi	r18, 0x31	; 49
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	f9 01       	movw	r30, r18
     24a:	20 81       	ld	r18, Z
     24c:	2f 7d       	andi	r18, 0xDF	; 223
     24e:	fc 01       	movw	r30, r24
     250:	20 83       	st	Z, r18

}
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	08 95       	ret

00000258 <gamura>:
void gamura(void) {
     258:	0f 93       	push	r16
     25a:	1f 93       	push	r17
     25c:	cf 93       	push	r28
     25e:	df 93       	push	r29
     260:	cd b7       	in	r28, 0x3d	; 61
     262:	de b7       	in	r29, 0x3e	; 62
     264:	2f 97       	sbiw	r28, 0x0f	; 15
     266:	0f b6       	in	r0, 0x3f	; 63
     268:	f8 94       	cli
     26a:	de bf       	out	0x3e, r29	; 62
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	cd bf       	out	0x3d, r28	; 61

		char x1 = 0;
     270:	19 82       	std	Y+1, r1	; 0x01
		//########################################
		HCRS04_Trig_1;
     272:	82 e3       	ldi	r24, 0x32	; 50
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	22 e3       	ldi	r18, 0x32	; 50
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	f9 01       	movw	r30, r18
     27c:	20 81       	ld	r18, Z
     27e:	20 61       	ori	r18, 0x10	; 16
     280:	fc 01       	movw	r30, r24
     282:	20 83       	st	Z, r18
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	a8 e4       	ldi	r26, 0x48	; 72
     28a:	b3 e4       	ldi	r27, 0x43	; 67
     28c:	8a 83       	std	Y+2, r24	; 0x02
     28e:	9b 83       	std	Y+3, r25	; 0x03
     290:	ac 83       	std	Y+4, r26	; 0x04
     292:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     294:	26 e6       	ldi	r18, 0x66	; 102
     296:	36 e6       	ldi	r19, 0x66	; 102
     298:	46 ee       	ldi	r20, 0xE6	; 230
     29a:	54 e4       	ldi	r21, 0x44	; 68
     29c:	6a 81       	ldd	r22, Y+2	; 0x02
     29e:	7b 81       	ldd	r23, Y+3	; 0x03
     2a0:	8c 81       	ldd	r24, Y+4	; 0x04
     2a2:	9d 81       	ldd	r25, Y+5	; 0x05
     2a4:	0e 94 6c 07 	call	0xed8	; 0xed8 <__mulsf3>
     2a8:	dc 01       	movw	r26, r24
     2aa:	cb 01       	movw	r24, r22
     2ac:	8e 83       	std	Y+6, r24	; 0x06
     2ae:	9f 83       	std	Y+7, r25	; 0x07
     2b0:	a8 87       	std	Y+8, r26	; 0x08
     2b2:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     2b4:	20 e0       	ldi	r18, 0x00	; 0
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	40 e8       	ldi	r20, 0x80	; 128
     2ba:	5f e3       	ldi	r21, 0x3F	; 63
     2bc:	6e 81       	ldd	r22, Y+6	; 0x06
     2be:	7f 81       	ldd	r23, Y+7	; 0x07
     2c0:	88 85       	ldd	r24, Y+8	; 0x08
     2c2:	99 85       	ldd	r25, Y+9	; 0x09
     2c4:	0e 94 af 08 	call	0x115e	; 0x115e <__ltsf2>
     2c8:	88 23       	and	r24, r24
     2ca:	2c f4       	brge	.+10     	; 0x2d6 <gamura+0x7e>
		__ticks = 1;
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	9b 87       	std	Y+11, r25	; 0x0b
     2d2:	8a 87       	std	Y+10, r24	; 0x0a
     2d4:	42 c0       	rjmp	.+132    	; 0x35a <gamura+0x102>
	else if (__tmp > 65535)
     2d6:	20 e0       	ldi	r18, 0x00	; 0
     2d8:	3f ef       	ldi	r19, 0xFF	; 255
     2da:	4f e7       	ldi	r20, 0x7F	; 127
     2dc:	57 e4       	ldi	r21, 0x47	; 71
     2de:	6e 81       	ldd	r22, Y+6	; 0x06
     2e0:	7f 81       	ldd	r23, Y+7	; 0x07
     2e2:	88 85       	ldd	r24, Y+8	; 0x08
     2e4:	99 85       	ldd	r25, Y+9	; 0x09
     2e6:	0e 94 51 08 	call	0x10a2	; 0x10a2 <__gtsf2>
     2ea:	18 16       	cp	r1, r24
     2ec:	64 f5       	brge	.+88     	; 0x346 <gamura+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2ee:	20 e0       	ldi	r18, 0x00	; 0
     2f0:	30 e0       	ldi	r19, 0x00	; 0
     2f2:	40 e2       	ldi	r20, 0x20	; 32
     2f4:	51 e4       	ldi	r21, 0x41	; 65
     2f6:	6a 81       	ldd	r22, Y+2	; 0x02
     2f8:	7b 81       	ldd	r23, Y+3	; 0x03
     2fa:	8c 81       	ldd	r24, Y+4	; 0x04
     2fc:	9d 81       	ldd	r25, Y+5	; 0x05
     2fe:	0e 94 6c 07 	call	0xed8	; 0xed8 <__mulsf3>
     302:	dc 01       	movw	r26, r24
     304:	cb 01       	movw	r24, r22
     306:	bc 01       	movw	r22, r24
     308:	cd 01       	movw	r24, r26
     30a:	0e 94 91 05 	call	0xb22	; 0xb22 <__fixunssfsi>
     30e:	dc 01       	movw	r26, r24
     310:	cb 01       	movw	r24, r22
     312:	9b 87       	std	Y+11, r25	; 0x0b
     314:	8a 87       	std	Y+10, r24	; 0x0a
     316:	12 c0       	rjmp	.+36     	; 0x33c <gamura+0xe4>
     318:	88 eb       	ldi	r24, 0xB8	; 184
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	9d 87       	std	Y+13, r25	; 0x0d
     31e:	8c 87       	std	Y+12, r24	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     320:	8c 85       	ldd	r24, Y+12	; 0x0c
     322:	9d 85       	ldd	r25, Y+13	; 0x0d
     324:	8c 01       	movw	r16, r24
     326:	c8 01       	movw	r24, r16
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	f1 f7       	brne	.-4      	; 0x328 <gamura+0xd0>
     32c:	8c 01       	movw	r16, r24
     32e:	1d 87       	std	Y+13, r17	; 0x0d
     330:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     332:	8a 85       	ldd	r24, Y+10	; 0x0a
     334:	9b 85       	ldd	r25, Y+11	; 0x0b
     336:	01 97       	sbiw	r24, 0x01	; 1
     338:	9b 87       	std	Y+11, r25	; 0x0b
     33a:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     33c:	8a 85       	ldd	r24, Y+10	; 0x0a
     33e:	9b 85       	ldd	r25, Y+11	; 0x0b
     340:	00 97       	sbiw	r24, 0x00	; 0
     342:	51 f7       	brne	.-44     	; 0x318 <gamura+0xc0>
     344:	17 c0       	rjmp	.+46     	; 0x374 <gamura+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     346:	6e 81       	ldd	r22, Y+6	; 0x06
     348:	7f 81       	ldd	r23, Y+7	; 0x07
     34a:	88 85       	ldd	r24, Y+8	; 0x08
     34c:	99 85       	ldd	r25, Y+9	; 0x09
     34e:	0e 94 91 05 	call	0xb22	; 0xb22 <__fixunssfsi>
     352:	dc 01       	movw	r26, r24
     354:	cb 01       	movw	r24, r22
     356:	9b 87       	std	Y+11, r25	; 0x0b
     358:	8a 87       	std	Y+10, r24	; 0x0a
     35a:	8a 85       	ldd	r24, Y+10	; 0x0a
     35c:	9b 85       	ldd	r25, Y+11	; 0x0b
     35e:	9f 87       	std	Y+15, r25	; 0x0f
     360:	8e 87       	std	Y+14, r24	; 0x0e
     362:	8e 85       	ldd	r24, Y+14	; 0x0e
     364:	9f 85       	ldd	r25, Y+15	; 0x0f
     366:	8c 01       	movw	r16, r24
     368:	f8 01       	movw	r30, r16
     36a:	31 97       	sbiw	r30, 0x01	; 1
     36c:	f1 f7       	brne	.-4      	; 0x36a <gamura+0x112>
     36e:	8f 01       	movw	r16, r30
     370:	1f 87       	std	Y+15, r17	; 0x0f
     372:	0e 87       	std	Y+14, r16	; 0x0e
		_delay_ms(200);
		HCRS04_Trig_0;
     374:	82 e3       	ldi	r24, 0x32	; 50
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	22 e3       	ldi	r18, 0x32	; 50
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	f9 01       	movw	r30, r18
     37e:	20 81       	ld	r18, Z
     380:	2f 7e       	andi	r18, 0xEF	; 239
     382:	fc 01       	movw	r30, r24
     384:	20 83       	st	Z, r18
		//########################################

		x1 = PIND & 0b00100000;
     386:	80 e3       	ldi	r24, 0x30	; 48
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	fc 01       	movw	r30, r24
     38c:	80 81       	ld	r24, Z
     38e:	80 72       	andi	r24, 0x20	; 32
     390:	89 83       	std	Y+1, r24	; 0x01
     392:	01 c0       	rjmp	.+2      	; 0x396 <gamura+0x13e>

			// velodebi ertians
			while(1){
				x1 = PIND & 0b00100000;
				if (x1!=0) break;
			}
     394:	00 00       	nop



			// velodebi ertians
			while(1){
				x1 = PIND & 0b00100000;
     396:	80 e3       	ldi	r24, 0x30	; 48
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	fc 01       	movw	r30, r24
     39c:	80 81       	ld	r24, Z
     39e:	80 72       	andi	r24, 0x20	; 32
     3a0:	89 83       	std	Y+1, r24	; 0x01
				if (x1!=0) break;
     3a2:	89 81       	ldd	r24, Y+1	; 0x01
     3a4:	88 23       	and	r24, r24
     3a6:	b1 f3       	breq	.-20     	; 0x394 <gamura+0x13c>
     3a8:	00 00       	nop
			}
			//########################################

			MyVel._long =  0;
     3aa:	10 92 57 01 	sts	0x0157, r1
     3ae:	10 92 58 01 	sts	0x0158, r1
     3b2:	10 92 59 01 	sts	0x0159, r1
     3b6:	10 92 5a 01 	sts	0x015A, r1
     3ba:	01 c0       	rjmp	.+2      	; 0x3be <gamura+0x166>
			// ertianis xangdzlivobis gansazgvra
			while(1){
				MyVel._long++;
				x1 = PIND & 0b00100000;
				if (x1==0) break;
			}
     3bc:	00 00       	nop

			MyVel._long =  0;

			// ertianis xangdzlivobis gansazgvra
			while(1){
				MyVel._long++;
     3be:	80 91 57 01 	lds	r24, 0x0157
     3c2:	90 91 58 01 	lds	r25, 0x0158
     3c6:	a0 91 59 01 	lds	r26, 0x0159
     3ca:	b0 91 5a 01 	lds	r27, 0x015A
     3ce:	01 96       	adiw	r24, 0x01	; 1
     3d0:	a1 1d       	adc	r26, r1
     3d2:	b1 1d       	adc	r27, r1
     3d4:	80 93 57 01 	sts	0x0157, r24
     3d8:	90 93 58 01 	sts	0x0158, r25
     3dc:	a0 93 59 01 	sts	0x0159, r26
     3e0:	b0 93 5a 01 	sts	0x015A, r27
				x1 = PIND & 0b00100000;
     3e4:	80 e3       	ldi	r24, 0x30	; 48
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	fc 01       	movw	r30, r24
     3ea:	80 81       	ld	r24, Z
     3ec:	80 72       	andi	r24, 0x20	; 32
     3ee:	89 83       	std	Y+1, r24	; 0x01
				if (x1==0) break;
     3f0:	89 81       	ldd	r24, Y+1	; 0x01
     3f2:	88 23       	and	r24, r24
     3f4:	19 f7       	brne	.-58     	; 0x3bc <gamura+0x164>
     3f6:	00 00       	nop
			//########################################


			//########################################

}
     3f8:	2f 96       	adiw	r28, 0x0f	; 15
     3fa:	0f b6       	in	r0, 0x3f	; 63
     3fc:	f8 94       	cli
     3fe:	de bf       	out	0x3e, r29	; 62
     400:	0f be       	out	0x3f, r0	; 63
     402:	cd bf       	out	0x3d, r28	; 61
     404:	df 91       	pop	r29
     406:	cf 91       	pop	r28
     408:	1f 91       	pop	r17
     40a:	0f 91       	pop	r16
     40c:	08 95       	ret

0000040e <Task_03>:
unsigned char Task_03_Step		= 0;

char SAVE;

void Task_03(void)
{
     40e:	cf 93       	push	r28
     410:	df 93       	push	r29
     412:	cd b7       	in	r28, 0x3d	; 61
     414:	de b7       	in	r29, 0x3e	; 62
	switch(Task_03_Step )
     416:	80 91 3c 01 	lds	r24, 0x013C
     41a:	88 2f       	mov	r24, r24
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	83 30       	cpi	r24, 0x03	; 3
     420:	91 05       	cpc	r25, r1
     422:	09 f4       	brne	.+2      	; 0x426 <Task_03+0x18>
     424:	47 c0       	rjmp	.+142    	; 0x4b4 <Task_03+0xa6>
     426:	84 30       	cpi	r24, 0x04	; 4
     428:	91 05       	cpc	r25, r1
     42a:	4c f4       	brge	.+18     	; 0x43e <Task_03+0x30>
     42c:	81 30       	cpi	r24, 0x01	; 1
     42e:	91 05       	cpc	r25, r1
     430:	e9 f0       	breq	.+58     	; 0x46c <Task_03+0x5e>
     432:	82 30       	cpi	r24, 0x02	; 2
     434:	91 05       	cpc	r25, r1
     436:	5c f5       	brge	.+86     	; 0x48e <Task_03+0x80>
     438:	00 97       	sbiw	r24, 0x00	; 0
     43a:	69 f0       	breq	.+26     	; 0x456 <Task_03+0x48>
     43c:	55 c0       	rjmp	.+170    	; 0x4e8 <Task_03+0xda>
     43e:	85 30       	cpi	r24, 0x05	; 5
     440:	91 05       	cpc	r25, r1
     442:	09 f4       	brne	.+2      	; 0x446 <Task_03+0x38>
     444:	47 c0       	rjmp	.+142    	; 0x4d4 <Task_03+0xc6>
     446:	85 30       	cpi	r24, 0x05	; 5
     448:	91 05       	cpc	r25, r1
     44a:	d4 f1       	brlt	.+116    	; 0x4c0 <Task_03+0xb2>
     44c:	86 30       	cpi	r24, 0x06	; 6
     44e:	91 05       	cpc	r25, r1
     450:	09 f4       	brne	.+2      	; 0x454 <Task_03+0x46>
     452:	43 c0       	rjmp	.+134    	; 0x4da <Task_03+0xcc>
     454:	49 c0       	rjmp	.+146    	; 0x4e8 <Task_03+0xda>
	{
		case 0 :
		{
				if (USART2_Vel == 'x'){
     456:	80 91 dd 01 	lds	r24, 0x01DD
     45a:	88 37       	cpi	r24, 0x78	; 120
     45c:	09 f0       	breq	.+2      	; 0x460 <Task_03+0x52>
     45e:	41 c0       	rjmp	.+130    	; 0x4e2 <Task_03+0xd4>
					Task_03__GoTo_Next_Step;
     460:	80 91 3c 01 	lds	r24, 0x013C
     464:	8f 5f       	subi	r24, 0xFF	; 255
     466:	80 93 3c 01 	sts	0x013C, r24
				}

			break;
     46a:	3b c0       	rjmp	.+118    	; 0x4e2 <Task_03+0xd4>

		//################################################################################

		case 1 :
		{
				if (USART2_Vel == 'y'){
     46c:	80 91 dd 01 	lds	r24, 0x01DD
     470:	89 37       	cpi	r24, 0x79	; 121
     472:	31 f4       	brne	.+12     	; 0x480 <Task_03+0x72>
					Task_03__GoTo_Next_Step;
     474:	80 91 3c 01 	lds	r24, 0x013C
     478:	8f 5f       	subi	r24, 0xFF	; 255
     47a:	80 93 3c 01 	sts	0x013C, r24
					if(USART2_Vel != 'x'){
						Task_03__Task_Stop;
					}

				}
			break;
     47e:	33 c0       	rjmp	.+102    	; 0x4e6 <Task_03+0xd8>
		case 1 :
		{
				if (USART2_Vel == 'y'){
					Task_03__GoTo_Next_Step;
				}else{
					if(USART2_Vel != 'x'){
     480:	80 91 dd 01 	lds	r24, 0x01DD
     484:	88 37       	cpi	r24, 0x78	; 120
     486:	79 f1       	breq	.+94     	; 0x4e6 <Task_03+0xd8>
						Task_03__Task_Stop;
     488:	10 92 3c 01 	sts	0x013C, r1
					}

				}
			break;
     48c:	2c c0       	rjmp	.+88     	; 0x4e6 <Task_03+0xd8>
		}
		case 2 :
		{
				if (USART2_Vel == '1') {
     48e:	80 91 dd 01 	lds	r24, 0x01DD
     492:	81 33       	cpi	r24, 0x31	; 49
     494:	21 f4       	brne	.+8      	; 0x49e <Task_03+0x90>
					Task_03_Step = 3;
     496:	83 e0       	ldi	r24, 0x03	; 3
     498:	80 93 3c 01 	sts	0x013C, r24
					Task_03_Step = 4;
				} else {
					Task_03__Task_Stop;
				}

			break;
     49c:	25 c0       	rjmp	.+74     	; 0x4e8 <Task_03+0xda>
		}
		case 2 :
		{
				if (USART2_Vel == '1') {
					Task_03_Step = 3;
				} else if (USART2_Vel == '2') {
     49e:	80 91 dd 01 	lds	r24, 0x01DD
     4a2:	82 33       	cpi	r24, 0x32	; 50
     4a4:	21 f4       	brne	.+8      	; 0x4ae <Task_03+0xa0>
					Task_03_Step = 4;
     4a6:	84 e0       	ldi	r24, 0x04	; 4
     4a8:	80 93 3c 01 	sts	0x013C, r24
				} else {
					Task_03__Task_Stop;
				}

			break;
     4ac:	1d c0       	rjmp	.+58     	; 0x4e8 <Task_03+0xda>
				if (USART2_Vel == '1') {
					Task_03_Step = 3;
				} else if (USART2_Vel == '2') {
					Task_03_Step = 4;
				} else {
					Task_03__Task_Stop;
     4ae:	10 92 3c 01 	sts	0x013C, r1
				}

			break;
     4b2:	1a c0       	rjmp	.+52     	; 0x4e8 <Task_03+0xda>
		}
		case 3 :
		{

			Task_02__Task_Start;
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	80 93 3b 01 	sts	0x013B, r24
			Task_03__Task_Stop;
     4ba:	10 92 3c 01 	sts	0x013C, r1
			break;
     4be:	14 c0       	rjmp	.+40     	; 0x4e8 <Task_03+0xda>

		case 4 :
		{

			//UDR0 = USART2_Vel;
			SAVE = USART2_Vel;
     4c0:	80 91 dd 01 	lds	r24, 0x01DD
     4c4:	80 93 5b 01 	sts	0x015B, r24
			Task_04__Task_Start;
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	80 93 3d 01 	sts	0x013D, r24
			Task_03__Task_Stop;
     4ce:	10 92 3c 01 	sts	0x013C, r1

			//USART2_Waiting_For_Free ;
			//sprintf(USART2_buffer,"yyyyyyyyyyy \n\r");
			//USART2_Transmit();

			break;
     4d2:	0a c0       	rjmp	.+20     	; 0x4e8 <Task_03+0xda>
		}

		case 5 :
		{
			Task_03__Task_Stop;
     4d4:	10 92 3c 01 	sts	0x013C, r1
			break;
     4d8:	07 c0       	rjmp	.+14     	; 0x4e8 <Task_03+0xda>


		case 6 :
		{

			Task_03__Task_Stop;
     4da:	10 92 3c 01 	sts	0x013C, r1
			break;
     4de:	00 00       	nop
     4e0:	03 c0       	rjmp	.+6      	; 0x4e8 <Task_03+0xda>
		{
				if (USART2_Vel == 'x'){
					Task_03__GoTo_Next_Step;
				}

			break;
     4e2:	00 00       	nop
     4e4:	01 c0       	rjmp	.+2      	; 0x4e8 <Task_03+0xda>
					if(USART2_Vel != 'x'){
						Task_03__Task_Stop;
					}

				}
			break;
     4e6:	00 00       	nop




	}
}
     4e8:	df 91       	pop	r29
     4ea:	cf 91       	pop	r28
     4ec:	08 95       	ret

000004ee <Task_04>:

unsigned short a=0;


void Task_04(void)
{
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	cd b7       	in	r28, 0x3d	; 61
     4f4:	de b7       	in	r29, 0x3e	; 62



	switch(Task_04_Step )
     4f6:	80 91 3d 01 	lds	r24, 0x013D
     4fa:	88 2f       	mov	r24, r24
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	81 30       	cpi	r24, 0x01	; 1
     500:	91 05       	cpc	r25, r1
     502:	59 f0       	breq	.+22     	; 0x51a <Task_04+0x2c>
     504:	82 30       	cpi	r24, 0x02	; 2
     506:	91 05       	cpc	r25, r1
     508:	0c f4       	brge	.+2      	; 0x50c <Task_04+0x1e>
     50a:	51 c0       	rjmp	.+162    	; 0x5ae <Task_04+0xc0>
     50c:	82 30       	cpi	r24, 0x02	; 2
     50e:	91 05       	cpc	r25, r1
     510:	91 f0       	breq	.+36     	; 0x536 <Task_04+0x48>
     512:	83 30       	cpi	r24, 0x03	; 3
     514:	91 05       	cpc	r25, r1
     516:	81 f1       	breq	.+96     	; 0x578 <Task_04+0x8a>
     518:	4f c0       	rjmp	.+158    	; 0x5b8 <Task_04+0xca>
			//################################################################################

			case 1 :
			{

				a=0;
     51a:	10 92 3f 01 	sts	0x013F, r1
     51e:	10 92 3e 01 	sts	0x013E, r1
				Task_04__GoTo_Next_Step	;
     522:	80 91 3d 01 	lds	r24, 0x013D
     526:	8f 5f       	subi	r24, 0xFF	; 255
     528:	80 93 3d 01 	sts	0x013D, r24
				UDR0 = 0;
     52c:	8c e2       	ldi	r24, 0x2C	; 44
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	fc 01       	movw	r30, r24
     532:	10 82       	st	Z, r1


				//Task_04__Task_Stop;

				break;
     534:	41 c0       	rjmp	.+130    	; 0x5b8 <Task_04+0xca>
			}
			case 2 :
			{

				a++;
     536:	80 91 3e 01 	lds	r24, 0x013E
     53a:	90 91 3f 01 	lds	r25, 0x013F
     53e:	01 96       	adiw	r24, 0x01	; 1
     540:	90 93 3f 01 	sts	0x013F, r25
     544:	80 93 3e 01 	sts	0x013E, r24

				if (a == 500)
     548:	80 91 3e 01 	lds	r24, 0x013E
     54c:	90 91 3f 01 	lds	r25, 0x013F
     550:	84 3f       	cpi	r24, 0xF4	; 244
     552:	f1 e0       	ldi	r31, 0x01	; 1
     554:	9f 07       	cpc	r25, r31
     556:	69 f5       	brne	.+90     	; 0x5b2 <Task_04+0xc4>
				{
					UDR0 = SAVE;
     558:	8c e2       	ldi	r24, 0x2C	; 44
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	20 91 5b 01 	lds	r18, 0x015B
     560:	fc 01       	movw	r30, r24
     562:	20 83       	st	Z, r18
					a=0;
     564:	10 92 3f 01 	sts	0x013F, r1
     568:	10 92 3e 01 	sts	0x013E, r1
					Task_04__GoTo_Next_Step	;
     56c:	80 91 3d 01 	lds	r24, 0x013D
     570:	8f 5f       	subi	r24, 0xFF	; 255
     572:	80 93 3d 01 	sts	0x013D, r24
				}

				break;
     576:	1d c0       	rjmp	.+58     	; 0x5b2 <Task_04+0xc4>
			}
			case 3 :
			{
				a++;
     578:	80 91 3e 01 	lds	r24, 0x013E
     57c:	90 91 3f 01 	lds	r25, 0x013F
     580:	01 96       	adiw	r24, 0x01	; 1
     582:	90 93 3f 01 	sts	0x013F, r25
     586:	80 93 3e 01 	sts	0x013E, r24

				if (a == 30000)
     58a:	80 91 3e 01 	lds	r24, 0x013E
     58e:	90 91 3f 01 	lds	r25, 0x013F
     592:	80 33       	cpi	r24, 0x30	; 48
     594:	f5 e7       	ldi	r31, 0x75	; 117
     596:	9f 07       	cpc	r25, r31
     598:	71 f4       	brne	.+28     	; 0x5b6 <Task_04+0xc8>
				{
					UDR0 = 0x00;
     59a:	8c e2       	ldi	r24, 0x2C	; 44
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	fc 01       	movw	r30, r24
     5a0:	10 82       	st	Z, r1
					Task_04__Task_Stop;
     5a2:	10 92 3d 01 	sts	0x013D, r1
					Task_02__Task_Start;
     5a6:	81 e0       	ldi	r24, 0x01	; 1
     5a8:	80 93 3b 01 	sts	0x013B, r24
				}

				break;
     5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <Task_04+0xc8>

	{
			case 0 :
			{

				break;
     5ae:	00 00       	nop
     5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <Task_04+0xca>
					UDR0 = SAVE;
					a=0;
					Task_04__GoTo_Next_Step	;
				}

				break;
     5b2:	00 00       	nop
     5b4:	01 c0       	rjmp	.+2      	; 0x5b8 <Task_04+0xca>
					UDR0 = 0x00;
					Task_04__Task_Stop;
					Task_02__Task_Start;
				}

				break;
     5b6:	00 00       	nop





}
     5b8:	df 91       	pop	r29
     5ba:	cf 91       	pop	r28
     5bc:	08 95       	ret

000005be <Task_05>:
unsigned short j=0;
char bla = 0;


void Task_05(void)
{
     5be:	cf 93       	push	r28
     5c0:	df 93       	push	r29
     5c2:	cd b7       	in	r28, 0x3d	; 61
     5c4:	de b7       	in	r29, 0x3e	; 62



	switch(Task_05_Step )
     5c6:	80 91 40 01 	lds	r24, 0x0140
     5ca:	88 2f       	mov	r24, r24
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	82 30       	cpi	r24, 0x02	; 2
     5d0:	91 05       	cpc	r25, r1
     5d2:	e1 f0       	breq	.+56     	; 0x60c <Task_05+0x4e>
     5d4:	83 30       	cpi	r24, 0x03	; 3
     5d6:	91 05       	cpc	r25, r1
     5d8:	3c f4       	brge	.+14     	; 0x5e8 <Task_05+0x2a>
     5da:	00 97       	sbiw	r24, 0x00	; 0
     5dc:	09 f4       	brne	.+2      	; 0x5e0 <Task_05+0x22>
     5de:	c4 c0       	rjmp	.+392    	; 0x768 <Task_05+0x1aa>
     5e0:	81 30       	cpi	r24, 0x01	; 1
     5e2:	91 05       	cpc	r25, r1
     5e4:	51 f0       	breq	.+20     	; 0x5fa <Task_05+0x3c>
     5e6:	c7 c0       	rjmp	.+398    	; 0x776 <Task_05+0x1b8>
     5e8:	83 30       	cpi	r24, 0x03	; 3
     5ea:	91 05       	cpc	r25, r1
     5ec:	09 f4       	brne	.+2      	; 0x5f0 <Task_05+0x32>
     5ee:	71 c0       	rjmp	.+226    	; 0x6d2 <Task_05+0x114>
     5f0:	84 30       	cpi	r24, 0x04	; 4
     5f2:	91 05       	cpc	r25, r1
     5f4:	09 f4       	brne	.+2      	; 0x5f8 <Task_05+0x3a>
     5f6:	95 c0       	rjmp	.+298    	; 0x722 <Task_05+0x164>
     5f8:	be c0       	rjmp	.+380    	; 0x776 <Task_05+0x1b8>
			//################################################################################

			case 1 :
			{

				Task_02__Task_Start;
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	80 93 3b 01 	sts	0x013B, r24
				//USART2_Waiting_For_Free ;

				//sprintf(USART2_buffer,"xxxxxxxxxx \n\r");
				//USART2_Transmit();

				Task_05__GoTo_Next_Step	;
     600:	80 91 40 01 	lds	r24, 0x0140
     604:	8f 5f       	subi	r24, 0xFF	; 255
     606:	80 93 40 01 	sts	0x0140, r24

				//Task_05__Task_Stop;
				break;
     60a:	b5 c0       	rjmp	.+362    	; 0x776 <Task_05+0x1b8>

			}
			case 2 :
			{
				if(Task_02_Step  == 0)
     60c:	80 91 3b 01 	lds	r24, 0x013B
     610:	88 23       	and	r24, r24
     612:	09 f0       	breq	.+2      	; 0x616 <Task_05+0x58>
     614:	ab c0       	rjmp	.+342    	; 0x76c <Task_05+0x1ae>
				{



				     if(MyVel._long < 800 )
     616:	80 91 57 01 	lds	r24, 0x0157
     61a:	90 91 58 01 	lds	r25, 0x0158
     61e:	a0 91 59 01 	lds	r26, 0x0159
     622:	b0 91 5a 01 	lds	r27, 0x015A
     626:	80 32       	cpi	r24, 0x20	; 32
     628:	23 e0       	ldi	r18, 0x03	; 3
     62a:	92 07       	cpc	r25, r18
     62c:	a1 05       	cpc	r26, r1
     62e:	b1 05       	cpc	r27, r1
     630:	d0 f4       	brcc	.+52     	; 0x666 <Task_05+0xa8>
				     {


				    	 UDR0 = 0;
     632:	8c e2       	ldi	r24, 0x2C	; 44
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	fc 01       	movw	r30, r24
     638:	10 82       	st	Z, r1

						 USART2_Waiting_For_Free ;
     63a:	80 91 4e 01 	lds	r24, 0x014E
     63e:	88 23       	and	r24, r24
     640:	e1 f7       	brne	.-8      	; 0x63a <Task_05+0x7c>
						 sprintf(USART2_buffer,"y");
     642:	89 e7       	ldi	r24, 0x79	; 121
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	90 93 df 01 	sts	0x01DF, r25
     64a:	80 93 de 01 	sts	0x01DE, r24
						 USART2_Transmit();
     64e:	0e 94 a0 04 	call	0x940	; 0x940 <USART2_Transmit>
						 USART2_Waiting_For_Free ;
     652:	80 91 4e 01 	lds	r24, 0x014E
     656:	88 23       	and	r24, r24
     658:	e1 f7       	brne	.-8      	; 0x652 <Task_05+0x94>
						 //UDR0 = 0x58;
						 //Task_05__Task_Stop;
						 Task_05__GoTo_Next_Step;
     65a:	80 91 40 01 	lds	r24, 0x0140
     65e:	8f 5f       	subi	r24, 0xFF	; 255
     660:	80 93 40 01 	sts	0x0140, r24


				}


				break;
     664:	83 c0       	rjmp	.+262    	; 0x76c <Task_05+0x1ae>
						 Task_05__GoTo_Next_Step;
						 //Task_05__Task_Start;
					  }
				     else //if(MyVel._long > 900)
					 {
				    	 UDR0 = 0x18;
     666:	8c e2       	ldi	r24, 0x2C	; 44
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	28 e1       	ldi	r18, 0x18	; 24
     66c:	fc 01       	movw	r30, r24
     66e:	20 83       	st	Z, r18

				    	 USART2_Waiting_For_Free ;
     670:	80 91 4e 01 	lds	r24, 0x014E
     674:	88 23       	and	r24, r24
     676:	e1 f7       	brne	.-8      	; 0x670 <Task_05+0xb2>
				    	 sprintf(USART2_buffer," xxxxxxxx %lu\n\r", MyVel._long);
     678:	80 91 57 01 	lds	r24, 0x0157
     67c:	90 91 58 01 	lds	r25, 0x0158
     680:	a0 91 59 01 	lds	r26, 0x0159
     684:	b0 91 5a 01 	lds	r27, 0x015A
     688:	2b 2f       	mov	r18, r27
     68a:	2f 93       	push	r18
     68c:	2a 2f       	mov	r18, r26
     68e:	2f 93       	push	r18
     690:	29 2f       	mov	r18, r25
     692:	2f 93       	push	r18
     694:	8f 93       	push	r24
     696:	81 e2       	ldi	r24, 0x21	; 33
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	89 2f       	mov	r24, r25
     69c:	8f 93       	push	r24
     69e:	81 e2       	ldi	r24, 0x21	; 33
     6a0:	91 e0       	ldi	r25, 0x01	; 1
     6a2:	8f 93       	push	r24
     6a4:	8e ed       	ldi	r24, 0xDE	; 222
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	89 2f       	mov	r24, r25
     6aa:	8f 93       	push	r24
     6ac:	8e ed       	ldi	r24, 0xDE	; 222
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	8f 93       	push	r24
     6b2:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <sprintf>
     6b6:	8d b7       	in	r24, 0x3d	; 61
     6b8:	9e b7       	in	r25, 0x3e	; 62
     6ba:	08 96       	adiw	r24, 0x08	; 8
     6bc:	0f b6       	in	r0, 0x3f	; 63
     6be:	f8 94       	cli
     6c0:	de bf       	out	0x3e, r29	; 62
     6c2:	0f be       	out	0x3f, r0	; 63
     6c4:	cd bf       	out	0x3d, r28	; 61
				    	 USART2_Transmit();
     6c6:	0e 94 a0 04 	call	0x940	; 0x940 <USART2_Transmit>
				    	 //Task_05__Task_Stop;
				    	 //Task_05__GoTo_Next_Step;
				    	 Task_05__Task_Start;
     6ca:	81 e0       	ldi	r24, 0x01	; 1
     6cc:	80 93 40 01 	sts	0x0140, r24


				}


				break;
     6d0:	4d c0       	rjmp	.+154    	; 0x76c <Task_05+0x1ae>

			}
			case 3 :
			{

				bla++;
     6d2:	80 91 43 01 	lds	r24, 0x0143
     6d6:	8f 5f       	subi	r24, 0xFF	; 255
     6d8:	80 93 43 01 	sts	0x0143, r24
				if (bla == 100) {
     6dc:	80 91 43 01 	lds	r24, 0x0143
     6e0:	84 36       	cpi	r24, 0x64	; 100
     6e2:	31 f4       	brne	.+12     	; 0x6f0 <Task_05+0x132>
					UDR0 = 0;
     6e4:	8c e2       	ldi	r24, 0x2C	; 44
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	fc 01       	movw	r30, r24
     6ea:	10 82       	st	Z, r1
					bla = 0;
     6ec:	10 92 43 01 	sts	0x0143, r1
				}
				//USART2_Waiting_For_Free ;
				//sprintf(USART2_buffer,"g");
				//USART2_Transmit();

				j++;
     6f0:	80 91 41 01 	lds	r24, 0x0141
     6f4:	90 91 42 01 	lds	r25, 0x0142
     6f8:	01 96       	adiw	r24, 0x01	; 1
     6fa:	90 93 42 01 	sts	0x0142, r25
     6fe:	80 93 41 01 	sts	0x0141, r24
				//UDR0 = 0x00;
				UDR0 = 0x5A;
     702:	8c e2       	ldi	r24, 0x2C	; 44
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	2a e5       	ldi	r18, 0x5A	; 90
     708:	fc 01       	movw	r30, r24
     70a:	20 83       	st	Z, r18
				if (j==100)
     70c:	80 91 41 01 	lds	r24, 0x0141
     710:	90 91 42 01 	lds	r25, 0x0142
     714:	84 36       	cpi	r24, 0x64	; 100
     716:	91 05       	cpc	r25, r1
     718:	59 f5       	brne	.+86     	; 0x770 <Task_05+0x1b2>
				{
					Task_05__Task_Start;
     71a:	81 e0       	ldi	r24, 0x01	; 1
     71c:	80 93 40 01 	sts	0x0140, r24
				}

					break;
     720:	27 c0       	rjmp	.+78     	; 0x770 <Task_05+0x1b2>
			}
			case 4 :
			{
				UDR0=0x26;
     722:	8c e2       	ldi	r24, 0x2C	; 44
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	26 e2       	ldi	r18, 0x26	; 38
     728:	fc 01       	movw	r30, r24
     72a:	20 83       	st	Z, r18
				Task_02__Task_Start;
     72c:	81 e0       	ldi	r24, 0x01	; 1
     72e:	80 93 3b 01 	sts	0x013B, r24

				if(MyVel._long > 800)
     732:	80 91 57 01 	lds	r24, 0x0157
     736:	90 91 58 01 	lds	r25, 0x0158
     73a:	a0 91 59 01 	lds	r26, 0x0159
     73e:	b0 91 5a 01 	lds	r27, 0x015A
     742:	81 32       	cpi	r24, 0x21	; 33
     744:	f3 e0       	ldi	r31, 0x03	; 3
     746:	9f 07       	cpc	r25, r31
     748:	a1 05       	cpc	r26, r1
     74a:	b1 05       	cpc	r27, r1
     74c:	98 f0       	brcs	.+38     	; 0x774 <Task_05+0x1b6>
				{
						UDR0 = 0x00;
     74e:	8c e2       	ldi	r24, 0x2C	; 44
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	fc 01       	movw	r30, r24
     754:	10 82       	st	Z, r1
						UDR0 = 0x17;
     756:	8c e2       	ldi	r24, 0x2C	; 44
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	27 e1       	ldi	r18, 0x17	; 23
     75c:	fc 01       	movw	r30, r24
     75e:	20 83       	st	Z, r18
						Task_05__Task_Start;
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	80 93 40 01 	sts	0x0140, r24
				}
				//Task_05__Task_Start;


				break;
     766:	06 c0       	rjmp	.+12     	; 0x774 <Task_05+0x1b6>

	{
			case 0 :
			{

				break;
     768:	00 00       	nop
     76a:	05 c0       	rjmp	.+10     	; 0x776 <Task_05+0x1b8>


				}


				break;
     76c:	00 00       	nop
     76e:	03 c0       	rjmp	.+6      	; 0x776 <Task_05+0x1b8>
				if (j==100)
				{
					Task_05__Task_Start;
				}

					break;
     770:	00 00       	nop
     772:	01 c0       	rjmp	.+2      	; 0x776 <Task_05+0x1b8>
						Task_05__Task_Start;
				}
				//Task_05__Task_Start;


				break;
     774:	00 00       	nop





}
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	08 95       	ret

0000077c <Task_06>:
unsigned char Servo_Pos_Step     = 0;
unsigned short Servo_Motor_Delay = 0;
unsigned char  Servo_Motor_Dir   = 0;

void Task_06(void)
{
     77c:	cf 93       	push	r28
     77e:	df 93       	push	r29
     780:	cd b7       	in	r28, 0x3d	; 61
     782:	de b7       	in	r29, 0x3e	; 62



	switch(Task_06_Step )
     784:	80 91 44 01 	lds	r24, 0x0144
     788:	88 2f       	mov	r24, r24
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	82 30       	cpi	r24, 0x02	; 2
     78e:	91 05       	cpc	r25, r1
     790:	09 f4       	brne	.+2      	; 0x794 <Task_06+0x18>
     792:	69 c0       	rjmp	.+210    	; 0x866 <Task_06+0xea>
     794:	83 30       	cpi	r24, 0x03	; 3
     796:	91 05       	cpc	r25, r1
     798:	3c f4       	brge	.+14     	; 0x7a8 <Task_06+0x2c>
     79a:	00 97       	sbiw	r24, 0x00	; 0
     79c:	09 f4       	brne	.+2      	; 0x7a0 <Task_06+0x24>
     79e:	93 c0       	rjmp	.+294    	; 0x8c6 <Task_06+0x14a>
     7a0:	81 30       	cpi	r24, 0x01	; 1
     7a2:	91 05       	cpc	r25, r1
     7a4:	51 f0       	breq	.+20     	; 0x7ba <Task_06+0x3e>
     7a6:	94 c0       	rjmp	.+296    	; 0x8d0 <Task_06+0x154>
     7a8:	83 30       	cpi	r24, 0x03	; 3
     7aa:	91 05       	cpc	r25, r1
     7ac:	09 f4       	brne	.+2      	; 0x7b0 <Task_06+0x34>
     7ae:	72 c0       	rjmp	.+228    	; 0x894 <Task_06+0x118>
     7b0:	84 30       	cpi	r24, 0x04	; 4
     7b2:	91 05       	cpc	r25, r1
     7b4:	09 f4       	brne	.+2      	; 0x7b8 <Task_06+0x3c>
     7b6:	72 c0       	rjmp	.+228    	; 0x89c <Task_06+0x120>
     7b8:	8b c0       	rjmp	.+278    	; 0x8d0 <Task_06+0x154>
			//################################################################################

			case 1 :
			{

				switch (Servo_Pos_Step)
     7ba:	80 91 47 01 	lds	r24, 0x0147
     7be:	88 2f       	mov	r24, r24
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	81 30       	cpi	r24, 0x01	; 1
     7c4:	91 05       	cpc	r25, r1
     7c6:	69 f0       	breq	.+26     	; 0x7e2 <Task_06+0x66>
     7c8:	82 30       	cpi	r24, 0x02	; 2
     7ca:	91 05       	cpc	r25, r1
     7cc:	91 f0       	breq	.+36     	; 0x7f2 <Task_06+0x76>
     7ce:	00 97       	sbiw	r24, 0x00	; 0
     7d0:	c1 f4       	brne	.+48     	; 0x802 <Task_06+0x86>
				{
					case 0 :
					{
						Servo_L_45;
     7d2:	8a e4       	ldi	r24, 0x4A	; 74
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	20 e2       	ldi	r18, 0x20	; 32
     7d8:	33 e0       	ldi	r19, 0x03	; 3
     7da:	fc 01       	movw	r30, r24
     7dc:	31 83       	std	Z+1, r19	; 0x01
     7de:	20 83       	st	Z, r18
						break;
     7e0:	10 c0       	rjmp	.+32     	; 0x802 <Task_06+0x86>
					}
					case 1 :
					{
						Servo_Centre;
     7e2:	8a e4       	ldi	r24, 0x4A	; 74
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	24 e1       	ldi	r18, 0x14	; 20
     7e8:	35 e0       	ldi	r19, 0x05	; 5
     7ea:	fc 01       	movw	r30, r24
     7ec:	31 83       	std	Z+1, r19	; 0x01
     7ee:	20 83       	st	Z, r18
						break;
     7f0:	08 c0       	rjmp	.+16     	; 0x802 <Task_06+0x86>
					}
					case 2 :
					{
						Servo_R_45;
     7f2:	8a e4       	ldi	r24, 0x4A	; 74
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	28 e0       	ldi	r18, 0x08	; 8
     7f8:	37 e0       	ldi	r19, 0x07	; 7
     7fa:	fc 01       	movw	r30, r24
     7fc:	31 83       	std	Z+1, r19	; 0x01
     7fe:	20 83       	st	Z, r18
						break;
     800:	00 00       	nop
				}




				if(Servo_Motor_Dir==0)
     802:	80 91 4a 01 	lds	r24, 0x014A
     806:	88 23       	and	r24, r24
     808:	99 f4       	brne	.+38     	; 0x830 <Task_06+0xb4>
				{
					if(Servo_Pos_Step==2)
     80a:	80 91 47 01 	lds	r24, 0x0147
     80e:	82 30       	cpi	r24, 0x02	; 2
     810:	49 f4       	brne	.+18     	; 0x824 <Task_06+0xa8>
					{
						Servo_Motor_Dir =1;
     812:	81 e0       	ldi	r24, 0x01	; 1
     814:	80 93 4a 01 	sts	0x014A, r24
						Servo_Pos_Step--;
     818:	80 91 47 01 	lds	r24, 0x0147
     81c:	81 50       	subi	r24, 0x01	; 1
     81e:	80 93 47 01 	sts	0x0147, r24
     822:	17 c0       	rjmp	.+46     	; 0x852 <Task_06+0xd6>
					}
					else
					{
						Servo_Pos_Step++;
     824:	80 91 47 01 	lds	r24, 0x0147
     828:	8f 5f       	subi	r24, 0xFF	; 255
     82a:	80 93 47 01 	sts	0x0147, r24
     82e:	11 c0       	rjmp	.+34     	; 0x852 <Task_06+0xd6>
					}
				}
				else
				{

					if(Servo_Pos_Step==0)
     830:	80 91 47 01 	lds	r24, 0x0147
     834:	88 23       	and	r24, r24
     836:	41 f4       	brne	.+16     	; 0x848 <Task_06+0xcc>
					{
						Servo_Motor_Dir =0;
     838:	10 92 4a 01 	sts	0x014A, r1
						Servo_Pos_Step++;
     83c:	80 91 47 01 	lds	r24, 0x0147
     840:	8f 5f       	subi	r24, 0xFF	; 255
     842:	80 93 47 01 	sts	0x0147, r24
     846:	05 c0       	rjmp	.+10     	; 0x852 <Task_06+0xd6>
					}
					else
					{
						Servo_Pos_Step--;
     848:	80 91 47 01 	lds	r24, 0x0147
     84c:	81 50       	subi	r24, 0x01	; 1
     84e:	80 93 47 01 	sts	0x0147, r24
					}
				}



				Servo_Motor_Delay = 0;
     852:	10 92 49 01 	sts	0x0149, r1
     856:	10 92 48 01 	sts	0x0148, r1

				//OCR1A = 2100;//1430;//540;
				//b=0;
				Task_06__GoTo_Next_Step	;
     85a:	80 91 44 01 	lds	r24, 0x0144
     85e:	8f 5f       	subi	r24, 0xFF	; 255
     860:	80 93 44 01 	sts	0x0144, r24

				break;
     864:	35 c0       	rjmp	.+106    	; 0x8d0 <Task_06+0x154>

			}
			case 2 :
			{
				Servo_Motor_Delay++;
     866:	80 91 48 01 	lds	r24, 0x0148
     86a:	90 91 49 01 	lds	r25, 0x0149
     86e:	01 96       	adiw	r24, 0x01	; 1
     870:	90 93 49 01 	sts	0x0149, r25
     874:	80 93 48 01 	sts	0x0148, r24

				if(Servo_Motor_Delay == 50000)
     878:	80 91 48 01 	lds	r24, 0x0148
     87c:	90 91 49 01 	lds	r25, 0x0149
     880:	80 35       	cpi	r24, 0x50	; 80
     882:	f3 ec       	ldi	r31, 0xC3	; 195
     884:	9f 07       	cpc	r25, r31
     886:	09 f5       	brne	.+66     	; 0x8ca <Task_06+0x14e>
				{

					Task_06__GoTo_Next_Step	;
     888:	80 91 44 01 	lds	r24, 0x0144
     88c:	8f 5f       	subi	r24, 0xFF	; 255
     88e:	80 93 44 01 	sts	0x0144, r24

				}


				break;
     892:	1b c0       	rjmp	.+54     	; 0x8ca <Task_06+0x14e>


			}
			case 3 :
			{
				Task_06__Task_Start	;
     894:	81 e0       	ldi	r24, 0x01	; 1
     896:	80 93 44 01 	sts	0x0144, r24
				break;
     89a:	1a c0       	rjmp	.+52     	; 0x8d0 <Task_06+0x154>
			}
			case 4 :
			{
				b++;
     89c:	80 91 45 01 	lds	r24, 0x0145
     8a0:	90 91 46 01 	lds	r25, 0x0146
     8a4:	01 96       	adiw	r24, 0x01	; 1
     8a6:	90 93 46 01 	sts	0x0146, r25
     8aa:	80 93 45 01 	sts	0x0145, r24

				if(b  == 60000)
     8ae:	80 91 45 01 	lds	r24, 0x0145
     8b2:	90 91 46 01 	lds	r25, 0x0146
     8b6:	80 36       	cpi	r24, 0x60	; 96
     8b8:	2a ee       	ldi	r18, 0xEA	; 234
     8ba:	92 07       	cpc	r25, r18
     8bc:	41 f4       	brne	.+16     	; 0x8ce <Task_06+0x152>
				{

					Task_06__Task_Start	;
     8be:	81 e0       	ldi	r24, 0x01	; 1
     8c0:	80 93 44 01 	sts	0x0144, r24

				}


				break;
     8c4:	04 c0       	rjmp	.+8      	; 0x8ce <Task_06+0x152>

	{
			case 0 :
			{

				break;
     8c6:	00 00       	nop
     8c8:	03 c0       	rjmp	.+6      	; 0x8d0 <Task_06+0x154>
					Task_06__GoTo_Next_Step	;

				}


				break;
     8ca:	00 00       	nop
     8cc:	01 c0       	rjmp	.+2      	; 0x8d0 <Task_06+0x154>
					Task_06__Task_Start	;

				}


				break;
     8ce:	00 00       	nop





}
     8d0:	df 91       	pop	r29
     8d2:	cf 91       	pop	r28
     8d4:	08 95       	ret

000008d6 <USART_Init>:


//###################################################################

void USART_Init()
{
     8d6:	cf 93       	push	r28
     8d8:	df 93       	push	r29
     8da:	cd b7       	in	r28, 0x3d	; 61
     8dc:	de b7       	in	r29, 0x3e	; 62
	UBRR0L= UBRRVAL; 					//	Set baud rate, low byte
     8de:	89 e2       	ldi	r24, 0x29	; 41
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	2f e2       	ldi	r18, 0x2F	; 47
     8e4:	fc 01       	movw	r30, r24
     8e6:	20 83       	st	Z, r18
	UBRR0H=(UBRRVAL>>8);				//	Set baud rate, high byte
     8e8:	80 e9       	ldi	r24, 0x90	; 144
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	fc 01       	movw	r30, r24
     8ee:	10 82       	st	Z, r1

	UCSR0C=(0<<UMSEL0)|					//
     8f0:	85 e9       	ldi	r24, 0x95	; 149
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	26 e0       	ldi	r18, 0x06	; 6
     8f6:	fc 01       	movw	r30, r24
     8f8:	20 83       	st	Z, r18
		  (0<<UPM00) |					//
		  (0<<USBS0) |					//
		  (1<<UCSZ01)|					//
		  (1<<UCSZ00)|					//
		  (0<<UCPOL0);					//
	UCSR0B=(0<<RXEN) |					//	Enable USART Receiver
     8fa:	8a e2       	ldi	r24, 0x2A	; 42
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	28 e0       	ldi	r18, 0x08	; 8
     900:	fc 01       	movw	r30, r24
     902:	20 83       	st	Z, r18
	      (1<<TXEN) |					//	Enable USART Transmitter
		  (0<<RXCIE)|					//	Enable USART Interrupt on receive complete
		  (0<<TXCIE);

	//sei();
}
     904:	df 91       	pop	r29
     906:	cf 91       	pop	r28
     908:	08 95       	ret

0000090a <USART2_Init>:


//###################################################################

void USART2_Init()
{
     90a:	cf 93       	push	r28
     90c:	df 93       	push	r29
     90e:	cd b7       	in	r28, 0x3d	; 61
     910:	de b7       	in	r29, 0x3e	; 62
	UBRR1L= UBRRVAL2; 					//	Set baud rate, low byte
     912:	89 e9       	ldi	r24, 0x99	; 153
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	2f e2       	ldi	r18, 0x2F	; 47
     918:	fc 01       	movw	r30, r24
     91a:	20 83       	st	Z, r18
	UBRR1H=(UBRRVAL2>>8);				//	Set baud rate, high byte
     91c:	88 e9       	ldi	r24, 0x98	; 152
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	fc 01       	movw	r30, r24
     922:	10 82       	st	Z, r1

	UCSR1C=(0<<UMSEL1)|					//
     924:	8d e9       	ldi	r24, 0x9D	; 157
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	26 e0       	ldi	r18, 0x06	; 6
     92a:	fc 01       	movw	r30, r24
     92c:	20 83       	st	Z, r18
		  (0<<UPM10) |					//
		  (0<<USBS1) |					//
		  (1<<UCSZ11)|					//
		  (1<<UCSZ10)|					//
		  (0<<UCPOL1);					//
	UCSR1B=(1<<RXEN1) |					//	Enable USART Receiver
     92e:	8a e9       	ldi	r24, 0x9A	; 154
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	28 ed       	ldi	r18, 0xD8	; 216
     934:	fc 01       	movw	r30, r24
     936:	20 83       	st	Z, r18
	      (1<<TXEN1) |					//	Enable USART Transmitter
		  (1<<RXCIE1)|					//	Enable USART Interrupt on receive complete
		  (1<<TXCIE1);

	sei();
     938:	78 94       	sei
}
     93a:	df 91       	pop	r29
     93c:	cf 91       	pop	r28
     93e:	08 95       	ret

00000940 <USART2_Transmit>:

void USART2_Transmit()
{
     940:	cf 93       	push	r28
     942:	df 93       	push	r29
     944:	cd b7       	in	r28, 0x3d	; 61
     946:	de b7       	in	r29, 0x3e	; 62
	USART2_Positone = 0 ;
     948:	10 92 4d 01 	sts	0x014D, r1
	if (USART2_buffer[USART2_Positone]!=0)
     94c:	80 91 4d 01 	lds	r24, 0x014D
     950:	88 2f       	mov	r24, r24
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	82 52       	subi	r24, 0x22	; 34
     956:	9e 4f       	sbci	r25, 0xFE	; 254
     958:	fc 01       	movw	r30, r24
     95a:	80 81       	ld	r24, Z
     95c:	88 23       	and	r24, r24
     95e:	81 f0       	breq	.+32     	; 0x980 <USART2_Transmit+0x40>
	{
		USART2_Busy = 1 ;
     960:	81 e0       	ldi	r24, 0x01	; 1
     962:	80 93 4e 01 	sts	0x014E, r24
		UDR1=USART2_buffer[USART2_Positone];
     966:	8c e9       	ldi	r24, 0x9C	; 156
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	20 91 4d 01 	lds	r18, 0x014D
     96e:	22 2f       	mov	r18, r18
     970:	30 e0       	ldi	r19, 0x00	; 0
     972:	22 52       	subi	r18, 0x22	; 34
     974:	3e 4f       	sbci	r19, 0xFE	; 254
     976:	f9 01       	movw	r30, r18
     978:	20 81       	ld	r18, Z
     97a:	fc 01       	movw	r30, r24
     97c:	20 83       	st	Z, r18
     97e:	02 c0       	rjmp	.+4      	; 0x984 <USART2_Transmit+0x44>
	} else {
		USART2_Busy = 0 ;
     980:	10 92 4e 01 	sts	0x014E, r1
	}
}
     984:	df 91       	pop	r29
     986:	cf 91       	pop	r28
     988:	08 95       	ret

0000098a <__vector_32>:

ISR(USART1_TX_vect)
{
     98a:	1f 92       	push	r1
     98c:	0f 92       	push	r0
     98e:	00 90 5f 00 	lds	r0, 0x005F
     992:	0f 92       	push	r0
     994:	11 24       	eor	r1, r1
     996:	00 90 5b 00 	lds	r0, 0x005B
     99a:	0f 92       	push	r0
     99c:	10 92 5b 00 	sts	0x005B, r1
     9a0:	2f 93       	push	r18
     9a2:	3f 93       	push	r19
     9a4:	8f 93       	push	r24
     9a6:	9f 93       	push	r25
     9a8:	ef 93       	push	r30
     9aa:	ff 93       	push	r31
     9ac:	cf 93       	push	r28
     9ae:	df 93       	push	r29
     9b0:	cd b7       	in	r28, 0x3d	; 61
     9b2:	de b7       	in	r29, 0x3e	; 62
	USART2_Positone ++;
     9b4:	80 91 4d 01 	lds	r24, 0x014D
     9b8:	8f 5f       	subi	r24, 0xFF	; 255
     9ba:	80 93 4d 01 	sts	0x014D, r24
	if (USART2_buffer[USART2_Positone]!=0)  {
     9be:	80 91 4d 01 	lds	r24, 0x014D
     9c2:	88 2f       	mov	r24, r24
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	82 52       	subi	r24, 0x22	; 34
     9c8:	9e 4f       	sbci	r25, 0xFE	; 254
     9ca:	fc 01       	movw	r30, r24
     9cc:	80 81       	ld	r24, Z
     9ce:	88 23       	and	r24, r24
     9d0:	69 f0       	breq	.+26     	; 0x9ec <__vector_32+0x62>
		UDR1=USART2_buffer[USART2_Positone];
     9d2:	8c e9       	ldi	r24, 0x9C	; 156
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	20 91 4d 01 	lds	r18, 0x014D
     9da:	22 2f       	mov	r18, r18
     9dc:	30 e0       	ldi	r19, 0x00	; 0
     9de:	22 52       	subi	r18, 0x22	; 34
     9e0:	3e 4f       	sbci	r19, 0xFE	; 254
     9e2:	f9 01       	movw	r30, r18
     9e4:	20 81       	ld	r18, Z
     9e6:	fc 01       	movw	r30, r24
     9e8:	20 83       	st	Z, r18
     9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <__vector_32+0x66>
	} else {
		USART2_Busy = 0;
     9ec:	10 92 4e 01 	sts	0x014E, r1
	}
}
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	ff 91       	pop	r31
     9f6:	ef 91       	pop	r30
     9f8:	9f 91       	pop	r25
     9fa:	8f 91       	pop	r24
     9fc:	3f 91       	pop	r19
     9fe:	2f 91       	pop	r18
     a00:	0f 90       	pop	r0
     a02:	00 92 5b 00 	sts	0x005B, r0
     a06:	0f 90       	pop	r0
     a08:	00 92 5f 00 	sts	0x005F, r0
     a0c:	0f 90       	pop	r0
     a0e:	1f 90       	pop	r1
     a10:	18 95       	reti

00000a12 <__vector_30>:

ISR(USART1_RX_vect) {
     a12:	1f 92       	push	r1
     a14:	0f 92       	push	r0
     a16:	00 90 5f 00 	lds	r0, 0x005F
     a1a:	0f 92       	push	r0
     a1c:	11 24       	eor	r1, r1
     a1e:	00 90 5b 00 	lds	r0, 0x005B
     a22:	0f 92       	push	r0
     a24:	10 92 5b 00 	sts	0x005B, r1
     a28:	2f 93       	push	r18
     a2a:	3f 93       	push	r19
     a2c:	4f 93       	push	r20
     a2e:	5f 93       	push	r21
     a30:	6f 93       	push	r22
     a32:	7f 93       	push	r23
     a34:	8f 93       	push	r24
     a36:	9f 93       	push	r25
     a38:	af 93       	push	r26
     a3a:	bf 93       	push	r27
     a3c:	ef 93       	push	r30
     a3e:	ff 93       	push	r31
     a40:	cf 93       	push	r28
     a42:	df 93       	push	r29
     a44:	cd b7       	in	r28, 0x3d	; 61
     a46:	de b7       	in	r29, 0x3e	; 62

	USART2_Vel = UDR1;
     a48:	8c e9       	ldi	r24, 0x9C	; 156
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	fc 01       	movw	r30, r24
     a4e:	80 81       	ld	r24, Z
     a50:	80 93 dd 01 	sts	0x01DD, r24
	Task_03();
     a54:	0e 94 07 02 	call	0x40e	; 0x40e <Task_03>

}
     a58:	df 91       	pop	r29
     a5a:	cf 91       	pop	r28
     a5c:	ff 91       	pop	r31
     a5e:	ef 91       	pop	r30
     a60:	bf 91       	pop	r27
     a62:	af 91       	pop	r26
     a64:	9f 91       	pop	r25
     a66:	8f 91       	pop	r24
     a68:	7f 91       	pop	r23
     a6a:	6f 91       	pop	r22
     a6c:	5f 91       	pop	r21
     a6e:	4f 91       	pop	r20
     a70:	3f 91       	pop	r19
     a72:	2f 91       	pop	r18
     a74:	0f 90       	pop	r0
     a76:	00 92 5b 00 	sts	0x005B, r0
     a7a:	0f 90       	pop	r0
     a7c:	00 92 5f 00 	sts	0x005F, r0
     a80:	0f 90       	pop	r0
     a82:	1f 90       	pop	r1
     a84:	18 95       	reti

00000a86 <main>:
#include "ROOT.h"
#include <util/delay.h>
#define DD_SERVO_Out			DDRB |=  (1 << 5);


int main(void) {
     a86:	cf 93       	push	r28
     a88:	df 93       	push	r29
     a8a:	00 d0       	rcall	.+0      	; 0xa8c <main+0x6>
     a8c:	cd b7       	in	r28, 0x3d	; 61
     a8e:	de b7       	in	r29, 0x3e	; 62

	DD_SERVO_Out;
     a90:	87 e3       	ldi	r24, 0x37	; 55
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	27 e3       	ldi	r18, 0x37	; 55
     a96:	30 e0       	ldi	r19, 0x00	; 0
     a98:	f9 01       	movw	r30, r18
     a9a:	20 81       	ld	r18, Z
     a9c:	20 62       	ori	r18, 0x20	; 32
     a9e:	fc 01       	movw	r30, r24
     aa0:	20 83       	st	Z, r18

	OCR1AH = 0x05;
     aa2:	8b e4       	ldi	r24, 0x4B	; 75
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	25 e0       	ldi	r18, 0x05	; 5
     aa8:	fc 01       	movw	r30, r24
     aaa:	20 83       	st	Z, r18
	OCR1AL = 0xDC;
     aac:	8a e4       	ldi	r24, 0x4A	; 74
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	2c ed       	ldi	r18, 0xDC	; 220
     ab2:	fc 01       	movw	r30, r24
     ab4:	20 83       	st	Z, r18
	ICR1H = 0xFF;
     ab6:	87 e4       	ldi	r24, 0x47	; 71
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	2f ef       	ldi	r18, 0xFF	; 255
     abc:	fc 01       	movw	r30, r24
     abe:	20 83       	st	Z, r18
	ICR1L = 0xFF;
     ac0:	86 e4       	ldi	r24, 0x46	; 70
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	2f ef       	ldi	r18, 0xFF	; 255
     ac6:	fc 01       	movw	r30, r24
     ac8:	20 83       	st	Z, r18
	TCCR1C =0;
     aca:	8a e7       	ldi	r24, 0x7A	; 122
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	fc 01       	movw	r30, r24
     ad0:	10 82       	st	Z, r1
	TCCR1A = 0x82;
     ad2:	8f e4       	ldi	r24, 0x4F	; 79
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	22 e8       	ldi	r18, 0x82	; 130
     ad8:	fc 01       	movw	r30, r24
     ada:	20 83       	st	Z, r18
	TCCR1B = 0x1A;
     adc:	8e e4       	ldi	r24, 0x4E	; 78
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	2a e1       	ldi	r18, 0x1A	; 26
     ae2:	fc 01       	movw	r30, r24
     ae4:	20 83       	st	Z, r18



	int xxx=0;
     ae6:	1a 82       	std	Y+2, r1	; 0x02
     ae8:	19 82       	std	Y+1, r1	; 0x01

	gamura_init();
     aea:	0e 94 13 01 	call	0x226	; 0x226 <gamura_init>
	USART_Init();
     aee:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <USART_Init>
	USART2_Init();
     af2:	0e 94 85 04 	call	0x90a	; 0x90a <USART2_Init>

	 Task_01__Task_Stop;
     af6:	10 92 3a 01 	sts	0x013A, r1
	 Task_02__Task_Stop;
     afa:	10 92 3b 01 	sts	0x013B, r1
	 //Task_02__Task_Start;
	 Task_03__Task_Stop;
     afe:	10 92 3c 01 	sts	0x013C, r1
	 Task_04__Task_Stop;
     b02:	10 92 3d 01 	sts	0x013D, r1
	 Task_05__Task_Stop;
     b06:	10 92 40 01 	sts	0x0140, r1
	 Task_06__Task_Start;
     b0a:	81 e0       	ldi	r24, 0x01	; 1
     b0c:	80 93 44 01 	sts	0x0144, r24
	while (1) {

		Task_02();
     b10:	0e 94 aa 00 	call	0x154	; 0x154 <Task_02>
		Task_01();
     b14:	0e 94 67 00 	call	0xce	; 0xce <Task_01>
		//Task_04();
		Task_05();
     b18:	0e 94 df 02 	call	0x5be	; 0x5be <Task_05>
		Task_06();
     b1c:	0e 94 be 03 	call	0x77c	; 0x77c <Task_06>
		//Task_03();
	}
     b20:	f7 cf       	rjmp	.-18     	; 0xb10 <main+0x8a>

00000b22 <__fixunssfsi>:
     b22:	cf 92       	push	r12
     b24:	df 92       	push	r13
     b26:	ef 92       	push	r14
     b28:	ff 92       	push	r15
     b2a:	0f 93       	push	r16
     b2c:	1f 93       	push	r17
     b2e:	6b 01       	movw	r12, r22
     b30:	7c 01       	movw	r14, r24
     b32:	20 e0       	ldi	r18, 0x00	; 0
     b34:	30 e0       	ldi	r19, 0x00	; 0
     b36:	40 e0       	ldi	r20, 0x00	; 0
     b38:	5f e4       	ldi	r21, 0x4F	; 79
     b3a:	0e 94 80 08 	call	0x1100	; 0x1100 <__gesf2>
     b3e:	87 fd       	sbrc	r24, 7
     b40:	0e c0       	rjmp	.+28     	; 0xb5e <__fixunssfsi+0x3c>
     b42:	20 e0       	ldi	r18, 0x00	; 0
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	40 e0       	ldi	r20, 0x00	; 0
     b48:	5f e4       	ldi	r21, 0x4F	; 79
     b4a:	c7 01       	movw	r24, r14
     b4c:	b6 01       	movw	r22, r12
     b4e:	0e 94 3c 07 	call	0xe78	; 0xe78 <__subsf3>
     b52:	0e 94 de 08 	call	0x11bc	; 0x11bc <__fixsfsi>
     b56:	8b 01       	movw	r16, r22
     b58:	9c 01       	movw	r18, r24
     b5a:	30 58       	subi	r19, 0x80	; 128
     b5c:	06 c0       	rjmp	.+12     	; 0xb6a <__fixunssfsi+0x48>
     b5e:	c7 01       	movw	r24, r14
     b60:	b6 01       	movw	r22, r12
     b62:	0e 94 de 08 	call	0x11bc	; 0x11bc <__fixsfsi>
     b66:	8b 01       	movw	r16, r22
     b68:	9c 01       	movw	r18, r24
     b6a:	b8 01       	movw	r22, r16
     b6c:	c9 01       	movw	r24, r18
     b6e:	1f 91       	pop	r17
     b70:	0f 91       	pop	r16
     b72:	ff 90       	pop	r15
     b74:	ef 90       	pop	r14
     b76:	df 90       	pop	r13
     b78:	cf 90       	pop	r12
     b7a:	08 95       	ret

00000b7c <_fpadd_parts>:
     b7c:	a0 e0       	ldi	r26, 0x00	; 0
     b7e:	b0 e0       	ldi	r27, 0x00	; 0
     b80:	e4 ec       	ldi	r30, 0xC4	; 196
     b82:	f5 e0       	ldi	r31, 0x05	; 5
     b84:	0c 94 c2 0a 	jmp	0x1584	; 0x1584 <__prologue_saves__+0x8>
     b88:	3c 01       	movw	r6, r24
     b8a:	cb 01       	movw	r24, r22
     b8c:	ea 01       	movw	r28, r20
     b8e:	d3 01       	movw	r26, r6
     b90:	2c 91       	ld	r18, X
     b92:	22 30       	cpi	r18, 0x02	; 2
     b94:	08 f4       	brcc	.+2      	; 0xb98 <_fpadd_parts+0x1c>
     b96:	3e c1       	rjmp	.+636    	; 0xe14 <_fpadd_parts+0x298>
     b98:	fb 01       	movw	r30, r22
     b9a:	30 81       	ld	r19, Z
     b9c:	32 30       	cpi	r19, 0x02	; 2
     b9e:	08 f4       	brcc	.+2      	; 0xba2 <_fpadd_parts+0x26>
     ba0:	36 c1       	rjmp	.+620    	; 0xe0e <_fpadd_parts+0x292>
     ba2:	24 30       	cpi	r18, 0x04	; 4
     ba4:	71 f4       	brne	.+28     	; 0xbc2 <_fpadd_parts+0x46>
     ba6:	34 30       	cpi	r19, 0x04	; 4
     ba8:	09 f0       	breq	.+2      	; 0xbac <_fpadd_parts+0x30>
     baa:	34 c1       	rjmp	.+616    	; 0xe14 <_fpadd_parts+0x298>
     bac:	11 96       	adiw	r26, 0x01	; 1
     bae:	2c 91       	ld	r18, X
     bb0:	81 81       	ldd	r24, Z+1	; 0x01
     bb2:	28 17       	cp	r18, r24
     bb4:	09 f4       	brne	.+2      	; 0xbb8 <_fpadd_parts+0x3c>
     bb6:	2e c1       	rjmp	.+604    	; 0xe14 <_fpadd_parts+0x298>
     bb8:	b1 e3       	ldi	r27, 0x31	; 49
     bba:	6b 2e       	mov	r6, r27
     bbc:	b1 e0       	ldi	r27, 0x01	; 1
     bbe:	7b 2e       	mov	r7, r27
     bc0:	29 c1       	rjmp	.+594    	; 0xe14 <_fpadd_parts+0x298>
     bc2:	34 30       	cpi	r19, 0x04	; 4
     bc4:	09 f4       	brne	.+2      	; 0xbc8 <_fpadd_parts+0x4c>
     bc6:	23 c1       	rjmp	.+582    	; 0xe0e <_fpadd_parts+0x292>
     bc8:	32 30       	cpi	r19, 0x02	; 2
     bca:	91 f4       	brne	.+36     	; 0xbf0 <_fpadd_parts+0x74>
     bcc:	22 30       	cpi	r18, 0x02	; 2
     bce:	09 f0       	breq	.+2      	; 0xbd2 <_fpadd_parts+0x56>
     bd0:	21 c1       	rjmp	.+578    	; 0xe14 <_fpadd_parts+0x298>
     bd2:	28 e0       	ldi	r18, 0x08	; 8
     bd4:	f3 01       	movw	r30, r6
     bd6:	da 01       	movw	r26, r20
     bd8:	01 90       	ld	r0, Z+
     bda:	0d 92       	st	X+, r0
     bdc:	2a 95       	dec	r18
     bde:	e1 f7       	brne	.-8      	; 0xbd8 <_fpadd_parts+0x5c>
     be0:	db 01       	movw	r26, r22
     be2:	11 96       	adiw	r26, 0x01	; 1
     be4:	8c 91       	ld	r24, X
     be6:	f3 01       	movw	r30, r6
     be8:	91 81       	ldd	r25, Z+1	; 0x01
     bea:	89 23       	and	r24, r25
     bec:	89 83       	std	Y+1, r24	; 0x01
     bee:	11 c1       	rjmp	.+546    	; 0xe12 <_fpadd_parts+0x296>
     bf0:	22 30       	cpi	r18, 0x02	; 2
     bf2:	09 f4       	brne	.+2      	; 0xbf6 <_fpadd_parts+0x7a>
     bf4:	0c c1       	rjmp	.+536    	; 0xe0e <_fpadd_parts+0x292>
     bf6:	d3 01       	movw	r26, r6
     bf8:	12 96       	adiw	r26, 0x02	; 2
     bfa:	ed 91       	ld	r30, X+
     bfc:	fc 91       	ld	r31, X
     bfe:	13 97       	sbiw	r26, 0x03	; 3
     c00:	db 01       	movw	r26, r22
     c02:	12 96       	adiw	r26, 0x02	; 2
     c04:	6d 91       	ld	r22, X+
     c06:	7c 91       	ld	r23, X
     c08:	13 97       	sbiw	r26, 0x03	; 3
     c0a:	d3 01       	movw	r26, r6
     c0c:	14 96       	adiw	r26, 0x04	; 4
     c0e:	0d 91       	ld	r16, X+
     c10:	1d 91       	ld	r17, X+
     c12:	2d 91       	ld	r18, X+
     c14:	3c 91       	ld	r19, X
     c16:	17 97       	sbiw	r26, 0x07	; 7
     c18:	dc 01       	movw	r26, r24
     c1a:	14 96       	adiw	r26, 0x04	; 4
     c1c:	cd 90       	ld	r12, X+
     c1e:	dd 90       	ld	r13, X+
     c20:	ed 90       	ld	r14, X+
     c22:	fc 90       	ld	r15, X
     c24:	17 97       	sbiw	r26, 0x07	; 7
     c26:	af 01       	movw	r20, r30
     c28:	46 1b       	sub	r20, r22
     c2a:	57 0b       	sbc	r21, r23
     c2c:	da 01       	movw	r26, r20
     c2e:	57 ff       	sbrs	r21, 7
     c30:	04 c0       	rjmp	.+8      	; 0xc3a <_fpadd_parts+0xbe>
     c32:	aa 27       	eor	r26, r26
     c34:	bb 27       	eor	r27, r27
     c36:	a4 1b       	sub	r26, r20
     c38:	b5 0b       	sbc	r27, r21
     c3a:	a0 32       	cpi	r26, 0x20	; 32
     c3c:	b1 05       	cpc	r27, r1
     c3e:	0c f0       	brlt	.+2      	; 0xc42 <_fpadd_parts+0xc6>
     c40:	65 c0       	rjmp	.+202    	; 0xd0c <_fpadd_parts+0x190>
     c42:	14 16       	cp	r1, r20
     c44:	15 06       	cpc	r1, r21
     c46:	7c f5       	brge	.+94     	; 0xca6 <_fpadd_parts+0x12a>
     c48:	b7 01       	movw	r22, r14
     c4a:	a6 01       	movw	r20, r12
     c4c:	0a 2e       	mov	r0, r26
     c4e:	04 c0       	rjmp	.+8      	; 0xc58 <_fpadd_parts+0xdc>
     c50:	76 95       	lsr	r23
     c52:	67 95       	ror	r22
     c54:	57 95       	ror	r21
     c56:	47 95       	ror	r20
     c58:	0a 94       	dec	r0
     c5a:	d2 f7       	brpl	.-12     	; 0xc50 <_fpadd_parts+0xd4>
     c5c:	81 2c       	mov	r8, r1
     c5e:	91 2c       	mov	r9, r1
     c60:	54 01       	movw	r10, r8
     c62:	83 94       	inc	r8
     c64:	04 c0       	rjmp	.+8      	; 0xc6e <_fpadd_parts+0xf2>
     c66:	88 0c       	add	r8, r8
     c68:	99 1c       	adc	r9, r9
     c6a:	aa 1c       	adc	r10, r10
     c6c:	bb 1c       	adc	r11, r11
     c6e:	aa 95       	dec	r26
     c70:	d2 f7       	brpl	.-12     	; 0xc66 <_fpadd_parts+0xea>
     c72:	b1 e0       	ldi	r27, 0x01	; 1
     c74:	8b 1a       	sub	r8, r27
     c76:	91 08       	sbc	r9, r1
     c78:	a1 08       	sbc	r10, r1
     c7a:	b1 08       	sbc	r11, r1
     c7c:	8c 20       	and	r8, r12
     c7e:	9d 20       	and	r9, r13
     c80:	ae 20       	and	r10, r14
     c82:	bf 20       	and	r11, r15
     c84:	c1 2c       	mov	r12, r1
     c86:	d1 2c       	mov	r13, r1
     c88:	76 01       	movw	r14, r12
     c8a:	c3 94       	inc	r12
     c8c:	81 14       	cp	r8, r1
     c8e:	91 04       	cpc	r9, r1
     c90:	a1 04       	cpc	r10, r1
     c92:	b1 04       	cpc	r11, r1
     c94:	19 f4       	brne	.+6      	; 0xc9c <_fpadd_parts+0x120>
     c96:	c1 2c       	mov	r12, r1
     c98:	d1 2c       	mov	r13, r1
     c9a:	76 01       	movw	r14, r12
     c9c:	c4 2a       	or	r12, r20
     c9e:	d5 2a       	or	r13, r21
     ca0:	e6 2a       	or	r14, r22
     ca2:	f7 2a       	or	r15, r23
     ca4:	3e c0       	rjmp	.+124    	; 0xd22 <_fpadd_parts+0x1a6>
     ca6:	45 2b       	or	r20, r21
     ca8:	e1 f1       	breq	.+120    	; 0xd22 <_fpadd_parts+0x1a6>
     caa:	ea 0f       	add	r30, r26
     cac:	fb 1f       	adc	r31, r27
     cae:	b9 01       	movw	r22, r18
     cb0:	a8 01       	movw	r20, r16
     cb2:	0a 2e       	mov	r0, r26
     cb4:	04 c0       	rjmp	.+8      	; 0xcbe <_fpadd_parts+0x142>
     cb6:	76 95       	lsr	r23
     cb8:	67 95       	ror	r22
     cba:	57 95       	ror	r21
     cbc:	47 95       	ror	r20
     cbe:	0a 94       	dec	r0
     cc0:	d2 f7       	brpl	.-12     	; 0xcb6 <_fpadd_parts+0x13a>
     cc2:	81 2c       	mov	r8, r1
     cc4:	91 2c       	mov	r9, r1
     cc6:	54 01       	movw	r10, r8
     cc8:	83 94       	inc	r8
     cca:	04 c0       	rjmp	.+8      	; 0xcd4 <_fpadd_parts+0x158>
     ccc:	88 0c       	add	r8, r8
     cce:	99 1c       	adc	r9, r9
     cd0:	aa 1c       	adc	r10, r10
     cd2:	bb 1c       	adc	r11, r11
     cd4:	aa 95       	dec	r26
     cd6:	d2 f7       	brpl	.-12     	; 0xccc <_fpadd_parts+0x150>
     cd8:	a1 e0       	ldi	r26, 0x01	; 1
     cda:	8a 1a       	sub	r8, r26
     cdc:	91 08       	sbc	r9, r1
     cde:	a1 08       	sbc	r10, r1
     ce0:	b1 08       	sbc	r11, r1
     ce2:	80 22       	and	r8, r16
     ce4:	91 22       	and	r9, r17
     ce6:	a2 22       	and	r10, r18
     ce8:	b3 22       	and	r11, r19
     cea:	01 e0       	ldi	r16, 0x01	; 1
     cec:	10 e0       	ldi	r17, 0x00	; 0
     cee:	20 e0       	ldi	r18, 0x00	; 0
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	81 14       	cp	r8, r1
     cf4:	91 04       	cpc	r9, r1
     cf6:	a1 04       	cpc	r10, r1
     cf8:	b1 04       	cpc	r11, r1
     cfa:	19 f4       	brne	.+6      	; 0xd02 <_fpadd_parts+0x186>
     cfc:	00 e0       	ldi	r16, 0x00	; 0
     cfe:	10 e0       	ldi	r17, 0x00	; 0
     d00:	98 01       	movw	r18, r16
     d02:	04 2b       	or	r16, r20
     d04:	15 2b       	or	r17, r21
     d06:	26 2b       	or	r18, r22
     d08:	37 2b       	or	r19, r23
     d0a:	0b c0       	rjmp	.+22     	; 0xd22 <_fpadd_parts+0x1a6>
     d0c:	6e 17       	cp	r22, r30
     d0e:	7f 07       	cpc	r23, r31
     d10:	24 f4       	brge	.+8      	; 0xd1a <_fpadd_parts+0x19e>
     d12:	c1 2c       	mov	r12, r1
     d14:	d1 2c       	mov	r13, r1
     d16:	76 01       	movw	r14, r12
     d18:	04 c0       	rjmp	.+8      	; 0xd22 <_fpadd_parts+0x1a6>
     d1a:	fb 01       	movw	r30, r22
     d1c:	00 e0       	ldi	r16, 0x00	; 0
     d1e:	10 e0       	ldi	r17, 0x00	; 0
     d20:	98 01       	movw	r18, r16
     d22:	d3 01       	movw	r26, r6
     d24:	11 96       	adiw	r26, 0x01	; 1
     d26:	4c 91       	ld	r20, X
     d28:	dc 01       	movw	r26, r24
     d2a:	11 96       	adiw	r26, 0x01	; 1
     d2c:	8c 91       	ld	r24, X
     d2e:	48 17       	cp	r20, r24
     d30:	09 f4       	brne	.+2      	; 0xd34 <_fpadd_parts+0x1b8>
     d32:	42 c0       	rjmp	.+132    	; 0xdb8 <_fpadd_parts+0x23c>
     d34:	44 23       	and	r20, r20
     d36:	49 f0       	breq	.+18     	; 0xd4a <_fpadd_parts+0x1ce>
     d38:	d7 01       	movw	r26, r14
     d3a:	c6 01       	movw	r24, r12
     d3c:	80 1b       	sub	r24, r16
     d3e:	91 0b       	sbc	r25, r17
     d40:	a2 0b       	sbc	r26, r18
     d42:	b3 0b       	sbc	r27, r19
     d44:	8c 01       	movw	r16, r24
     d46:	9d 01       	movw	r18, r26
     d48:	04 c0       	rjmp	.+8      	; 0xd52 <_fpadd_parts+0x1d6>
     d4a:	0c 19       	sub	r16, r12
     d4c:	1d 09       	sbc	r17, r13
     d4e:	2e 09       	sbc	r18, r14
     d50:	3f 09       	sbc	r19, r15
     d52:	37 fd       	sbrc	r19, 7
     d54:	04 c0       	rjmp	.+8      	; 0xd5e <_fpadd_parts+0x1e2>
     d56:	19 82       	std	Y+1, r1	; 0x01
     d58:	fb 83       	std	Y+3, r31	; 0x03
     d5a:	ea 83       	std	Y+2, r30	; 0x02
     d5c:	0b c0       	rjmp	.+22     	; 0xd74 <_fpadd_parts+0x1f8>
     d5e:	81 e0       	ldi	r24, 0x01	; 1
     d60:	89 83       	std	Y+1, r24	; 0x01
     d62:	fb 83       	std	Y+3, r31	; 0x03
     d64:	ea 83       	std	Y+2, r30	; 0x02
     d66:	30 95       	com	r19
     d68:	20 95       	com	r18
     d6a:	10 95       	com	r17
     d6c:	01 95       	neg	r16
     d6e:	1f 4f       	sbci	r17, 0xFF	; 255
     d70:	2f 4f       	sbci	r18, 0xFF	; 255
     d72:	3f 4f       	sbci	r19, 0xFF	; 255
     d74:	0c 83       	std	Y+4, r16	; 0x04
     d76:	1d 83       	std	Y+5, r17	; 0x05
     d78:	2e 83       	std	Y+6, r18	; 0x06
     d7a:	3f 83       	std	Y+7, r19	; 0x07
     d7c:	0d c0       	rjmp	.+26     	; 0xd98 <_fpadd_parts+0x21c>
     d7e:	88 0f       	add	r24, r24
     d80:	99 1f       	adc	r25, r25
     d82:	aa 1f       	adc	r26, r26
     d84:	bb 1f       	adc	r27, r27
     d86:	8c 83       	std	Y+4, r24	; 0x04
     d88:	9d 83       	std	Y+5, r25	; 0x05
     d8a:	ae 83       	std	Y+6, r26	; 0x06
     d8c:	bf 83       	std	Y+7, r27	; 0x07
     d8e:	8a 81       	ldd	r24, Y+2	; 0x02
     d90:	9b 81       	ldd	r25, Y+3	; 0x03
     d92:	01 97       	sbiw	r24, 0x01	; 1
     d94:	9b 83       	std	Y+3, r25	; 0x03
     d96:	8a 83       	std	Y+2, r24	; 0x02
     d98:	8c 81       	ldd	r24, Y+4	; 0x04
     d9a:	9d 81       	ldd	r25, Y+5	; 0x05
     d9c:	ae 81       	ldd	r26, Y+6	; 0x06
     d9e:	bf 81       	ldd	r27, Y+7	; 0x07
     da0:	8c 01       	movw	r16, r24
     da2:	9d 01       	movw	r18, r26
     da4:	01 50       	subi	r16, 0x01	; 1
     da6:	11 09       	sbc	r17, r1
     da8:	21 09       	sbc	r18, r1
     daa:	31 09       	sbc	r19, r1
     dac:	0f 3f       	cpi	r16, 0xFF	; 255
     dae:	1f 4f       	sbci	r17, 0xFF	; 255
     db0:	2f 4f       	sbci	r18, 0xFF	; 255
     db2:	3f 43       	sbci	r19, 0x3F	; 63
     db4:	20 f3       	brcs	.-56     	; 0xd7e <_fpadd_parts+0x202>
     db6:	0b c0       	rjmp	.+22     	; 0xdce <_fpadd_parts+0x252>
     db8:	49 83       	std	Y+1, r20	; 0x01
     dba:	fb 83       	std	Y+3, r31	; 0x03
     dbc:	ea 83       	std	Y+2, r30	; 0x02
     dbe:	0c 0d       	add	r16, r12
     dc0:	1d 1d       	adc	r17, r13
     dc2:	2e 1d       	adc	r18, r14
     dc4:	3f 1d       	adc	r19, r15
     dc6:	0c 83       	std	Y+4, r16	; 0x04
     dc8:	1d 83       	std	Y+5, r17	; 0x05
     dca:	2e 83       	std	Y+6, r18	; 0x06
     dcc:	3f 83       	std	Y+7, r19	; 0x07
     dce:	83 e0       	ldi	r24, 0x03	; 3
     dd0:	88 83       	st	Y, r24
     dd2:	0c 81       	ldd	r16, Y+4	; 0x04
     dd4:	1d 81       	ldd	r17, Y+5	; 0x05
     dd6:	2e 81       	ldd	r18, Y+6	; 0x06
     dd8:	3f 81       	ldd	r19, Y+7	; 0x07
     dda:	37 ff       	sbrs	r19, 7
     ddc:	1a c0       	rjmp	.+52     	; 0xe12 <_fpadd_parts+0x296>
     dde:	d9 01       	movw	r26, r18
     de0:	c8 01       	movw	r24, r16
     de2:	81 70       	andi	r24, 0x01	; 1
     de4:	99 27       	eor	r25, r25
     de6:	aa 27       	eor	r26, r26
     de8:	bb 27       	eor	r27, r27
     dea:	36 95       	lsr	r19
     dec:	27 95       	ror	r18
     dee:	17 95       	ror	r17
     df0:	07 95       	ror	r16
     df2:	80 2b       	or	r24, r16
     df4:	91 2b       	or	r25, r17
     df6:	a2 2b       	or	r26, r18
     df8:	b3 2b       	or	r27, r19
     dfa:	8c 83       	std	Y+4, r24	; 0x04
     dfc:	9d 83       	std	Y+5, r25	; 0x05
     dfe:	ae 83       	std	Y+6, r26	; 0x06
     e00:	bf 83       	std	Y+7, r27	; 0x07
     e02:	8a 81       	ldd	r24, Y+2	; 0x02
     e04:	9b 81       	ldd	r25, Y+3	; 0x03
     e06:	01 96       	adiw	r24, 0x01	; 1
     e08:	9b 83       	std	Y+3, r25	; 0x03
     e0a:	8a 83       	std	Y+2, r24	; 0x02
     e0c:	02 c0       	rjmp	.+4      	; 0xe12 <_fpadd_parts+0x296>
     e0e:	3c 01       	movw	r6, r24
     e10:	01 c0       	rjmp	.+2      	; 0xe14 <_fpadd_parts+0x298>
     e12:	3e 01       	movw	r6, r28
     e14:	c3 01       	movw	r24, r6
     e16:	cd b7       	in	r28, 0x3d	; 61
     e18:	de b7       	in	r29, 0x3e	; 62
     e1a:	ee e0       	ldi	r30, 0x0E	; 14
     e1c:	0c 94 de 0a 	jmp	0x15bc	; 0x15bc <__epilogue_restores__+0x8>

00000e20 <__addsf3>:
     e20:	a0 e2       	ldi	r26, 0x20	; 32
     e22:	b0 e0       	ldi	r27, 0x00	; 0
     e24:	e6 e1       	ldi	r30, 0x16	; 22
     e26:	f7 e0       	ldi	r31, 0x07	; 7
     e28:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x20>
     e2c:	6d 8f       	std	Y+29, r22	; 0x1d
     e2e:	7e 8f       	std	Y+30, r23	; 0x1e
     e30:	8f 8f       	std	Y+31, r24	; 0x1f
     e32:	98 a3       	std	Y+32, r25	; 0x20
     e34:	29 8f       	std	Y+25, r18	; 0x19
     e36:	3a 8f       	std	Y+26, r19	; 0x1a
     e38:	4b 8f       	std	Y+27, r20	; 0x1b
     e3a:	5c 8f       	std	Y+28, r21	; 0x1c
     e3c:	be 01       	movw	r22, r28
     e3e:	6f 5e       	subi	r22, 0xEF	; 239
     e40:	7f 4f       	sbci	r23, 0xFF	; 255
     e42:	ce 01       	movw	r24, r28
     e44:	4d 96       	adiw	r24, 0x1d	; 29
     e46:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
     e4a:	be 01       	movw	r22, r28
     e4c:	67 5f       	subi	r22, 0xF7	; 247
     e4e:	7f 4f       	sbci	r23, 0xFF	; 255
     e50:	ce 01       	movw	r24, r28
     e52:	49 96       	adiw	r24, 0x19	; 25
     e54:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
     e58:	ae 01       	movw	r20, r28
     e5a:	4f 5f       	subi	r20, 0xFF	; 255
     e5c:	5f 4f       	sbci	r21, 0xFF	; 255
     e5e:	be 01       	movw	r22, r28
     e60:	67 5f       	subi	r22, 0xF7	; 247
     e62:	7f 4f       	sbci	r23, 0xFF	; 255
     e64:	ce 01       	movw	r24, r28
     e66:	41 96       	adiw	r24, 0x11	; 17
     e68:	0e 94 be 05 	call	0xb7c	; 0xb7c <_fpadd_parts>
     e6c:	0e 94 2d 09 	call	0x125a	; 0x125a <__pack_f>
     e70:	a0 96       	adiw	r28, 0x20	; 32
     e72:	e2 e0       	ldi	r30, 0x02	; 2
     e74:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x20>

00000e78 <__subsf3>:
     e78:	a0 e2       	ldi	r26, 0x20	; 32
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	e2 e4       	ldi	r30, 0x42	; 66
     e7e:	f7 e0       	ldi	r31, 0x07	; 7
     e80:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x20>
     e84:	6d 8f       	std	Y+29, r22	; 0x1d
     e86:	7e 8f       	std	Y+30, r23	; 0x1e
     e88:	8f 8f       	std	Y+31, r24	; 0x1f
     e8a:	98 a3       	std	Y+32, r25	; 0x20
     e8c:	29 8f       	std	Y+25, r18	; 0x19
     e8e:	3a 8f       	std	Y+26, r19	; 0x1a
     e90:	4b 8f       	std	Y+27, r20	; 0x1b
     e92:	5c 8f       	std	Y+28, r21	; 0x1c
     e94:	be 01       	movw	r22, r28
     e96:	6f 5e       	subi	r22, 0xEF	; 239
     e98:	7f 4f       	sbci	r23, 0xFF	; 255
     e9a:	ce 01       	movw	r24, r28
     e9c:	4d 96       	adiw	r24, 0x1d	; 29
     e9e:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
     ea2:	be 01       	movw	r22, r28
     ea4:	67 5f       	subi	r22, 0xF7	; 247
     ea6:	7f 4f       	sbci	r23, 0xFF	; 255
     ea8:	ce 01       	movw	r24, r28
     eaa:	49 96       	adiw	r24, 0x19	; 25
     eac:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
     eb0:	8a 85       	ldd	r24, Y+10	; 0x0a
     eb2:	91 e0       	ldi	r25, 0x01	; 1
     eb4:	89 27       	eor	r24, r25
     eb6:	8a 87       	std	Y+10, r24	; 0x0a
     eb8:	ae 01       	movw	r20, r28
     eba:	4f 5f       	subi	r20, 0xFF	; 255
     ebc:	5f 4f       	sbci	r21, 0xFF	; 255
     ebe:	be 01       	movw	r22, r28
     ec0:	67 5f       	subi	r22, 0xF7	; 247
     ec2:	7f 4f       	sbci	r23, 0xFF	; 255
     ec4:	ce 01       	movw	r24, r28
     ec6:	41 96       	adiw	r24, 0x11	; 17
     ec8:	0e 94 be 05 	call	0xb7c	; 0xb7c <_fpadd_parts>
     ecc:	0e 94 2d 09 	call	0x125a	; 0x125a <__pack_f>
     ed0:	a0 96       	adiw	r28, 0x20	; 32
     ed2:	e2 e0       	ldi	r30, 0x02	; 2
     ed4:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x20>

00000ed8 <__mulsf3>:
     ed8:	a0 e2       	ldi	r26, 0x20	; 32
     eda:	b0 e0       	ldi	r27, 0x00	; 0
     edc:	e2 e7       	ldi	r30, 0x72	; 114
     ede:	f7 e0       	ldi	r31, 0x07	; 7
     ee0:	0c 94 c0 0a 	jmp	0x1580	; 0x1580 <__prologue_saves__+0x4>
     ee4:	6d 8f       	std	Y+29, r22	; 0x1d
     ee6:	7e 8f       	std	Y+30, r23	; 0x1e
     ee8:	8f 8f       	std	Y+31, r24	; 0x1f
     eea:	98 a3       	std	Y+32, r25	; 0x20
     eec:	29 8f       	std	Y+25, r18	; 0x19
     eee:	3a 8f       	std	Y+26, r19	; 0x1a
     ef0:	4b 8f       	std	Y+27, r20	; 0x1b
     ef2:	5c 8f       	std	Y+28, r21	; 0x1c
     ef4:	be 01       	movw	r22, r28
     ef6:	6f 5e       	subi	r22, 0xEF	; 239
     ef8:	7f 4f       	sbci	r23, 0xFF	; 255
     efa:	ce 01       	movw	r24, r28
     efc:	4d 96       	adiw	r24, 0x1d	; 29
     efe:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
     f02:	be 01       	movw	r22, r28
     f04:	67 5f       	subi	r22, 0xF7	; 247
     f06:	7f 4f       	sbci	r23, 0xFF	; 255
     f08:	ce 01       	movw	r24, r28
     f0a:	49 96       	adiw	r24, 0x19	; 25
     f0c:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
     f10:	99 89       	ldd	r25, Y+17	; 0x11
     f12:	92 30       	cpi	r25, 0x02	; 2
     f14:	08 f4       	brcc	.+2      	; 0xf18 <__mulsf3+0x40>
     f16:	12 c0       	rjmp	.+36     	; 0xf3c <__mulsf3+0x64>
     f18:	89 85       	ldd	r24, Y+9	; 0x09
     f1a:	82 30       	cpi	r24, 0x02	; 2
     f1c:	08 f4       	brcc	.+2      	; 0xf20 <__mulsf3+0x48>
     f1e:	1a c0       	rjmp	.+52     	; 0xf54 <__mulsf3+0x7c>
     f20:	94 30       	cpi	r25, 0x04	; 4
     f22:	21 f4       	brne	.+8      	; 0xf2c <__mulsf3+0x54>
     f24:	82 30       	cpi	r24, 0x02	; 2
     f26:	09 f4       	brne	.+2      	; 0xf2a <__mulsf3+0x52>
     f28:	b4 c0       	rjmp	.+360    	; 0x1092 <__mulsf3+0x1ba>
     f2a:	08 c0       	rjmp	.+16     	; 0xf3c <__mulsf3+0x64>
     f2c:	84 30       	cpi	r24, 0x04	; 4
     f2e:	21 f4       	brne	.+8      	; 0xf38 <__mulsf3+0x60>
     f30:	92 30       	cpi	r25, 0x02	; 2
     f32:	09 f4       	brne	.+2      	; 0xf36 <__mulsf3+0x5e>
     f34:	ae c0       	rjmp	.+348    	; 0x1092 <__mulsf3+0x1ba>
     f36:	0e c0       	rjmp	.+28     	; 0xf54 <__mulsf3+0x7c>
     f38:	92 30       	cpi	r25, 0x02	; 2
     f3a:	51 f4       	brne	.+20     	; 0xf50 <__mulsf3+0x78>
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	2a 89       	ldd	r18, Y+18	; 0x12
     f40:	9a 85       	ldd	r25, Y+10	; 0x0a
     f42:	29 13       	cpse	r18, r25
     f44:	01 c0       	rjmp	.+2      	; 0xf48 <__mulsf3+0x70>
     f46:	80 e0       	ldi	r24, 0x00	; 0
     f48:	8a 8b       	std	Y+18, r24	; 0x12
     f4a:	ce 01       	movw	r24, r28
     f4c:	41 96       	adiw	r24, 0x11	; 17
     f4e:	a3 c0       	rjmp	.+326    	; 0x1096 <__mulsf3+0x1be>
     f50:	82 30       	cpi	r24, 0x02	; 2
     f52:	51 f4       	brne	.+20     	; 0xf68 <__mulsf3+0x90>
     f54:	81 e0       	ldi	r24, 0x01	; 1
     f56:	2a 89       	ldd	r18, Y+18	; 0x12
     f58:	9a 85       	ldd	r25, Y+10	; 0x0a
     f5a:	29 13       	cpse	r18, r25
     f5c:	01 c0       	rjmp	.+2      	; 0xf60 <__mulsf3+0x88>
     f5e:	80 e0       	ldi	r24, 0x00	; 0
     f60:	8a 87       	std	Y+10, r24	; 0x0a
     f62:	ce 01       	movw	r24, r28
     f64:	09 96       	adiw	r24, 0x09	; 9
     f66:	97 c0       	rjmp	.+302    	; 0x1096 <__mulsf3+0x1be>
     f68:	8d 88       	ldd	r8, Y+21	; 0x15
     f6a:	9e 88       	ldd	r9, Y+22	; 0x16
     f6c:	af 88       	ldd	r10, Y+23	; 0x17
     f6e:	b8 8c       	ldd	r11, Y+24	; 0x18
     f70:	0d 85       	ldd	r16, Y+13	; 0x0d
     f72:	1e 85       	ldd	r17, Y+14	; 0x0e
     f74:	2f 85       	ldd	r18, Y+15	; 0x0f
     f76:	38 89       	ldd	r19, Y+16	; 0x10
     f78:	e0 e2       	ldi	r30, 0x20	; 32
     f7a:	f0 e0       	ldi	r31, 0x00	; 0
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	dc 01       	movw	r26, r24
     f82:	c1 2c       	mov	r12, r1
     f84:	d1 2c       	mov	r13, r1
     f86:	76 01       	movw	r14, r12
     f88:	40 e0       	ldi	r20, 0x00	; 0
     f8a:	50 e0       	ldi	r21, 0x00	; 0
     f8c:	ba 01       	movw	r22, r20
     f8e:	80 fe       	sbrs	r8, 0
     f90:	18 c0       	rjmp	.+48     	; 0xfc2 <__mulsf3+0xea>
     f92:	40 0f       	add	r20, r16
     f94:	51 1f       	adc	r21, r17
     f96:	62 1f       	adc	r22, r18
     f98:	73 1f       	adc	r23, r19
     f9a:	8c 0d       	add	r24, r12
     f9c:	9d 1d       	adc	r25, r13
     f9e:	ae 1d       	adc	r26, r14
     fa0:	bf 1d       	adc	r27, r15
     fa2:	41 2c       	mov	r4, r1
     fa4:	51 2c       	mov	r5, r1
     fa6:	32 01       	movw	r6, r4
     fa8:	43 94       	inc	r4
     faa:	40 17       	cp	r20, r16
     fac:	51 07       	cpc	r21, r17
     fae:	62 07       	cpc	r22, r18
     fb0:	73 07       	cpc	r23, r19
     fb2:	18 f0       	brcs	.+6      	; 0xfba <__mulsf3+0xe2>
     fb4:	41 2c       	mov	r4, r1
     fb6:	51 2c       	mov	r5, r1
     fb8:	32 01       	movw	r6, r4
     fba:	84 0d       	add	r24, r4
     fbc:	95 1d       	adc	r25, r5
     fbe:	a6 1d       	adc	r26, r6
     fc0:	b7 1d       	adc	r27, r7
     fc2:	cc 0c       	add	r12, r12
     fc4:	dd 1c       	adc	r13, r13
     fc6:	ee 1c       	adc	r14, r14
     fc8:	ff 1c       	adc	r15, r15
     fca:	37 ff       	sbrs	r19, 7
     fcc:	02 c0       	rjmp	.+4      	; 0xfd2 <__mulsf3+0xfa>
     fce:	68 94       	set
     fd0:	c0 f8       	bld	r12, 0
     fd2:	00 0f       	add	r16, r16
     fd4:	11 1f       	adc	r17, r17
     fd6:	22 1f       	adc	r18, r18
     fd8:	33 1f       	adc	r19, r19
     fda:	b6 94       	lsr	r11
     fdc:	a7 94       	ror	r10
     fde:	97 94       	ror	r9
     fe0:	87 94       	ror	r8
     fe2:	31 97       	sbiw	r30, 0x01	; 1
     fe4:	a1 f6       	brne	.-88     	; 0xf8e <__mulsf3+0xb6>
     fe6:	2b 89       	ldd	r18, Y+19	; 0x13
     fe8:	3c 89       	ldd	r19, Y+20	; 0x14
     fea:	eb 85       	ldd	r30, Y+11	; 0x0b
     fec:	fc 85       	ldd	r31, Y+12	; 0x0c
     fee:	2e 0f       	add	r18, r30
     ff0:	3f 1f       	adc	r19, r31
     ff2:	2e 5f       	subi	r18, 0xFE	; 254
     ff4:	3f 4f       	sbci	r19, 0xFF	; 255
     ff6:	3c 83       	std	Y+4, r19	; 0x04
     ff8:	2b 83       	std	Y+3, r18	; 0x03
     ffa:	21 e0       	ldi	r18, 0x01	; 1
     ffc:	ea 89       	ldd	r30, Y+18	; 0x12
     ffe:	3a 85       	ldd	r19, Y+10	; 0x0a
    1000:	e3 13       	cpse	r30, r19
    1002:	01 c0       	rjmp	.+2      	; 0x1006 <__mulsf3+0x12e>
    1004:	20 e0       	ldi	r18, 0x00	; 0
    1006:	2a 83       	std	Y+2, r18	; 0x02
    1008:	eb 81       	ldd	r30, Y+3	; 0x03
    100a:	fc 81       	ldd	r31, Y+4	; 0x04
    100c:	0c c0       	rjmp	.+24     	; 0x1026 <__mulsf3+0x14e>
    100e:	80 ff       	sbrs	r24, 0
    1010:	05 c0       	rjmp	.+10     	; 0x101c <__mulsf3+0x144>
    1012:	76 95       	lsr	r23
    1014:	67 95       	ror	r22
    1016:	57 95       	ror	r21
    1018:	47 95       	ror	r20
    101a:	70 68       	ori	r23, 0x80	; 128
    101c:	b6 95       	lsr	r27
    101e:	a7 95       	ror	r26
    1020:	97 95       	ror	r25
    1022:	87 95       	ror	r24
    1024:	31 96       	adiw	r30, 0x01	; 1
    1026:	b7 fd       	sbrc	r27, 7
    1028:	f2 cf       	rjmp	.-28     	; 0x100e <__mulsf3+0x136>
    102a:	9f 01       	movw	r18, r30
    102c:	0c c0       	rjmp	.+24     	; 0x1046 <__mulsf3+0x16e>
    102e:	88 0f       	add	r24, r24
    1030:	99 1f       	adc	r25, r25
    1032:	aa 1f       	adc	r26, r26
    1034:	bb 1f       	adc	r27, r27
    1036:	77 fd       	sbrc	r23, 7
    1038:	81 60       	ori	r24, 0x01	; 1
    103a:	44 0f       	add	r20, r20
    103c:	55 1f       	adc	r21, r21
    103e:	66 1f       	adc	r22, r22
    1040:	77 1f       	adc	r23, r23
    1042:	21 50       	subi	r18, 0x01	; 1
    1044:	31 09       	sbc	r19, r1
    1046:	00 97       	sbiw	r24, 0x00	; 0
    1048:	a1 05       	cpc	r26, r1
    104a:	e0 e4       	ldi	r30, 0x40	; 64
    104c:	be 07       	cpc	r27, r30
    104e:	78 f3       	brcs	.-34     	; 0x102e <__mulsf3+0x156>
    1050:	2b 83       	std	Y+3, r18	; 0x03
    1052:	3c 83       	std	Y+4, r19	; 0x04
    1054:	8c 01       	movw	r16, r24
    1056:	9d 01       	movw	r18, r26
    1058:	0f 77       	andi	r16, 0x7F	; 127
    105a:	11 27       	eor	r17, r17
    105c:	22 27       	eor	r18, r18
    105e:	33 27       	eor	r19, r19
    1060:	00 34       	cpi	r16, 0x40	; 64
    1062:	11 05       	cpc	r17, r1
    1064:	21 05       	cpc	r18, r1
    1066:	31 05       	cpc	r19, r1
    1068:	59 f4       	brne	.+22     	; 0x1080 <__mulsf3+0x1a8>
    106a:	87 fd       	sbrc	r24, 7
    106c:	09 c0       	rjmp	.+18     	; 0x1080 <__mulsf3+0x1a8>
    106e:	45 2b       	or	r20, r21
    1070:	46 2b       	or	r20, r22
    1072:	47 2b       	or	r20, r23
    1074:	29 f0       	breq	.+10     	; 0x1080 <__mulsf3+0x1a8>
    1076:	80 5c       	subi	r24, 0xC0	; 192
    1078:	9f 4f       	sbci	r25, 0xFF	; 255
    107a:	af 4f       	sbci	r26, 0xFF	; 255
    107c:	bf 4f       	sbci	r27, 0xFF	; 255
    107e:	80 78       	andi	r24, 0x80	; 128
    1080:	8d 83       	std	Y+5, r24	; 0x05
    1082:	9e 83       	std	Y+6, r25	; 0x06
    1084:	af 83       	std	Y+7, r26	; 0x07
    1086:	b8 87       	std	Y+8, r27	; 0x08
    1088:	83 e0       	ldi	r24, 0x03	; 3
    108a:	89 83       	std	Y+1, r24	; 0x01
    108c:	ce 01       	movw	r24, r28
    108e:	01 96       	adiw	r24, 0x01	; 1
    1090:	02 c0       	rjmp	.+4      	; 0x1096 <__mulsf3+0x1be>
    1092:	81 e3       	ldi	r24, 0x31	; 49
    1094:	91 e0       	ldi	r25, 0x01	; 1
    1096:	0e 94 2d 09 	call	0x125a	; 0x125a <__pack_f>
    109a:	a0 96       	adiw	r28, 0x20	; 32
    109c:	e0 e1       	ldi	r30, 0x10	; 16
    109e:	0c 94 dc 0a 	jmp	0x15b8	; 0x15b8 <__epilogue_restores__+0x4>

000010a2 <__gtsf2>:
    10a2:	a8 e1       	ldi	r26, 0x18	; 24
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	e7 e5       	ldi	r30, 0x57	; 87
    10a8:	f8 e0       	ldi	r31, 0x08	; 8
    10aa:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x20>
    10ae:	6d 8b       	std	Y+21, r22	; 0x15
    10b0:	7e 8b       	std	Y+22, r23	; 0x16
    10b2:	8f 8b       	std	Y+23, r24	; 0x17
    10b4:	98 8f       	std	Y+24, r25	; 0x18
    10b6:	29 8b       	std	Y+17, r18	; 0x11
    10b8:	3a 8b       	std	Y+18, r19	; 0x12
    10ba:	4b 8b       	std	Y+19, r20	; 0x13
    10bc:	5c 8b       	std	Y+20, r21	; 0x14
    10be:	be 01       	movw	r22, r28
    10c0:	67 5f       	subi	r22, 0xF7	; 247
    10c2:	7f 4f       	sbci	r23, 0xFF	; 255
    10c4:	ce 01       	movw	r24, r28
    10c6:	45 96       	adiw	r24, 0x15	; 21
    10c8:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
    10cc:	be 01       	movw	r22, r28
    10ce:	6f 5f       	subi	r22, 0xFF	; 255
    10d0:	7f 4f       	sbci	r23, 0xFF	; 255
    10d2:	ce 01       	movw	r24, r28
    10d4:	41 96       	adiw	r24, 0x11	; 17
    10d6:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
    10da:	89 85       	ldd	r24, Y+9	; 0x09
    10dc:	82 30       	cpi	r24, 0x02	; 2
    10de:	58 f0       	brcs	.+22     	; 0x10f6 <__gtsf2+0x54>
    10e0:	89 81       	ldd	r24, Y+1	; 0x01
    10e2:	82 30       	cpi	r24, 0x02	; 2
    10e4:	40 f0       	brcs	.+16     	; 0x10f6 <__gtsf2+0x54>
    10e6:	be 01       	movw	r22, r28
    10e8:	6f 5f       	subi	r22, 0xFF	; 255
    10ea:	7f 4f       	sbci	r23, 0xFF	; 255
    10ec:	ce 01       	movw	r24, r28
    10ee:	09 96       	adiw	r24, 0x09	; 9
    10f0:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <__fpcmp_parts_f>
    10f4:	01 c0       	rjmp	.+2      	; 0x10f8 <__gtsf2+0x56>
    10f6:	8f ef       	ldi	r24, 0xFF	; 255
    10f8:	68 96       	adiw	r28, 0x18	; 24
    10fa:	e2 e0       	ldi	r30, 0x02	; 2
    10fc:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x20>

00001100 <__gesf2>:
    1100:	a8 e1       	ldi	r26, 0x18	; 24
    1102:	b0 e0       	ldi	r27, 0x00	; 0
    1104:	e6 e8       	ldi	r30, 0x86	; 134
    1106:	f8 e0       	ldi	r31, 0x08	; 8
    1108:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x20>
    110c:	6d 8b       	std	Y+21, r22	; 0x15
    110e:	7e 8b       	std	Y+22, r23	; 0x16
    1110:	8f 8b       	std	Y+23, r24	; 0x17
    1112:	98 8f       	std	Y+24, r25	; 0x18
    1114:	29 8b       	std	Y+17, r18	; 0x11
    1116:	3a 8b       	std	Y+18, r19	; 0x12
    1118:	4b 8b       	std	Y+19, r20	; 0x13
    111a:	5c 8b       	std	Y+20, r21	; 0x14
    111c:	be 01       	movw	r22, r28
    111e:	67 5f       	subi	r22, 0xF7	; 247
    1120:	7f 4f       	sbci	r23, 0xFF	; 255
    1122:	ce 01       	movw	r24, r28
    1124:	45 96       	adiw	r24, 0x15	; 21
    1126:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
    112a:	be 01       	movw	r22, r28
    112c:	6f 5f       	subi	r22, 0xFF	; 255
    112e:	7f 4f       	sbci	r23, 0xFF	; 255
    1130:	ce 01       	movw	r24, r28
    1132:	41 96       	adiw	r24, 0x11	; 17
    1134:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
    1138:	89 85       	ldd	r24, Y+9	; 0x09
    113a:	82 30       	cpi	r24, 0x02	; 2
    113c:	58 f0       	brcs	.+22     	; 0x1154 <__gesf2+0x54>
    113e:	89 81       	ldd	r24, Y+1	; 0x01
    1140:	82 30       	cpi	r24, 0x02	; 2
    1142:	40 f0       	brcs	.+16     	; 0x1154 <__gesf2+0x54>
    1144:	be 01       	movw	r22, r28
    1146:	6f 5f       	subi	r22, 0xFF	; 255
    1148:	7f 4f       	sbci	r23, 0xFF	; 255
    114a:	ce 01       	movw	r24, r28
    114c:	09 96       	adiw	r24, 0x09	; 9
    114e:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <__fpcmp_parts_f>
    1152:	01 c0       	rjmp	.+2      	; 0x1156 <__gesf2+0x56>
    1154:	8f ef       	ldi	r24, 0xFF	; 255
    1156:	68 96       	adiw	r28, 0x18	; 24
    1158:	e2 e0       	ldi	r30, 0x02	; 2
    115a:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x20>

0000115e <__ltsf2>:
    115e:	a8 e1       	ldi	r26, 0x18	; 24
    1160:	b0 e0       	ldi	r27, 0x00	; 0
    1162:	e5 eb       	ldi	r30, 0xB5	; 181
    1164:	f8 e0       	ldi	r31, 0x08	; 8
    1166:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x20>
    116a:	6d 8b       	std	Y+21, r22	; 0x15
    116c:	7e 8b       	std	Y+22, r23	; 0x16
    116e:	8f 8b       	std	Y+23, r24	; 0x17
    1170:	98 8f       	std	Y+24, r25	; 0x18
    1172:	29 8b       	std	Y+17, r18	; 0x11
    1174:	3a 8b       	std	Y+18, r19	; 0x12
    1176:	4b 8b       	std	Y+19, r20	; 0x13
    1178:	5c 8b       	std	Y+20, r21	; 0x14
    117a:	be 01       	movw	r22, r28
    117c:	67 5f       	subi	r22, 0xF7	; 247
    117e:	7f 4f       	sbci	r23, 0xFF	; 255
    1180:	ce 01       	movw	r24, r28
    1182:	45 96       	adiw	r24, 0x15	; 21
    1184:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
    1188:	be 01       	movw	r22, r28
    118a:	6f 5f       	subi	r22, 0xFF	; 255
    118c:	7f 4f       	sbci	r23, 0xFF	; 255
    118e:	ce 01       	movw	r24, r28
    1190:	41 96       	adiw	r24, 0x11	; 17
    1192:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
    1196:	89 85       	ldd	r24, Y+9	; 0x09
    1198:	82 30       	cpi	r24, 0x02	; 2
    119a:	58 f0       	brcs	.+22     	; 0x11b2 <__ltsf2+0x54>
    119c:	89 81       	ldd	r24, Y+1	; 0x01
    119e:	82 30       	cpi	r24, 0x02	; 2
    11a0:	40 f0       	brcs	.+16     	; 0x11b2 <__ltsf2+0x54>
    11a2:	be 01       	movw	r22, r28
    11a4:	6f 5f       	subi	r22, 0xFF	; 255
    11a6:	7f 4f       	sbci	r23, 0xFF	; 255
    11a8:	ce 01       	movw	r24, r28
    11aa:	09 96       	adiw	r24, 0x09	; 9
    11ac:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <__fpcmp_parts_f>
    11b0:	01 c0       	rjmp	.+2      	; 0x11b4 <__ltsf2+0x56>
    11b2:	81 e0       	ldi	r24, 0x01	; 1
    11b4:	68 96       	adiw	r28, 0x18	; 24
    11b6:	e2 e0       	ldi	r30, 0x02	; 2
    11b8:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x20>

000011bc <__fixsfsi>:
    11bc:	ac e0       	ldi	r26, 0x0C	; 12
    11be:	b0 e0       	ldi	r27, 0x00	; 0
    11c0:	e4 ee       	ldi	r30, 0xE4	; 228
    11c2:	f8 e0       	ldi	r31, 0x08	; 8
    11c4:	0c 94 cc 0a 	jmp	0x1598	; 0x1598 <__prologue_saves__+0x1c>
    11c8:	69 87       	std	Y+9, r22	; 0x09
    11ca:	7a 87       	std	Y+10, r23	; 0x0a
    11cc:	8b 87       	std	Y+11, r24	; 0x0b
    11ce:	9c 87       	std	Y+12, r25	; 0x0c
    11d0:	be 01       	movw	r22, r28
    11d2:	6f 5f       	subi	r22, 0xFF	; 255
    11d4:	7f 4f       	sbci	r23, 0xFF	; 255
    11d6:	ce 01       	movw	r24, r28
    11d8:	09 96       	adiw	r24, 0x09	; 9
    11da:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__unpack_f>
    11de:	89 81       	ldd	r24, Y+1	; 0x01
    11e0:	82 30       	cpi	r24, 0x02	; 2
    11e2:	91 f1       	breq	.+100    	; 0x1248 <__fixsfsi+0x8c>
    11e4:	82 30       	cpi	r24, 0x02	; 2
    11e6:	80 f1       	brcs	.+96     	; 0x1248 <__fixsfsi+0x8c>
    11e8:	84 30       	cpi	r24, 0x04	; 4
    11ea:	41 f4       	brne	.+16     	; 0x11fc <__fixsfsi+0x40>
    11ec:	8a 81       	ldd	r24, Y+2	; 0x02
    11ee:	88 23       	and	r24, r24
    11f0:	31 f1       	breq	.+76     	; 0x123e <__fixsfsi+0x82>
    11f2:	00 e0       	ldi	r16, 0x00	; 0
    11f4:	10 e0       	ldi	r17, 0x00	; 0
    11f6:	20 e0       	ldi	r18, 0x00	; 0
    11f8:	30 e8       	ldi	r19, 0x80	; 128
    11fa:	29 c0       	rjmp	.+82     	; 0x124e <__fixsfsi+0x92>
    11fc:	2b 81       	ldd	r18, Y+3	; 0x03
    11fe:	3c 81       	ldd	r19, Y+4	; 0x04
    1200:	37 fd       	sbrc	r19, 7
    1202:	22 c0       	rjmp	.+68     	; 0x1248 <__fixsfsi+0x8c>
    1204:	2f 31       	cpi	r18, 0x1F	; 31
    1206:	31 05       	cpc	r19, r1
    1208:	8c f7       	brge	.-30     	; 0x11ec <__fixsfsi+0x30>
    120a:	8e e1       	ldi	r24, 0x1E	; 30
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	82 1b       	sub	r24, r18
    1210:	93 0b       	sbc	r25, r19
    1212:	0d 81       	ldd	r16, Y+5	; 0x05
    1214:	1e 81       	ldd	r17, Y+6	; 0x06
    1216:	2f 81       	ldd	r18, Y+7	; 0x07
    1218:	38 85       	ldd	r19, Y+8	; 0x08
    121a:	04 c0       	rjmp	.+8      	; 0x1224 <__fixsfsi+0x68>
    121c:	36 95       	lsr	r19
    121e:	27 95       	ror	r18
    1220:	17 95       	ror	r17
    1222:	07 95       	ror	r16
    1224:	8a 95       	dec	r24
    1226:	d2 f7       	brpl	.-12     	; 0x121c <__fixsfsi+0x60>
    1228:	8a 81       	ldd	r24, Y+2	; 0x02
    122a:	88 23       	and	r24, r24
    122c:	81 f0       	breq	.+32     	; 0x124e <__fixsfsi+0x92>
    122e:	30 95       	com	r19
    1230:	20 95       	com	r18
    1232:	10 95       	com	r17
    1234:	01 95       	neg	r16
    1236:	1f 4f       	sbci	r17, 0xFF	; 255
    1238:	2f 4f       	sbci	r18, 0xFF	; 255
    123a:	3f 4f       	sbci	r19, 0xFF	; 255
    123c:	08 c0       	rjmp	.+16     	; 0x124e <__fixsfsi+0x92>
    123e:	0f ef       	ldi	r16, 0xFF	; 255
    1240:	1f ef       	ldi	r17, 0xFF	; 255
    1242:	2f ef       	ldi	r18, 0xFF	; 255
    1244:	3f e7       	ldi	r19, 0x7F	; 127
    1246:	03 c0       	rjmp	.+6      	; 0x124e <__fixsfsi+0x92>
    1248:	00 e0       	ldi	r16, 0x00	; 0
    124a:	10 e0       	ldi	r17, 0x00	; 0
    124c:	98 01       	movw	r18, r16
    124e:	b8 01       	movw	r22, r16
    1250:	c9 01       	movw	r24, r18
    1252:	2c 96       	adiw	r28, 0x0c	; 12
    1254:	e4 e0       	ldi	r30, 0x04	; 4
    1256:	0c 94 e8 0a 	jmp	0x15d0	; 0x15d0 <__epilogue_restores__+0x1c>

0000125a <__pack_f>:
    125a:	0f 93       	push	r16
    125c:	1f 93       	push	r17
    125e:	cf 93       	push	r28
    1260:	fc 01       	movw	r30, r24
    1262:	44 81       	ldd	r20, Z+4	; 0x04
    1264:	55 81       	ldd	r21, Z+5	; 0x05
    1266:	66 81       	ldd	r22, Z+6	; 0x06
    1268:	77 81       	ldd	r23, Z+7	; 0x07
    126a:	c1 81       	ldd	r28, Z+1	; 0x01
    126c:	80 81       	ld	r24, Z
    126e:	82 30       	cpi	r24, 0x02	; 2
    1270:	20 f4       	brcc	.+8      	; 0x127a <__pack_f+0x20>
    1272:	60 61       	ori	r22, 0x10	; 16
    1274:	8f ef       	ldi	r24, 0xFF	; 255
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	a3 c0       	rjmp	.+326    	; 0x13c0 <__pack_f+0x166>
    127a:	84 30       	cpi	r24, 0x04	; 4
    127c:	09 f4       	brne	.+2      	; 0x1280 <__pack_f+0x26>
    127e:	9b c0       	rjmp	.+310    	; 0x13b6 <__pack_f+0x15c>
    1280:	82 30       	cpi	r24, 0x02	; 2
    1282:	09 f4       	brne	.+2      	; 0x1286 <__pack_f+0x2c>
    1284:	92 c0       	rjmp	.+292    	; 0x13aa <__pack_f+0x150>
    1286:	41 15       	cp	r20, r1
    1288:	51 05       	cpc	r21, r1
    128a:	61 05       	cpc	r22, r1
    128c:	71 05       	cpc	r23, r1
    128e:	09 f4       	brne	.+2      	; 0x1292 <__pack_f+0x38>
    1290:	8f c0       	rjmp	.+286    	; 0x13b0 <__pack_f+0x156>
    1292:	22 81       	ldd	r18, Z+2	; 0x02
    1294:	33 81       	ldd	r19, Z+3	; 0x03
    1296:	22 38       	cpi	r18, 0x82	; 130
    1298:	8f ef       	ldi	r24, 0xFF	; 255
    129a:	38 07       	cpc	r19, r24
    129c:	0c f0       	brlt	.+2      	; 0x12a0 <__pack_f+0x46>
    129e:	57 c0       	rjmp	.+174    	; 0x134e <__pack_f+0xf4>
    12a0:	e2 e8       	ldi	r30, 0x82	; 130
    12a2:	ff ef       	ldi	r31, 0xFF	; 255
    12a4:	e2 1b       	sub	r30, r18
    12a6:	f3 0b       	sbc	r31, r19
    12a8:	ea 31       	cpi	r30, 0x1A	; 26
    12aa:	f1 05       	cpc	r31, r1
    12ac:	64 f5       	brge	.+88     	; 0x1306 <__pack_f+0xac>
    12ae:	8a 01       	movw	r16, r20
    12b0:	9b 01       	movw	r18, r22
    12b2:	0e 2e       	mov	r0, r30
    12b4:	04 c0       	rjmp	.+8      	; 0x12be <__pack_f+0x64>
    12b6:	36 95       	lsr	r19
    12b8:	27 95       	ror	r18
    12ba:	17 95       	ror	r17
    12bc:	07 95       	ror	r16
    12be:	0a 94       	dec	r0
    12c0:	d2 f7       	brpl	.-12     	; 0x12b6 <__pack_f+0x5c>
    12c2:	81 e0       	ldi	r24, 0x01	; 1
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	a0 e0       	ldi	r26, 0x00	; 0
    12c8:	b0 e0       	ldi	r27, 0x00	; 0
    12ca:	04 c0       	rjmp	.+8      	; 0x12d4 <__pack_f+0x7a>
    12cc:	88 0f       	add	r24, r24
    12ce:	99 1f       	adc	r25, r25
    12d0:	aa 1f       	adc	r26, r26
    12d2:	bb 1f       	adc	r27, r27
    12d4:	ea 95       	dec	r30
    12d6:	d2 f7       	brpl	.-12     	; 0x12cc <__pack_f+0x72>
    12d8:	01 97       	sbiw	r24, 0x01	; 1
    12da:	a1 09       	sbc	r26, r1
    12dc:	b1 09       	sbc	r27, r1
    12de:	84 23       	and	r24, r20
    12e0:	95 23       	and	r25, r21
    12e2:	a6 23       	and	r26, r22
    12e4:	b7 23       	and	r27, r23
    12e6:	41 e0       	ldi	r20, 0x01	; 1
    12e8:	50 e0       	ldi	r21, 0x00	; 0
    12ea:	60 e0       	ldi	r22, 0x00	; 0
    12ec:	70 e0       	ldi	r23, 0x00	; 0
    12ee:	89 2b       	or	r24, r25
    12f0:	8a 2b       	or	r24, r26
    12f2:	8b 2b       	or	r24, r27
    12f4:	19 f4       	brne	.+6      	; 0x12fc <__pack_f+0xa2>
    12f6:	40 e0       	ldi	r20, 0x00	; 0
    12f8:	50 e0       	ldi	r21, 0x00	; 0
    12fa:	ba 01       	movw	r22, r20
    12fc:	40 2b       	or	r20, r16
    12fe:	51 2b       	or	r21, r17
    1300:	62 2b       	or	r22, r18
    1302:	73 2b       	or	r23, r19
    1304:	03 c0       	rjmp	.+6      	; 0x130c <__pack_f+0xb2>
    1306:	40 e0       	ldi	r20, 0x00	; 0
    1308:	50 e0       	ldi	r21, 0x00	; 0
    130a:	ba 01       	movw	r22, r20
    130c:	db 01       	movw	r26, r22
    130e:	ca 01       	movw	r24, r20
    1310:	8f 77       	andi	r24, 0x7F	; 127
    1312:	99 27       	eor	r25, r25
    1314:	aa 27       	eor	r26, r26
    1316:	bb 27       	eor	r27, r27
    1318:	80 34       	cpi	r24, 0x40	; 64
    131a:	91 05       	cpc	r25, r1
    131c:	a1 05       	cpc	r26, r1
    131e:	b1 05       	cpc	r27, r1
    1320:	39 f4       	brne	.+14     	; 0x1330 <__pack_f+0xd6>
    1322:	47 ff       	sbrs	r20, 7
    1324:	09 c0       	rjmp	.+18     	; 0x1338 <__pack_f+0xde>
    1326:	40 5c       	subi	r20, 0xC0	; 192
    1328:	5f 4f       	sbci	r21, 0xFF	; 255
    132a:	6f 4f       	sbci	r22, 0xFF	; 255
    132c:	7f 4f       	sbci	r23, 0xFF	; 255
    132e:	04 c0       	rjmp	.+8      	; 0x1338 <__pack_f+0xde>
    1330:	41 5c       	subi	r20, 0xC1	; 193
    1332:	5f 4f       	sbci	r21, 0xFF	; 255
    1334:	6f 4f       	sbci	r22, 0xFF	; 255
    1336:	7f 4f       	sbci	r23, 0xFF	; 255
    1338:	81 e0       	ldi	r24, 0x01	; 1
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	41 15       	cp	r20, r1
    133e:	51 05       	cpc	r21, r1
    1340:	61 05       	cpc	r22, r1
    1342:	20 e4       	ldi	r18, 0x40	; 64
    1344:	72 07       	cpc	r23, r18
    1346:	48 f5       	brcc	.+82     	; 0x139a <__pack_f+0x140>
    1348:	80 e0       	ldi	r24, 0x00	; 0
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	26 c0       	rjmp	.+76     	; 0x139a <__pack_f+0x140>
    134e:	20 38       	cpi	r18, 0x80	; 128
    1350:	31 05       	cpc	r19, r1
    1352:	8c f5       	brge	.+98     	; 0x13b6 <__pack_f+0x15c>
    1354:	db 01       	movw	r26, r22
    1356:	ca 01       	movw	r24, r20
    1358:	8f 77       	andi	r24, 0x7F	; 127
    135a:	99 27       	eor	r25, r25
    135c:	aa 27       	eor	r26, r26
    135e:	bb 27       	eor	r27, r27
    1360:	80 34       	cpi	r24, 0x40	; 64
    1362:	91 05       	cpc	r25, r1
    1364:	a1 05       	cpc	r26, r1
    1366:	b1 05       	cpc	r27, r1
    1368:	39 f4       	brne	.+14     	; 0x1378 <__pack_f+0x11e>
    136a:	47 ff       	sbrs	r20, 7
    136c:	09 c0       	rjmp	.+18     	; 0x1380 <__pack_f+0x126>
    136e:	40 5c       	subi	r20, 0xC0	; 192
    1370:	5f 4f       	sbci	r21, 0xFF	; 255
    1372:	6f 4f       	sbci	r22, 0xFF	; 255
    1374:	7f 4f       	sbci	r23, 0xFF	; 255
    1376:	04 c0       	rjmp	.+8      	; 0x1380 <__pack_f+0x126>
    1378:	41 5c       	subi	r20, 0xC1	; 193
    137a:	5f 4f       	sbci	r21, 0xFF	; 255
    137c:	6f 4f       	sbci	r22, 0xFF	; 255
    137e:	7f 4f       	sbci	r23, 0xFF	; 255
    1380:	77 fd       	sbrc	r23, 7
    1382:	04 c0       	rjmp	.+8      	; 0x138c <__pack_f+0x132>
    1384:	c9 01       	movw	r24, r18
    1386:	81 58       	subi	r24, 0x81	; 129
    1388:	9f 4f       	sbci	r25, 0xFF	; 255
    138a:	07 c0       	rjmp	.+14     	; 0x139a <__pack_f+0x140>
    138c:	76 95       	lsr	r23
    138e:	67 95       	ror	r22
    1390:	57 95       	ror	r21
    1392:	47 95       	ror	r20
    1394:	c9 01       	movw	r24, r18
    1396:	80 58       	subi	r24, 0x80	; 128
    1398:	9f 4f       	sbci	r25, 0xFF	; 255
    139a:	97 e0       	ldi	r25, 0x07	; 7
    139c:	76 95       	lsr	r23
    139e:	67 95       	ror	r22
    13a0:	57 95       	ror	r21
    13a2:	47 95       	ror	r20
    13a4:	9a 95       	dec	r25
    13a6:	d1 f7       	brne	.-12     	; 0x139c <__pack_f+0x142>
    13a8:	0b c0       	rjmp	.+22     	; 0x13c0 <__pack_f+0x166>
    13aa:	80 e0       	ldi	r24, 0x00	; 0
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	05 c0       	rjmp	.+10     	; 0x13ba <__pack_f+0x160>
    13b0:	80 e0       	ldi	r24, 0x00	; 0
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	05 c0       	rjmp	.+10     	; 0x13c0 <__pack_f+0x166>
    13b6:	8f ef       	ldi	r24, 0xFF	; 255
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	40 e0       	ldi	r20, 0x00	; 0
    13bc:	50 e0       	ldi	r21, 0x00	; 0
    13be:	ba 01       	movw	r22, r20
    13c0:	98 2f       	mov	r25, r24
    13c2:	96 95       	lsr	r25
    13c4:	c0 fb       	bst	r28, 0
    13c6:	97 f9       	bld	r25, 7
    13c8:	36 2f       	mov	r19, r22
    13ca:	80 fb       	bst	r24, 0
    13cc:	37 f9       	bld	r19, 7
    13ce:	64 2f       	mov	r22, r20
    13d0:	75 2f       	mov	r23, r21
    13d2:	83 2f       	mov	r24, r19
    13d4:	cf 91       	pop	r28
    13d6:	1f 91       	pop	r17
    13d8:	0f 91       	pop	r16
    13da:	08 95       	ret

000013dc <__unpack_f>:
    13dc:	cf 92       	push	r12
    13de:	df 92       	push	r13
    13e0:	ef 92       	push	r14
    13e2:	dc 01       	movw	r26, r24
    13e4:	fb 01       	movw	r30, r22
    13e6:	cc 90       	ld	r12, X
    13e8:	11 96       	adiw	r26, 0x01	; 1
    13ea:	dc 90       	ld	r13, X
    13ec:	11 97       	sbiw	r26, 0x01	; 1
    13ee:	12 96       	adiw	r26, 0x02	; 2
    13f0:	8c 91       	ld	r24, X
    13f2:	12 97       	sbiw	r26, 0x02	; 2
    13f4:	3f e7       	ldi	r19, 0x7F	; 127
    13f6:	e3 2e       	mov	r14, r19
    13f8:	e8 22       	and	r14, r24
    13fa:	6e 2d       	mov	r22, r14
    13fc:	a6 01       	movw	r20, r12
    13fe:	70 e0       	ldi	r23, 0x00	; 0
    1400:	98 2f       	mov	r25, r24
    1402:	99 1f       	adc	r25, r25
    1404:	99 27       	eor	r25, r25
    1406:	99 1f       	adc	r25, r25
    1408:	13 96       	adiw	r26, 0x03	; 3
    140a:	2c 91       	ld	r18, X
    140c:	82 2f       	mov	r24, r18
    140e:	88 0f       	add	r24, r24
    1410:	89 2b       	or	r24, r25
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	27 fb       	bst	r18, 7
    1416:	22 27       	eor	r18, r18
    1418:	20 f9       	bld	r18, 0
    141a:	21 83       	std	Z+1, r18	; 0x01
    141c:	00 97       	sbiw	r24, 0x00	; 0
    141e:	29 f5       	brne	.+74     	; 0x146a <__unpack_f+0x8e>
    1420:	41 15       	cp	r20, r1
    1422:	51 05       	cpc	r21, r1
    1424:	61 05       	cpc	r22, r1
    1426:	71 05       	cpc	r23, r1
    1428:	11 f4       	brne	.+4      	; 0x142e <__unpack_f+0x52>
    142a:	82 e0       	ldi	r24, 0x02	; 2
    142c:	27 c0       	rjmp	.+78     	; 0x147c <__unpack_f+0xa0>
    142e:	82 e8       	ldi	r24, 0x82	; 130
    1430:	9f ef       	ldi	r25, 0xFF	; 255
    1432:	93 83       	std	Z+3, r25	; 0x03
    1434:	82 83       	std	Z+2, r24	; 0x02
    1436:	27 e0       	ldi	r18, 0x07	; 7
    1438:	44 0f       	add	r20, r20
    143a:	55 1f       	adc	r21, r21
    143c:	66 1f       	adc	r22, r22
    143e:	77 1f       	adc	r23, r23
    1440:	2a 95       	dec	r18
    1442:	d1 f7       	brne	.-12     	; 0x1438 <__unpack_f+0x5c>
    1444:	83 e0       	ldi	r24, 0x03	; 3
    1446:	80 83       	st	Z, r24
    1448:	09 c0       	rjmp	.+18     	; 0x145c <__unpack_f+0x80>
    144a:	44 0f       	add	r20, r20
    144c:	55 1f       	adc	r21, r21
    144e:	66 1f       	adc	r22, r22
    1450:	77 1f       	adc	r23, r23
    1452:	82 81       	ldd	r24, Z+2	; 0x02
    1454:	93 81       	ldd	r25, Z+3	; 0x03
    1456:	01 97       	sbiw	r24, 0x01	; 1
    1458:	93 83       	std	Z+3, r25	; 0x03
    145a:	82 83       	std	Z+2, r24	; 0x02
    145c:	41 15       	cp	r20, r1
    145e:	51 05       	cpc	r21, r1
    1460:	61 05       	cpc	r22, r1
    1462:	80 e4       	ldi	r24, 0x40	; 64
    1464:	78 07       	cpc	r23, r24
    1466:	88 f3       	brcs	.-30     	; 0x144a <__unpack_f+0x6e>
    1468:	20 c0       	rjmp	.+64     	; 0x14aa <__unpack_f+0xce>
    146a:	8f 3f       	cpi	r24, 0xFF	; 255
    146c:	91 05       	cpc	r25, r1
    146e:	79 f4       	brne	.+30     	; 0x148e <__unpack_f+0xb2>
    1470:	41 15       	cp	r20, r1
    1472:	51 05       	cpc	r21, r1
    1474:	61 05       	cpc	r22, r1
    1476:	71 05       	cpc	r23, r1
    1478:	19 f4       	brne	.+6      	; 0x1480 <__unpack_f+0xa4>
    147a:	84 e0       	ldi	r24, 0x04	; 4
    147c:	80 83       	st	Z, r24
    147e:	19 c0       	rjmp	.+50     	; 0x14b2 <__unpack_f+0xd6>
    1480:	e4 fe       	sbrs	r14, 4
    1482:	03 c0       	rjmp	.+6      	; 0x148a <__unpack_f+0xae>
    1484:	81 e0       	ldi	r24, 0x01	; 1
    1486:	80 83       	st	Z, r24
    1488:	10 c0       	rjmp	.+32     	; 0x14aa <__unpack_f+0xce>
    148a:	10 82       	st	Z, r1
    148c:	0e c0       	rjmp	.+28     	; 0x14aa <__unpack_f+0xce>
    148e:	8f 57       	subi	r24, 0x7F	; 127
    1490:	91 09       	sbc	r25, r1
    1492:	93 83       	std	Z+3, r25	; 0x03
    1494:	82 83       	std	Z+2, r24	; 0x02
    1496:	83 e0       	ldi	r24, 0x03	; 3
    1498:	80 83       	st	Z, r24
    149a:	87 e0       	ldi	r24, 0x07	; 7
    149c:	44 0f       	add	r20, r20
    149e:	55 1f       	adc	r21, r21
    14a0:	66 1f       	adc	r22, r22
    14a2:	77 1f       	adc	r23, r23
    14a4:	8a 95       	dec	r24
    14a6:	d1 f7       	brne	.-12     	; 0x149c <__unpack_f+0xc0>
    14a8:	70 64       	ori	r23, 0x40	; 64
    14aa:	44 83       	std	Z+4, r20	; 0x04
    14ac:	55 83       	std	Z+5, r21	; 0x05
    14ae:	66 83       	std	Z+6, r22	; 0x06
    14b0:	77 83       	std	Z+7, r23	; 0x07
    14b2:	ef 90       	pop	r14
    14b4:	df 90       	pop	r13
    14b6:	cf 90       	pop	r12
    14b8:	08 95       	ret

000014ba <__fpcmp_parts_f>:
    14ba:	cf 93       	push	r28
    14bc:	fc 01       	movw	r30, r24
    14be:	db 01       	movw	r26, r22
    14c0:	90 81       	ld	r25, Z
    14c2:	92 30       	cpi	r25, 0x02	; 2
    14c4:	08 f4       	brcc	.+2      	; 0x14c8 <__fpcmp_parts_f+0xe>
    14c6:	52 c0       	rjmp	.+164    	; 0x156c <__fpcmp_parts_f+0xb2>
    14c8:	8c 91       	ld	r24, X
    14ca:	82 30       	cpi	r24, 0x02	; 2
    14cc:	08 f4       	brcc	.+2      	; 0x14d0 <__fpcmp_parts_f+0x16>
    14ce:	4e c0       	rjmp	.+156    	; 0x156c <__fpcmp_parts_f+0xb2>
    14d0:	94 30       	cpi	r25, 0x04	; 4
    14d2:	71 f4       	brne	.+28     	; 0x14f0 <__fpcmp_parts_f+0x36>
    14d4:	84 30       	cpi	r24, 0x04	; 4
    14d6:	39 f4       	brne	.+14     	; 0x14e6 <__fpcmp_parts_f+0x2c>
    14d8:	11 96       	adiw	r26, 0x01	; 1
    14da:	2c 91       	ld	r18, X
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	81 81       	ldd	r24, Z+1	; 0x01
    14e0:	28 1b       	sub	r18, r24
    14e2:	31 09       	sbc	r19, r1
    14e4:	48 c0       	rjmp	.+144    	; 0x1576 <__fpcmp_parts_f+0xbc>
    14e6:	81 81       	ldd	r24, Z+1	; 0x01
    14e8:	88 23       	and	r24, r24
    14ea:	09 f4       	brne	.+2      	; 0x14ee <__fpcmp_parts_f+0x34>
    14ec:	3f c0       	rjmp	.+126    	; 0x156c <__fpcmp_parts_f+0xb2>
    14ee:	3b c0       	rjmp	.+118    	; 0x1566 <__fpcmp_parts_f+0xac>
    14f0:	84 30       	cpi	r24, 0x04	; 4
    14f2:	29 f4       	brne	.+10     	; 0x14fe <__fpcmp_parts_f+0x44>
    14f4:	11 96       	adiw	r26, 0x01	; 1
    14f6:	8c 91       	ld	r24, X
    14f8:	81 11       	cpse	r24, r1
    14fa:	38 c0       	rjmp	.+112    	; 0x156c <__fpcmp_parts_f+0xb2>
    14fc:	34 c0       	rjmp	.+104    	; 0x1566 <__fpcmp_parts_f+0xac>
    14fe:	92 30       	cpi	r25, 0x02	; 2
    1500:	19 f4       	brne	.+6      	; 0x1508 <__fpcmp_parts_f+0x4e>
    1502:	82 30       	cpi	r24, 0x02	; 2
    1504:	b9 f7       	brne	.-18     	; 0x14f4 <__fpcmp_parts_f+0x3a>
    1506:	35 c0       	rjmp	.+106    	; 0x1572 <__fpcmp_parts_f+0xb8>
    1508:	82 30       	cpi	r24, 0x02	; 2
    150a:	69 f3       	breq	.-38     	; 0x14e6 <__fpcmp_parts_f+0x2c>
    150c:	c1 81       	ldd	r28, Z+1	; 0x01
    150e:	11 96       	adiw	r26, 0x01	; 1
    1510:	8c 91       	ld	r24, X
    1512:	11 97       	sbiw	r26, 0x01	; 1
    1514:	c8 13       	cpse	r28, r24
    1516:	1d c0       	rjmp	.+58     	; 0x1552 <__fpcmp_parts_f+0x98>
    1518:	22 81       	ldd	r18, Z+2	; 0x02
    151a:	33 81       	ldd	r19, Z+3	; 0x03
    151c:	12 96       	adiw	r26, 0x02	; 2
    151e:	8d 91       	ld	r24, X+
    1520:	9c 91       	ld	r25, X
    1522:	13 97       	sbiw	r26, 0x03	; 3
    1524:	82 17       	cp	r24, r18
    1526:	93 07       	cpc	r25, r19
    1528:	0c f4       	brge	.+2      	; 0x152c <__fpcmp_parts_f+0x72>
    152a:	13 c0       	rjmp	.+38     	; 0x1552 <__fpcmp_parts_f+0x98>
    152c:	28 17       	cp	r18, r24
    152e:	39 07       	cpc	r19, r25
    1530:	0c f4       	brge	.+2      	; 0x1534 <__fpcmp_parts_f+0x7a>
    1532:	17 c0       	rjmp	.+46     	; 0x1562 <__fpcmp_parts_f+0xa8>
    1534:	44 81       	ldd	r20, Z+4	; 0x04
    1536:	55 81       	ldd	r21, Z+5	; 0x05
    1538:	66 81       	ldd	r22, Z+6	; 0x06
    153a:	77 81       	ldd	r23, Z+7	; 0x07
    153c:	14 96       	adiw	r26, 0x04	; 4
    153e:	8d 91       	ld	r24, X+
    1540:	9d 91       	ld	r25, X+
    1542:	0d 90       	ld	r0, X+
    1544:	bc 91       	ld	r27, X
    1546:	a0 2d       	mov	r26, r0
    1548:	84 17       	cp	r24, r20
    154a:	95 07       	cpc	r25, r21
    154c:	a6 07       	cpc	r26, r22
    154e:	b7 07       	cpc	r27, r23
    1550:	18 f4       	brcc	.+6      	; 0x1558 <__fpcmp_parts_f+0x9e>
    1552:	c1 11       	cpse	r28, r1
    1554:	08 c0       	rjmp	.+16     	; 0x1566 <__fpcmp_parts_f+0xac>
    1556:	0a c0       	rjmp	.+20     	; 0x156c <__fpcmp_parts_f+0xb2>
    1558:	48 17       	cp	r20, r24
    155a:	59 07       	cpc	r21, r25
    155c:	6a 07       	cpc	r22, r26
    155e:	7b 07       	cpc	r23, r27
    1560:	40 f4       	brcc	.+16     	; 0x1572 <__fpcmp_parts_f+0xb8>
    1562:	c1 11       	cpse	r28, r1
    1564:	03 c0       	rjmp	.+6      	; 0x156c <__fpcmp_parts_f+0xb2>
    1566:	2f ef       	ldi	r18, 0xFF	; 255
    1568:	3f ef       	ldi	r19, 0xFF	; 255
    156a:	05 c0       	rjmp	.+10     	; 0x1576 <__fpcmp_parts_f+0xbc>
    156c:	21 e0       	ldi	r18, 0x01	; 1
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	02 c0       	rjmp	.+4      	; 0x1576 <__fpcmp_parts_f+0xbc>
    1572:	20 e0       	ldi	r18, 0x00	; 0
    1574:	30 e0       	ldi	r19, 0x00	; 0
    1576:	c9 01       	movw	r24, r18
    1578:	cf 91       	pop	r28
    157a:	08 95       	ret

0000157c <__prologue_saves__>:
    157c:	2f 92       	push	r2
    157e:	3f 92       	push	r3
    1580:	4f 92       	push	r4
    1582:	5f 92       	push	r5
    1584:	6f 92       	push	r6
    1586:	7f 92       	push	r7
    1588:	8f 92       	push	r8
    158a:	9f 92       	push	r9
    158c:	af 92       	push	r10
    158e:	bf 92       	push	r11
    1590:	cf 92       	push	r12
    1592:	df 92       	push	r13
    1594:	ef 92       	push	r14
    1596:	ff 92       	push	r15
    1598:	0f 93       	push	r16
    159a:	1f 93       	push	r17
    159c:	cf 93       	push	r28
    159e:	df 93       	push	r29
    15a0:	cd b7       	in	r28, 0x3d	; 61
    15a2:	de b7       	in	r29, 0x3e	; 62
    15a4:	ca 1b       	sub	r28, r26
    15a6:	db 0b       	sbc	r29, r27
    15a8:	0f b6       	in	r0, 0x3f	; 63
    15aa:	f8 94       	cli
    15ac:	de bf       	out	0x3e, r29	; 62
    15ae:	0f be       	out	0x3f, r0	; 63
    15b0:	cd bf       	out	0x3d, r28	; 61
    15b2:	09 94       	ijmp

000015b4 <__epilogue_restores__>:
    15b4:	2a 88       	ldd	r2, Y+18	; 0x12
    15b6:	39 88       	ldd	r3, Y+17	; 0x11
    15b8:	48 88       	ldd	r4, Y+16	; 0x10
    15ba:	5f 84       	ldd	r5, Y+15	; 0x0f
    15bc:	6e 84       	ldd	r6, Y+14	; 0x0e
    15be:	7d 84       	ldd	r7, Y+13	; 0x0d
    15c0:	8c 84       	ldd	r8, Y+12	; 0x0c
    15c2:	9b 84       	ldd	r9, Y+11	; 0x0b
    15c4:	aa 84       	ldd	r10, Y+10	; 0x0a
    15c6:	b9 84       	ldd	r11, Y+9	; 0x09
    15c8:	c8 84       	ldd	r12, Y+8	; 0x08
    15ca:	df 80       	ldd	r13, Y+7	; 0x07
    15cc:	ee 80       	ldd	r14, Y+6	; 0x06
    15ce:	fd 80       	ldd	r15, Y+5	; 0x05
    15d0:	0c 81       	ldd	r16, Y+4	; 0x04
    15d2:	1b 81       	ldd	r17, Y+3	; 0x03
    15d4:	aa 81       	ldd	r26, Y+2	; 0x02
    15d6:	b9 81       	ldd	r27, Y+1	; 0x01
    15d8:	ce 0f       	add	r28, r30
    15da:	d1 1d       	adc	r29, r1
    15dc:	0f b6       	in	r0, 0x3f	; 63
    15de:	f8 94       	cli
    15e0:	de bf       	out	0x3e, r29	; 62
    15e2:	0f be       	out	0x3f, r0	; 63
    15e4:	cd bf       	out	0x3d, r28	; 61
    15e6:	ed 01       	movw	r28, r26
    15e8:	08 95       	ret

000015ea <sprintf>:
    15ea:	0f 93       	push	r16
    15ec:	1f 93       	push	r17
    15ee:	cf 93       	push	r28
    15f0:	df 93       	push	r29
    15f2:	cd b7       	in	r28, 0x3d	; 61
    15f4:	de b7       	in	r29, 0x3e	; 62
    15f6:	60 97       	sbiw	r28, 0x10	; 16
    15f8:	0f b6       	in	r0, 0x3f	; 63
    15fa:	f8 94       	cli
    15fc:	de bf       	out	0x3e, r29	; 62
    15fe:	0f be       	out	0x3f, r0	; 63
    1600:	cd bf       	out	0x3d, r28	; 61
    1602:	0f 89       	ldd	r16, Y+23	; 0x17
    1604:	18 8d       	ldd	r17, Y+24	; 0x18
    1606:	86 e0       	ldi	r24, 0x06	; 6
    1608:	8c 83       	std	Y+4, r24	; 0x04
    160a:	1a 83       	std	Y+2, r17	; 0x02
    160c:	09 83       	std	Y+1, r16	; 0x01
    160e:	8f ef       	ldi	r24, 0xFF	; 255
    1610:	9f e7       	ldi	r25, 0x7F	; 127
    1612:	9e 83       	std	Y+6, r25	; 0x06
    1614:	8d 83       	std	Y+5, r24	; 0x05
    1616:	ae 01       	movw	r20, r28
    1618:	45 5e       	subi	r20, 0xE5	; 229
    161a:	5f 4f       	sbci	r21, 0xFF	; 255
    161c:	58 8b       	std	Y+16, r21	; 0x10
    161e:	4f 87       	std	Y+15, r20	; 0x0f
    1620:	69 8d       	ldd	r22, Y+25	; 0x19
    1622:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1624:	ce 01       	movw	r24, r28
    1626:	01 96       	adiw	r24, 0x01	; 1
    1628:	0e 94 26 0b 	call	0x164c	; 0x164c <vfprintf>
    162c:	ef 81       	ldd	r30, Y+7	; 0x07
    162e:	f8 85       	ldd	r31, Y+8	; 0x08
    1630:	e0 0f       	add	r30, r16
    1632:	f1 1f       	adc	r31, r17
    1634:	10 82       	st	Z, r1
    1636:	60 96       	adiw	r28, 0x10	; 16
    1638:	0f b6       	in	r0, 0x3f	; 63
    163a:	f8 94       	cli
    163c:	de bf       	out	0x3e, r29	; 62
    163e:	0f be       	out	0x3f, r0	; 63
    1640:	cd bf       	out	0x3d, r28	; 61
    1642:	df 91       	pop	r29
    1644:	cf 91       	pop	r28
    1646:	1f 91       	pop	r17
    1648:	0f 91       	pop	r16
    164a:	08 95       	ret

0000164c <vfprintf>:
    164c:	2f 92       	push	r2
    164e:	3f 92       	push	r3
    1650:	4f 92       	push	r4
    1652:	5f 92       	push	r5
    1654:	6f 92       	push	r6
    1656:	7f 92       	push	r7
    1658:	8f 92       	push	r8
    165a:	9f 92       	push	r9
    165c:	af 92       	push	r10
    165e:	bf 92       	push	r11
    1660:	cf 92       	push	r12
    1662:	df 92       	push	r13
    1664:	ef 92       	push	r14
    1666:	ff 92       	push	r15
    1668:	0f 93       	push	r16
    166a:	1f 93       	push	r17
    166c:	cf 93       	push	r28
    166e:	df 93       	push	r29
    1670:	cd b7       	in	r28, 0x3d	; 61
    1672:	de b7       	in	r29, 0x3e	; 62
    1674:	2c 97       	sbiw	r28, 0x0c	; 12
    1676:	0f b6       	in	r0, 0x3f	; 63
    1678:	f8 94       	cli
    167a:	de bf       	out	0x3e, r29	; 62
    167c:	0f be       	out	0x3f, r0	; 63
    167e:	cd bf       	out	0x3d, r28	; 61
    1680:	7c 01       	movw	r14, r24
    1682:	6b 01       	movw	r12, r22
    1684:	8a 01       	movw	r16, r20
    1686:	fc 01       	movw	r30, r24
    1688:	17 82       	std	Z+7, r1	; 0x07
    168a:	16 82       	std	Z+6, r1	; 0x06
    168c:	83 81       	ldd	r24, Z+3	; 0x03
    168e:	81 ff       	sbrs	r24, 1
    1690:	c7 c1       	rjmp	.+910    	; 0x1a20 <vfprintf+0x3d4>
    1692:	88 24       	eor	r8, r8
    1694:	83 94       	inc	r8
    1696:	91 2c       	mov	r9, r1
    1698:	8c 0e       	add	r8, r28
    169a:	9d 1e       	adc	r9, r29
    169c:	f7 01       	movw	r30, r14
    169e:	93 81       	ldd	r25, Z+3	; 0x03
    16a0:	f6 01       	movw	r30, r12
    16a2:	93 fd       	sbrc	r25, 3
    16a4:	85 91       	lpm	r24, Z+
    16a6:	93 ff       	sbrs	r25, 3
    16a8:	81 91       	ld	r24, Z+
    16aa:	6f 01       	movw	r12, r30
    16ac:	88 23       	and	r24, r24
    16ae:	09 f4       	brne	.+2      	; 0x16b2 <vfprintf+0x66>
    16b0:	b3 c1       	rjmp	.+870    	; 0x1a18 <vfprintf+0x3cc>
    16b2:	85 32       	cpi	r24, 0x25	; 37
    16b4:	39 f4       	brne	.+14     	; 0x16c4 <vfprintf+0x78>
    16b6:	93 fd       	sbrc	r25, 3
    16b8:	85 91       	lpm	r24, Z+
    16ba:	93 ff       	sbrs	r25, 3
    16bc:	81 91       	ld	r24, Z+
    16be:	6f 01       	movw	r12, r30
    16c0:	85 32       	cpi	r24, 0x25	; 37
    16c2:	29 f4       	brne	.+10     	; 0x16ce <vfprintf+0x82>
    16c4:	b7 01       	movw	r22, r14
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <fputc>
    16cc:	e7 cf       	rjmp	.-50     	; 0x169c <vfprintf+0x50>
    16ce:	71 2c       	mov	r7, r1
    16d0:	31 2c       	mov	r3, r1
    16d2:	20 e0       	ldi	r18, 0x00	; 0
    16d4:	20 32       	cpi	r18, 0x20	; 32
    16d6:	a8 f4       	brcc	.+42     	; 0x1702 <vfprintf+0xb6>
    16d8:	8b 32       	cpi	r24, 0x2B	; 43
    16da:	61 f0       	breq	.+24     	; 0x16f4 <vfprintf+0xa8>
    16dc:	28 f4       	brcc	.+10     	; 0x16e8 <vfprintf+0x9c>
    16de:	80 32       	cpi	r24, 0x20	; 32
    16e0:	51 f0       	breq	.+20     	; 0x16f6 <vfprintf+0xaa>
    16e2:	83 32       	cpi	r24, 0x23	; 35
    16e4:	71 f4       	brne	.+28     	; 0x1702 <vfprintf+0xb6>
    16e6:	0b c0       	rjmp	.+22     	; 0x16fe <vfprintf+0xb2>
    16e8:	8d 32       	cpi	r24, 0x2D	; 45
    16ea:	39 f0       	breq	.+14     	; 0x16fa <vfprintf+0xae>
    16ec:	80 33       	cpi	r24, 0x30	; 48
    16ee:	49 f4       	brne	.+18     	; 0x1702 <vfprintf+0xb6>
    16f0:	21 60       	ori	r18, 0x01	; 1
    16f2:	28 c0       	rjmp	.+80     	; 0x1744 <vfprintf+0xf8>
    16f4:	22 60       	ori	r18, 0x02	; 2
    16f6:	24 60       	ori	r18, 0x04	; 4
    16f8:	25 c0       	rjmp	.+74     	; 0x1744 <vfprintf+0xf8>
    16fa:	28 60       	ori	r18, 0x08	; 8
    16fc:	23 c0       	rjmp	.+70     	; 0x1744 <vfprintf+0xf8>
    16fe:	20 61       	ori	r18, 0x10	; 16
    1700:	21 c0       	rjmp	.+66     	; 0x1744 <vfprintf+0xf8>
    1702:	27 fd       	sbrc	r18, 7
    1704:	27 c0       	rjmp	.+78     	; 0x1754 <vfprintf+0x108>
    1706:	38 2f       	mov	r19, r24
    1708:	30 53       	subi	r19, 0x30	; 48
    170a:	3a 30       	cpi	r19, 0x0A	; 10
    170c:	78 f4       	brcc	.+30     	; 0x172c <vfprintf+0xe0>
    170e:	26 ff       	sbrs	r18, 6
    1710:	06 c0       	rjmp	.+12     	; 0x171e <vfprintf+0xd2>
    1712:	fa e0       	ldi	r31, 0x0A	; 10
    1714:	7f 9e       	mul	r7, r31
    1716:	30 0d       	add	r19, r0
    1718:	11 24       	eor	r1, r1
    171a:	73 2e       	mov	r7, r19
    171c:	13 c0       	rjmp	.+38     	; 0x1744 <vfprintf+0xf8>
    171e:	8a e0       	ldi	r24, 0x0A	; 10
    1720:	38 9e       	mul	r3, r24
    1722:	30 0d       	add	r19, r0
    1724:	11 24       	eor	r1, r1
    1726:	33 2e       	mov	r3, r19
    1728:	20 62       	ori	r18, 0x20	; 32
    172a:	0c c0       	rjmp	.+24     	; 0x1744 <vfprintf+0xf8>
    172c:	8e 32       	cpi	r24, 0x2E	; 46
    172e:	21 f4       	brne	.+8      	; 0x1738 <vfprintf+0xec>
    1730:	26 fd       	sbrc	r18, 6
    1732:	72 c1       	rjmp	.+740    	; 0x1a18 <vfprintf+0x3cc>
    1734:	20 64       	ori	r18, 0x40	; 64
    1736:	06 c0       	rjmp	.+12     	; 0x1744 <vfprintf+0xf8>
    1738:	8c 36       	cpi	r24, 0x6C	; 108
    173a:	11 f4       	brne	.+4      	; 0x1740 <vfprintf+0xf4>
    173c:	20 68       	ori	r18, 0x80	; 128
    173e:	02 c0       	rjmp	.+4      	; 0x1744 <vfprintf+0xf8>
    1740:	88 36       	cpi	r24, 0x68	; 104
    1742:	41 f4       	brne	.+16     	; 0x1754 <vfprintf+0x108>
    1744:	f6 01       	movw	r30, r12
    1746:	93 fd       	sbrc	r25, 3
    1748:	85 91       	lpm	r24, Z+
    174a:	93 ff       	sbrs	r25, 3
    174c:	81 91       	ld	r24, Z+
    174e:	6f 01       	movw	r12, r30
    1750:	81 11       	cpse	r24, r1
    1752:	c0 cf       	rjmp	.-128    	; 0x16d4 <vfprintf+0x88>
    1754:	98 2f       	mov	r25, r24
    1756:	95 54       	subi	r25, 0x45	; 69
    1758:	93 30       	cpi	r25, 0x03	; 3
    175a:	18 f0       	brcs	.+6      	; 0x1762 <vfprintf+0x116>
    175c:	90 52       	subi	r25, 0x20	; 32
    175e:	93 30       	cpi	r25, 0x03	; 3
    1760:	28 f4       	brcc	.+10     	; 0x176c <vfprintf+0x120>
    1762:	0c 5f       	subi	r16, 0xFC	; 252
    1764:	1f 4f       	sbci	r17, 0xFF	; 255
    1766:	ff e3       	ldi	r31, 0x3F	; 63
    1768:	f9 83       	std	Y+1, r31	; 0x01
    176a:	0d c0       	rjmp	.+26     	; 0x1786 <vfprintf+0x13a>
    176c:	83 36       	cpi	r24, 0x63	; 99
    176e:	31 f0       	breq	.+12     	; 0x177c <vfprintf+0x130>
    1770:	83 37       	cpi	r24, 0x73	; 115
    1772:	71 f0       	breq	.+28     	; 0x1790 <vfprintf+0x144>
    1774:	83 35       	cpi	r24, 0x53	; 83
    1776:	09 f0       	breq	.+2      	; 0x177a <vfprintf+0x12e>
    1778:	5e c0       	rjmp	.+188    	; 0x1836 <vfprintf+0x1ea>
    177a:	23 c0       	rjmp	.+70     	; 0x17c2 <vfprintf+0x176>
    177c:	f8 01       	movw	r30, r16
    177e:	80 81       	ld	r24, Z
    1780:	89 83       	std	Y+1, r24	; 0x01
    1782:	0e 5f       	subi	r16, 0xFE	; 254
    1784:	1f 4f       	sbci	r17, 0xFF	; 255
    1786:	66 24       	eor	r6, r6
    1788:	63 94       	inc	r6
    178a:	71 2c       	mov	r7, r1
    178c:	54 01       	movw	r10, r8
    178e:	15 c0       	rjmp	.+42     	; 0x17ba <vfprintf+0x16e>
    1790:	28 01       	movw	r4, r16
    1792:	f2 e0       	ldi	r31, 0x02	; 2
    1794:	4f 0e       	add	r4, r31
    1796:	51 1c       	adc	r5, r1
    1798:	f8 01       	movw	r30, r16
    179a:	a0 80       	ld	r10, Z
    179c:	b1 80       	ldd	r11, Z+1	; 0x01
    179e:	26 ff       	sbrs	r18, 6
    17a0:	03 c0       	rjmp	.+6      	; 0x17a8 <vfprintf+0x15c>
    17a2:	67 2d       	mov	r22, r7
    17a4:	70 e0       	ldi	r23, 0x00	; 0
    17a6:	02 c0       	rjmp	.+4      	; 0x17ac <vfprintf+0x160>
    17a8:	6f ef       	ldi	r22, 0xFF	; 255
    17aa:	7f ef       	ldi	r23, 0xFF	; 255
    17ac:	c5 01       	movw	r24, r10
    17ae:	2c 87       	std	Y+12, r18	; 0x0c
    17b0:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <strnlen>
    17b4:	3c 01       	movw	r6, r24
    17b6:	82 01       	movw	r16, r4
    17b8:	2c 85       	ldd	r18, Y+12	; 0x0c
    17ba:	6f e7       	ldi	r22, 0x7F	; 127
    17bc:	26 2e       	mov	r2, r22
    17be:	22 22       	and	r2, r18
    17c0:	18 c0       	rjmp	.+48     	; 0x17f2 <vfprintf+0x1a6>
    17c2:	28 01       	movw	r4, r16
    17c4:	f2 e0       	ldi	r31, 0x02	; 2
    17c6:	4f 0e       	add	r4, r31
    17c8:	51 1c       	adc	r5, r1
    17ca:	f8 01       	movw	r30, r16
    17cc:	a0 80       	ld	r10, Z
    17ce:	b1 80       	ldd	r11, Z+1	; 0x01
    17d0:	26 ff       	sbrs	r18, 6
    17d2:	03 c0       	rjmp	.+6      	; 0x17da <vfprintf+0x18e>
    17d4:	67 2d       	mov	r22, r7
    17d6:	70 e0       	ldi	r23, 0x00	; 0
    17d8:	02 c0       	rjmp	.+4      	; 0x17de <vfprintf+0x192>
    17da:	6f ef       	ldi	r22, 0xFF	; 255
    17dc:	7f ef       	ldi	r23, 0xFF	; 255
    17de:	c5 01       	movw	r24, r10
    17e0:	2c 87       	std	Y+12, r18	; 0x0c
    17e2:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <strnlen_P>
    17e6:	3c 01       	movw	r6, r24
    17e8:	2c 85       	ldd	r18, Y+12	; 0x0c
    17ea:	50 e8       	ldi	r21, 0x80	; 128
    17ec:	25 2e       	mov	r2, r21
    17ee:	22 2a       	or	r2, r18
    17f0:	82 01       	movw	r16, r4
    17f2:	23 fc       	sbrc	r2, 3
    17f4:	1c c0       	rjmp	.+56     	; 0x182e <vfprintf+0x1e2>
    17f6:	06 c0       	rjmp	.+12     	; 0x1804 <vfprintf+0x1b8>
    17f8:	b7 01       	movw	r22, r14
    17fa:	80 e2       	ldi	r24, 0x20	; 32
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <fputc>
    1802:	3a 94       	dec	r3
    1804:	83 2d       	mov	r24, r3
    1806:	90 e0       	ldi	r25, 0x00	; 0
    1808:	68 16       	cp	r6, r24
    180a:	79 06       	cpc	r7, r25
    180c:	a8 f3       	brcs	.-22     	; 0x17f8 <vfprintf+0x1ac>
    180e:	0f c0       	rjmp	.+30     	; 0x182e <vfprintf+0x1e2>
    1810:	f5 01       	movw	r30, r10
    1812:	27 fc       	sbrc	r2, 7
    1814:	85 91       	lpm	r24, Z+
    1816:	27 fe       	sbrs	r2, 7
    1818:	81 91       	ld	r24, Z+
    181a:	5f 01       	movw	r10, r30
    181c:	b7 01       	movw	r22, r14
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <fputc>
    1824:	31 10       	cpse	r3, r1
    1826:	3a 94       	dec	r3
    1828:	f1 e0       	ldi	r31, 0x01	; 1
    182a:	6f 1a       	sub	r6, r31
    182c:	71 08       	sbc	r7, r1
    182e:	61 14       	cp	r6, r1
    1830:	71 04       	cpc	r7, r1
    1832:	71 f7       	brne	.-36     	; 0x1810 <vfprintf+0x1c4>
    1834:	ee c0       	rjmp	.+476    	; 0x1a12 <vfprintf+0x3c6>
    1836:	84 36       	cpi	r24, 0x64	; 100
    1838:	11 f0       	breq	.+4      	; 0x183e <vfprintf+0x1f2>
    183a:	89 36       	cpi	r24, 0x69	; 105
    183c:	41 f5       	brne	.+80     	; 0x188e <vfprintf+0x242>
    183e:	f8 01       	movw	r30, r16
    1840:	27 ff       	sbrs	r18, 7
    1842:	07 c0       	rjmp	.+14     	; 0x1852 <vfprintf+0x206>
    1844:	60 81       	ld	r22, Z
    1846:	71 81       	ldd	r23, Z+1	; 0x01
    1848:	82 81       	ldd	r24, Z+2	; 0x02
    184a:	93 81       	ldd	r25, Z+3	; 0x03
    184c:	0c 5f       	subi	r16, 0xFC	; 252
    184e:	1f 4f       	sbci	r17, 0xFF	; 255
    1850:	08 c0       	rjmp	.+16     	; 0x1862 <vfprintf+0x216>
    1852:	60 81       	ld	r22, Z
    1854:	71 81       	ldd	r23, Z+1	; 0x01
    1856:	88 27       	eor	r24, r24
    1858:	77 fd       	sbrc	r23, 7
    185a:	80 95       	com	r24
    185c:	98 2f       	mov	r25, r24
    185e:	0e 5f       	subi	r16, 0xFE	; 254
    1860:	1f 4f       	sbci	r17, 0xFF	; 255
    1862:	4f e6       	ldi	r20, 0x6F	; 111
    1864:	64 2e       	mov	r6, r20
    1866:	62 22       	and	r6, r18
    1868:	97 ff       	sbrs	r25, 7
    186a:	09 c0       	rjmp	.+18     	; 0x187e <vfprintf+0x232>
    186c:	90 95       	com	r25
    186e:	80 95       	com	r24
    1870:	70 95       	com	r23
    1872:	61 95       	neg	r22
    1874:	7f 4f       	sbci	r23, 0xFF	; 255
    1876:	8f 4f       	sbci	r24, 0xFF	; 255
    1878:	9f 4f       	sbci	r25, 0xFF	; 255
    187a:	f0 e8       	ldi	r31, 0x80	; 128
    187c:	6f 2a       	or	r6, r31
    187e:	2a e0       	ldi	r18, 0x0A	; 10
    1880:	30 e0       	ldi	r19, 0x00	; 0
    1882:	a4 01       	movw	r20, r8
    1884:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <__ultoa_invert>
    1888:	a8 2e       	mov	r10, r24
    188a:	a8 18       	sub	r10, r8
    188c:	44 c0       	rjmp	.+136    	; 0x1916 <vfprintf+0x2ca>
    188e:	85 37       	cpi	r24, 0x75	; 117
    1890:	31 f4       	brne	.+12     	; 0x189e <vfprintf+0x252>
    1892:	3f ee       	ldi	r19, 0xEF	; 239
    1894:	b3 2e       	mov	r11, r19
    1896:	b2 22       	and	r11, r18
    1898:	2a e0       	ldi	r18, 0x0A	; 10
    189a:	30 e0       	ldi	r19, 0x00	; 0
    189c:	24 c0       	rjmp	.+72     	; 0x18e6 <vfprintf+0x29a>
    189e:	99 ef       	ldi	r25, 0xF9	; 249
    18a0:	b9 2e       	mov	r11, r25
    18a2:	b2 22       	and	r11, r18
    18a4:	8f 36       	cpi	r24, 0x6F	; 111
    18a6:	b9 f0       	breq	.+46     	; 0x18d6 <vfprintf+0x28a>
    18a8:	20 f4       	brcc	.+8      	; 0x18b2 <vfprintf+0x266>
    18aa:	88 35       	cpi	r24, 0x58	; 88
    18ac:	09 f0       	breq	.+2      	; 0x18b0 <vfprintf+0x264>
    18ae:	b4 c0       	rjmp	.+360    	; 0x1a18 <vfprintf+0x3cc>
    18b0:	0d c0       	rjmp	.+26     	; 0x18cc <vfprintf+0x280>
    18b2:	80 37       	cpi	r24, 0x70	; 112
    18b4:	21 f0       	breq	.+8      	; 0x18be <vfprintf+0x272>
    18b6:	88 37       	cpi	r24, 0x78	; 120
    18b8:	09 f0       	breq	.+2      	; 0x18bc <vfprintf+0x270>
    18ba:	ae c0       	rjmp	.+348    	; 0x1a18 <vfprintf+0x3cc>
    18bc:	02 c0       	rjmp	.+4      	; 0x18c2 <vfprintf+0x276>
    18be:	20 e1       	ldi	r18, 0x10	; 16
    18c0:	b2 2a       	or	r11, r18
    18c2:	b4 fe       	sbrs	r11, 4
    18c4:	0b c0       	rjmp	.+22     	; 0x18dc <vfprintf+0x290>
    18c6:	84 e0       	ldi	r24, 0x04	; 4
    18c8:	b8 2a       	or	r11, r24
    18ca:	08 c0       	rjmp	.+16     	; 0x18dc <vfprintf+0x290>
    18cc:	24 ff       	sbrs	r18, 4
    18ce:	09 c0       	rjmp	.+18     	; 0x18e2 <vfprintf+0x296>
    18d0:	e6 e0       	ldi	r30, 0x06	; 6
    18d2:	be 2a       	or	r11, r30
    18d4:	06 c0       	rjmp	.+12     	; 0x18e2 <vfprintf+0x296>
    18d6:	28 e0       	ldi	r18, 0x08	; 8
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	05 c0       	rjmp	.+10     	; 0x18e6 <vfprintf+0x29a>
    18dc:	20 e1       	ldi	r18, 0x10	; 16
    18de:	30 e0       	ldi	r19, 0x00	; 0
    18e0:	02 c0       	rjmp	.+4      	; 0x18e6 <vfprintf+0x29a>
    18e2:	20 e1       	ldi	r18, 0x10	; 16
    18e4:	32 e0       	ldi	r19, 0x02	; 2
    18e6:	f8 01       	movw	r30, r16
    18e8:	b7 fe       	sbrs	r11, 7
    18ea:	07 c0       	rjmp	.+14     	; 0x18fa <vfprintf+0x2ae>
    18ec:	60 81       	ld	r22, Z
    18ee:	71 81       	ldd	r23, Z+1	; 0x01
    18f0:	82 81       	ldd	r24, Z+2	; 0x02
    18f2:	93 81       	ldd	r25, Z+3	; 0x03
    18f4:	0c 5f       	subi	r16, 0xFC	; 252
    18f6:	1f 4f       	sbci	r17, 0xFF	; 255
    18f8:	06 c0       	rjmp	.+12     	; 0x1906 <vfprintf+0x2ba>
    18fa:	60 81       	ld	r22, Z
    18fc:	71 81       	ldd	r23, Z+1	; 0x01
    18fe:	80 e0       	ldi	r24, 0x00	; 0
    1900:	90 e0       	ldi	r25, 0x00	; 0
    1902:	0e 5f       	subi	r16, 0xFE	; 254
    1904:	1f 4f       	sbci	r17, 0xFF	; 255
    1906:	a4 01       	movw	r20, r8
    1908:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <__ultoa_invert>
    190c:	a8 2e       	mov	r10, r24
    190e:	a8 18       	sub	r10, r8
    1910:	8f e7       	ldi	r24, 0x7F	; 127
    1912:	68 2e       	mov	r6, r24
    1914:	6b 20       	and	r6, r11
    1916:	66 fe       	sbrs	r6, 6
    1918:	0b c0       	rjmp	.+22     	; 0x1930 <vfprintf+0x2e4>
    191a:	36 2d       	mov	r19, r6
    191c:	3e 7f       	andi	r19, 0xFE	; 254
    191e:	a7 14       	cp	r10, r7
    1920:	50 f4       	brcc	.+20     	; 0x1936 <vfprintf+0x2ea>
    1922:	64 fe       	sbrs	r6, 4
    1924:	0a c0       	rjmp	.+20     	; 0x193a <vfprintf+0x2ee>
    1926:	62 fc       	sbrc	r6, 2
    1928:	08 c0       	rjmp	.+16     	; 0x193a <vfprintf+0x2ee>
    192a:	36 2d       	mov	r19, r6
    192c:	3e 7e       	andi	r19, 0xEE	; 238
    192e:	05 c0       	rjmp	.+10     	; 0x193a <vfprintf+0x2ee>
    1930:	ba 2c       	mov	r11, r10
    1932:	36 2d       	mov	r19, r6
    1934:	03 c0       	rjmp	.+6      	; 0x193c <vfprintf+0x2f0>
    1936:	ba 2c       	mov	r11, r10
    1938:	01 c0       	rjmp	.+2      	; 0x193c <vfprintf+0x2f0>
    193a:	b7 2c       	mov	r11, r7
    193c:	34 ff       	sbrs	r19, 4
    193e:	0d c0       	rjmp	.+26     	; 0x195a <vfprintf+0x30e>
    1940:	fe 01       	movw	r30, r28
    1942:	ea 0d       	add	r30, r10
    1944:	f1 1d       	adc	r31, r1
    1946:	80 81       	ld	r24, Z
    1948:	80 33       	cpi	r24, 0x30	; 48
    194a:	11 f4       	brne	.+4      	; 0x1950 <vfprintf+0x304>
    194c:	39 7e       	andi	r19, 0xE9	; 233
    194e:	09 c0       	rjmp	.+18     	; 0x1962 <vfprintf+0x316>
    1950:	32 ff       	sbrs	r19, 2
    1952:	06 c0       	rjmp	.+12     	; 0x1960 <vfprintf+0x314>
    1954:	b3 94       	inc	r11
    1956:	b3 94       	inc	r11
    1958:	04 c0       	rjmp	.+8      	; 0x1962 <vfprintf+0x316>
    195a:	83 2f       	mov	r24, r19
    195c:	86 78       	andi	r24, 0x86	; 134
    195e:	09 f0       	breq	.+2      	; 0x1962 <vfprintf+0x316>
    1960:	b3 94       	inc	r11
    1962:	33 fd       	sbrc	r19, 3
    1964:	14 c0       	rjmp	.+40     	; 0x198e <vfprintf+0x342>
    1966:	30 ff       	sbrs	r19, 0
    1968:	0f c0       	rjmp	.+30     	; 0x1988 <vfprintf+0x33c>
    196a:	7a 2c       	mov	r7, r10
    196c:	b3 14       	cp	r11, r3
    196e:	60 f4       	brcc	.+24     	; 0x1988 <vfprintf+0x33c>
    1970:	73 0c       	add	r7, r3
    1972:	7b 18       	sub	r7, r11
    1974:	b3 2c       	mov	r11, r3
    1976:	08 c0       	rjmp	.+16     	; 0x1988 <vfprintf+0x33c>
    1978:	b7 01       	movw	r22, r14
    197a:	80 e2       	ldi	r24, 0x20	; 32
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	3c 87       	std	Y+12, r19	; 0x0c
    1980:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <fputc>
    1984:	b3 94       	inc	r11
    1986:	3c 85       	ldd	r19, Y+12	; 0x0c
    1988:	b3 14       	cp	r11, r3
    198a:	b0 f3       	brcs	.-20     	; 0x1978 <vfprintf+0x32c>
    198c:	04 c0       	rjmp	.+8      	; 0x1996 <vfprintf+0x34a>
    198e:	b3 14       	cp	r11, r3
    1990:	10 f4       	brcc	.+4      	; 0x1996 <vfprintf+0x34a>
    1992:	3b 18       	sub	r3, r11
    1994:	01 c0       	rjmp	.+2      	; 0x1998 <vfprintf+0x34c>
    1996:	31 2c       	mov	r3, r1
    1998:	34 ff       	sbrs	r19, 4
    199a:	12 c0       	rjmp	.+36     	; 0x19c0 <vfprintf+0x374>
    199c:	b7 01       	movw	r22, r14
    199e:	80 e3       	ldi	r24, 0x30	; 48
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	3c 87       	std	Y+12, r19	; 0x0c
    19a4:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <fputc>
    19a8:	3c 85       	ldd	r19, Y+12	; 0x0c
    19aa:	32 ff       	sbrs	r19, 2
    19ac:	1e c0       	rjmp	.+60     	; 0x19ea <vfprintf+0x39e>
    19ae:	31 ff       	sbrs	r19, 1
    19b0:	03 c0       	rjmp	.+6      	; 0x19b8 <vfprintf+0x36c>
    19b2:	88 e5       	ldi	r24, 0x58	; 88
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	02 c0       	rjmp	.+4      	; 0x19bc <vfprintf+0x370>
    19b8:	88 e7       	ldi	r24, 0x78	; 120
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	b7 01       	movw	r22, r14
    19be:	0c c0       	rjmp	.+24     	; 0x19d8 <vfprintf+0x38c>
    19c0:	83 2f       	mov	r24, r19
    19c2:	86 78       	andi	r24, 0x86	; 134
    19c4:	91 f0       	breq	.+36     	; 0x19ea <vfprintf+0x39e>
    19c6:	31 fd       	sbrc	r19, 1
    19c8:	02 c0       	rjmp	.+4      	; 0x19ce <vfprintf+0x382>
    19ca:	80 e2       	ldi	r24, 0x20	; 32
    19cc:	01 c0       	rjmp	.+2      	; 0x19d0 <vfprintf+0x384>
    19ce:	8b e2       	ldi	r24, 0x2B	; 43
    19d0:	37 fd       	sbrc	r19, 7
    19d2:	8d e2       	ldi	r24, 0x2D	; 45
    19d4:	b7 01       	movw	r22, r14
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <fputc>
    19dc:	06 c0       	rjmp	.+12     	; 0x19ea <vfprintf+0x39e>
    19de:	b7 01       	movw	r22, r14
    19e0:	80 e3       	ldi	r24, 0x30	; 48
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <fputc>
    19e8:	7a 94       	dec	r7
    19ea:	a7 14       	cp	r10, r7
    19ec:	c0 f3       	brcs	.-16     	; 0x19de <vfprintf+0x392>
    19ee:	aa 94       	dec	r10
    19f0:	f4 01       	movw	r30, r8
    19f2:	ea 0d       	add	r30, r10
    19f4:	f1 1d       	adc	r31, r1
    19f6:	b7 01       	movw	r22, r14
    19f8:	80 81       	ld	r24, Z
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <fputc>
    1a00:	a1 10       	cpse	r10, r1
    1a02:	f5 cf       	rjmp	.-22     	; 0x19ee <vfprintf+0x3a2>
    1a04:	06 c0       	rjmp	.+12     	; 0x1a12 <vfprintf+0x3c6>
    1a06:	b7 01       	movw	r22, r14
    1a08:	80 e2       	ldi	r24, 0x20	; 32
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <fputc>
    1a10:	3a 94       	dec	r3
    1a12:	31 10       	cpse	r3, r1
    1a14:	f8 cf       	rjmp	.-16     	; 0x1a06 <vfprintf+0x3ba>
    1a16:	42 ce       	rjmp	.-892    	; 0x169c <vfprintf+0x50>
    1a18:	f7 01       	movw	r30, r14
    1a1a:	26 81       	ldd	r18, Z+6	; 0x06
    1a1c:	37 81       	ldd	r19, Z+7	; 0x07
    1a1e:	02 c0       	rjmp	.+4      	; 0x1a24 <vfprintf+0x3d8>
    1a20:	2f ef       	ldi	r18, 0xFF	; 255
    1a22:	3f ef       	ldi	r19, 0xFF	; 255
    1a24:	c9 01       	movw	r24, r18
    1a26:	2c 96       	adiw	r28, 0x0c	; 12
    1a28:	0f b6       	in	r0, 0x3f	; 63
    1a2a:	f8 94       	cli
    1a2c:	de bf       	out	0x3e, r29	; 62
    1a2e:	0f be       	out	0x3f, r0	; 63
    1a30:	cd bf       	out	0x3d, r28	; 61
    1a32:	df 91       	pop	r29
    1a34:	cf 91       	pop	r28
    1a36:	1f 91       	pop	r17
    1a38:	0f 91       	pop	r16
    1a3a:	ff 90       	pop	r15
    1a3c:	ef 90       	pop	r14
    1a3e:	df 90       	pop	r13
    1a40:	cf 90       	pop	r12
    1a42:	bf 90       	pop	r11
    1a44:	af 90       	pop	r10
    1a46:	9f 90       	pop	r9
    1a48:	8f 90       	pop	r8
    1a4a:	7f 90       	pop	r7
    1a4c:	6f 90       	pop	r6
    1a4e:	5f 90       	pop	r5
    1a50:	4f 90       	pop	r4
    1a52:	3f 90       	pop	r3
    1a54:	2f 90       	pop	r2
    1a56:	08 95       	ret

00001a58 <strnlen_P>:
    1a58:	fc 01       	movw	r30, r24
    1a5a:	05 90       	lpm	r0, Z+
    1a5c:	61 50       	subi	r22, 0x01	; 1
    1a5e:	70 40       	sbci	r23, 0x00	; 0
    1a60:	01 10       	cpse	r0, r1
    1a62:	d8 f7       	brcc	.-10     	; 0x1a5a <strnlen_P+0x2>
    1a64:	80 95       	com	r24
    1a66:	90 95       	com	r25
    1a68:	8e 0f       	add	r24, r30
    1a6a:	9f 1f       	adc	r25, r31
    1a6c:	08 95       	ret

00001a6e <strnlen>:
    1a6e:	fc 01       	movw	r30, r24
    1a70:	61 50       	subi	r22, 0x01	; 1
    1a72:	70 40       	sbci	r23, 0x00	; 0
    1a74:	01 90       	ld	r0, Z+
    1a76:	01 10       	cpse	r0, r1
    1a78:	d8 f7       	brcc	.-10     	; 0x1a70 <strnlen+0x2>
    1a7a:	80 95       	com	r24
    1a7c:	90 95       	com	r25
    1a7e:	8e 0f       	add	r24, r30
    1a80:	9f 1f       	adc	r25, r31
    1a82:	08 95       	ret

00001a84 <fputc>:
    1a84:	0f 93       	push	r16
    1a86:	1f 93       	push	r17
    1a88:	cf 93       	push	r28
    1a8a:	df 93       	push	r29
    1a8c:	8c 01       	movw	r16, r24
    1a8e:	eb 01       	movw	r28, r22
    1a90:	8b 81       	ldd	r24, Y+3	; 0x03
    1a92:	81 fd       	sbrc	r24, 1
    1a94:	03 c0       	rjmp	.+6      	; 0x1a9c <fputc+0x18>
    1a96:	0f ef       	ldi	r16, 0xFF	; 255
    1a98:	1f ef       	ldi	r17, 0xFF	; 255
    1a9a:	1a c0       	rjmp	.+52     	; 0x1ad0 <fputc+0x4c>
    1a9c:	82 ff       	sbrs	r24, 2
    1a9e:	0d c0       	rjmp	.+26     	; 0x1aba <fputc+0x36>
    1aa0:	2e 81       	ldd	r18, Y+6	; 0x06
    1aa2:	3f 81       	ldd	r19, Y+7	; 0x07
    1aa4:	8c 81       	ldd	r24, Y+4	; 0x04
    1aa6:	9d 81       	ldd	r25, Y+5	; 0x05
    1aa8:	28 17       	cp	r18, r24
    1aaa:	39 07       	cpc	r19, r25
    1aac:	64 f4       	brge	.+24     	; 0x1ac6 <fputc+0x42>
    1aae:	e8 81       	ld	r30, Y
    1ab0:	f9 81       	ldd	r31, Y+1	; 0x01
    1ab2:	01 93       	st	Z+, r16
    1ab4:	f9 83       	std	Y+1, r31	; 0x01
    1ab6:	e8 83       	st	Y, r30
    1ab8:	06 c0       	rjmp	.+12     	; 0x1ac6 <fputc+0x42>
    1aba:	e8 85       	ldd	r30, Y+8	; 0x08
    1abc:	f9 85       	ldd	r31, Y+9	; 0x09
    1abe:	80 2f       	mov	r24, r16
    1ac0:	09 95       	icall
    1ac2:	89 2b       	or	r24, r25
    1ac4:	41 f7       	brne	.-48     	; 0x1a96 <fputc+0x12>
    1ac6:	8e 81       	ldd	r24, Y+6	; 0x06
    1ac8:	9f 81       	ldd	r25, Y+7	; 0x07
    1aca:	01 96       	adiw	r24, 0x01	; 1
    1acc:	9f 83       	std	Y+7, r25	; 0x07
    1ace:	8e 83       	std	Y+6, r24	; 0x06
    1ad0:	c8 01       	movw	r24, r16
    1ad2:	df 91       	pop	r29
    1ad4:	cf 91       	pop	r28
    1ad6:	1f 91       	pop	r17
    1ad8:	0f 91       	pop	r16
    1ada:	08 95       	ret

00001adc <__ultoa_invert>:
    1adc:	fa 01       	movw	r30, r20
    1ade:	aa 27       	eor	r26, r26
    1ae0:	28 30       	cpi	r18, 0x08	; 8
    1ae2:	51 f1       	breq	.+84     	; 0x1b38 <__ultoa_invert+0x5c>
    1ae4:	20 31       	cpi	r18, 0x10	; 16
    1ae6:	81 f1       	breq	.+96     	; 0x1b48 <__ultoa_invert+0x6c>
    1ae8:	e8 94       	clt
    1aea:	6f 93       	push	r22
    1aec:	6e 7f       	andi	r22, 0xFE	; 254
    1aee:	6e 5f       	subi	r22, 0xFE	; 254
    1af0:	7f 4f       	sbci	r23, 0xFF	; 255
    1af2:	8f 4f       	sbci	r24, 0xFF	; 255
    1af4:	9f 4f       	sbci	r25, 0xFF	; 255
    1af6:	af 4f       	sbci	r26, 0xFF	; 255
    1af8:	b1 e0       	ldi	r27, 0x01	; 1
    1afa:	3e d0       	rcall	.+124    	; 0x1b78 <__ultoa_invert+0x9c>
    1afc:	b4 e0       	ldi	r27, 0x04	; 4
    1afe:	3c d0       	rcall	.+120    	; 0x1b78 <__ultoa_invert+0x9c>
    1b00:	67 0f       	add	r22, r23
    1b02:	78 1f       	adc	r23, r24
    1b04:	89 1f       	adc	r24, r25
    1b06:	9a 1f       	adc	r25, r26
    1b08:	a1 1d       	adc	r26, r1
    1b0a:	68 0f       	add	r22, r24
    1b0c:	79 1f       	adc	r23, r25
    1b0e:	8a 1f       	adc	r24, r26
    1b10:	91 1d       	adc	r25, r1
    1b12:	a1 1d       	adc	r26, r1
    1b14:	6a 0f       	add	r22, r26
    1b16:	71 1d       	adc	r23, r1
    1b18:	81 1d       	adc	r24, r1
    1b1a:	91 1d       	adc	r25, r1
    1b1c:	a1 1d       	adc	r26, r1
    1b1e:	20 d0       	rcall	.+64     	; 0x1b60 <__ultoa_invert+0x84>
    1b20:	09 f4       	brne	.+2      	; 0x1b24 <__ultoa_invert+0x48>
    1b22:	68 94       	set
    1b24:	3f 91       	pop	r19
    1b26:	2a e0       	ldi	r18, 0x0A	; 10
    1b28:	26 9f       	mul	r18, r22
    1b2a:	11 24       	eor	r1, r1
    1b2c:	30 19       	sub	r19, r0
    1b2e:	30 5d       	subi	r19, 0xD0	; 208
    1b30:	31 93       	st	Z+, r19
    1b32:	de f6       	brtc	.-74     	; 0x1aea <__ultoa_invert+0xe>
    1b34:	cf 01       	movw	r24, r30
    1b36:	08 95       	ret
    1b38:	46 2f       	mov	r20, r22
    1b3a:	47 70       	andi	r20, 0x07	; 7
    1b3c:	40 5d       	subi	r20, 0xD0	; 208
    1b3e:	41 93       	st	Z+, r20
    1b40:	b3 e0       	ldi	r27, 0x03	; 3
    1b42:	0f d0       	rcall	.+30     	; 0x1b62 <__ultoa_invert+0x86>
    1b44:	c9 f7       	brne	.-14     	; 0x1b38 <__ultoa_invert+0x5c>
    1b46:	f6 cf       	rjmp	.-20     	; 0x1b34 <__ultoa_invert+0x58>
    1b48:	46 2f       	mov	r20, r22
    1b4a:	4f 70       	andi	r20, 0x0F	; 15
    1b4c:	40 5d       	subi	r20, 0xD0	; 208
    1b4e:	4a 33       	cpi	r20, 0x3A	; 58
    1b50:	18 f0       	brcs	.+6      	; 0x1b58 <__ultoa_invert+0x7c>
    1b52:	49 5d       	subi	r20, 0xD9	; 217
    1b54:	31 fd       	sbrc	r19, 1
    1b56:	40 52       	subi	r20, 0x20	; 32
    1b58:	41 93       	st	Z+, r20
    1b5a:	02 d0       	rcall	.+4      	; 0x1b60 <__ultoa_invert+0x84>
    1b5c:	a9 f7       	brne	.-22     	; 0x1b48 <__ultoa_invert+0x6c>
    1b5e:	ea cf       	rjmp	.-44     	; 0x1b34 <__ultoa_invert+0x58>
    1b60:	b4 e0       	ldi	r27, 0x04	; 4
    1b62:	a6 95       	lsr	r26
    1b64:	97 95       	ror	r25
    1b66:	87 95       	ror	r24
    1b68:	77 95       	ror	r23
    1b6a:	67 95       	ror	r22
    1b6c:	ba 95       	dec	r27
    1b6e:	c9 f7       	brne	.-14     	; 0x1b62 <__ultoa_invert+0x86>
    1b70:	00 97       	sbiw	r24, 0x00	; 0
    1b72:	61 05       	cpc	r22, r1
    1b74:	71 05       	cpc	r23, r1
    1b76:	08 95       	ret
    1b78:	9b 01       	movw	r18, r22
    1b7a:	ac 01       	movw	r20, r24
    1b7c:	0a 2e       	mov	r0, r26
    1b7e:	06 94       	lsr	r0
    1b80:	57 95       	ror	r21
    1b82:	47 95       	ror	r20
    1b84:	37 95       	ror	r19
    1b86:	27 95       	ror	r18
    1b88:	ba 95       	dec	r27
    1b8a:	c9 f7       	brne	.-14     	; 0x1b7e <__ultoa_invert+0xa2>
    1b8c:	62 0f       	add	r22, r18
    1b8e:	73 1f       	adc	r23, r19
    1b90:	84 1f       	adc	r24, r20
    1b92:	95 1f       	adc	r25, r21
    1b94:	a0 1d       	adc	r26, r0
    1b96:	08 95       	ret

00001b98 <_exit>:
    1b98:	f8 94       	cli

00001b9a <__stop_program>:
    1b9a:	ff cf       	rjmp	.-2      	; 0x1b9a <__stop_program>
